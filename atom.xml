<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>悟空</title>
  
  <subtitle>悟空的技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-06T15:16:15.228Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>monkey-kong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SSL/TLS 协议</title>
    <link href="http://yoursite.com/2020-06-06-Spring%20Cloud/SSLTLS%20%E5%8D%8F%E8%AE%AE.html"/>
    <id>http://yoursite.com/2020-06-06-Spring Cloud/SSLTLS 协议.html</id>
    <published>2020-06-06T14:13:12.000Z</published>
    <updated>2020-06-06T15:16:15.228Z</updated>
    
    <content type="html"><![CDATA[<p>互联网的通信安全，建立在 SSL/TLS 协议之上。TLS 是 SSL 的升级。下面将简单介绍 SSL/TLS 协议基本原理。这里只说设计思想和运行过程，不涉及具体实现细节，如果需要了解具体实现细节，请参阅读<a href="https://tools.ietf.org/html/rfc5246" target="_blank" rel="external">RFC文档</a>。</p><a id="more"></a><h2 id="1-作用"><a href="#1-作用" class="headerlink" title="1. 作用"></a>1. 作用</h2><p>明文传播即不使用 SSL/TLS 的 HTTP 通信有三大风险：</p><ul><li><strong>窃听风险</strong>（eavesdropping）:第三方获取通信内容</li><li><strong>篡改风险</strong>（tampering）：第三方可以修改通信内容</li><li><strong>冒充风险</strong>（pretending）：第三方可以冒充他们身份参与通信</li></ul><p>SSL/TLS 协议是为了解决这三大风险而设计的：</p><ul><li>所有信息都是<strong>加密传播</strong>，第三方无法窃听</li><li>具有<strong>校验机制</strong>，一旦被篡改，通信双方会立刻发现</li><li>配备<strong>身份证书</strong>，防止身份被冒充</li></ul><h2 id="2-基本运行过程"><a href="#2-基本运行过程" class="headerlink" title="2. 基本运行过程"></a>2. 基本运行过程</h2><p>SSL/TLS 协议的基本思路是采用公钥加密算法。客户端用服务器公钥加密数据，服务器用自己的私钥解密。这里有两个问题：</p><ol><li><p><strong>如何保证公钥不被篡改</strong>？</p><p>将公钥放在<strong>数字证书</strong>中，只要证书是可信的，公钥就是可信的</p></li><li><p>公钥加密计算量太大，如何减少耗用时间？</p><p>解决方法：每次对话（session），客户端和服务器端都生成一个“对话密钥”（session key），用它来加密信息。这个“对话密钥”是<strong>对称加密</strong>，服务器公钥只用于加密“对话密钥”本身，这样就提高了加密运算的消耗时间。</p></li></ol><p>因此 SSL/TLS 协议的基本过程是这样的：</p><ol><li>客户端向服务器端索要并验证公钥。</li><li>双方协商生成“对话密钥”</li><li>双方采用“对话密钥”进行加密通信</li></ol><p>上面过程的1、2步又称为“<strong>握手阶段</strong>”（handshake）</p><h2 id="3-握手阶段的详细过程"><a href="#3-握手阶段的详细过程" class="headerlink" title="3. 握手阶段的详细过程"></a>3. 握手阶段的详细过程</h2><p><img src="../../images/springcloud/session/SSL、TLS协议四次握手.png" alt=""></p><h3 id="3-1-客户端发出请求（ClientHello）"><a href="#3-1-客户端发出请求（ClientHello）" class="headerlink" title="3.1 客户端发出请求（ClientHello）"></a>3.1 客户端发出请求（ClientHello）</h3><p>客户端提供的信息：</p><ol><li>支持的协议版本，比如 TLS 1.0 版</li><li>客户端生成的随机数，稍后用于生成“对话密钥”</li><li>支持的加密算法，比如 RSA 公钥加密</li><li>支持的压缩方法</li></ol><p>这里注意客户端发送的信息中不包含服务器的域名。也就是说理论上服务器只能包含一个网站，否则会分不清楚应该向客户端提供哪个网站的数字证书，这就是为什么通常一台服务器只能有一张数字证书发原因。</p><p>2006 年 TLS 协议中加入了一个 <a href="https://tools.ietf.org/html/rfc4366" target="_blank" rel="external">Server Name Indication</a>  扩展，允许客户端向服务器提供它所请求的域名。</p><h3 id="3-2-服务器响应（ServerHello）"><a href="#3-2-服务器响应（ServerHello）" class="headerlink" title="3.2 服务器响应（ServerHello）"></a>3.2 服务器响应（ServerHello）</h3><p>服务器响应信息：</p><ol><li>确认使用的加密通信协议版本，比如 TLS 1.0。如果浏览器与服务器支持的版本不一致，则服务器关闭加密通信。</li><li><p>服务器生成的随机数，稍后用于生成“对话密钥”</p></li><li><p>确认使用的加密方法，比如 RSA 公钥加密</p></li><li>服务器证书</li><li>客户端证书请求（如果服务器需要确认客户端的身份，如金融机构往往只允许认证客户连入自己的网络，就会向正式客户提供 USB 密钥，里边就包含一张客户端证书）</li></ol><h3 id="3-3-客户端回应"><a href="#3-3-客户端回应" class="headerlink" title="3.3 客户端回应"></a>3.3 客户端回应</h3><p>客户收到服务器回应后，首先<strong>验证服务器证书</strong>。如果证书不是可信的 CA 机构颁布或者证书中的域名与实际域名不一致或者证书已经过期，就会向访问者显示一个警告，由其选择是否还要继续通信。</p><p>如果证书没有问题，客户端就会<strong>从证书中取出服务器的公钥</strong>，然后向服务器发送下面三项信息。</p><ol><li>客户端生成的随机数。<strong>该随机数用服务器公钥加密</strong>，防止被窃听。</li><li>编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送</li><li>客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时也是前面发送的所有内容的 hash 值，用来供服务器检验。</li><li>客户端证书（如果前一步，服务器要求客户端证书）</li></ol><p>上面第一项的随机数是整个握手阶段出现的第三个随机数，又称“pre-master key”。所以客户端和服务端同时有了三个随机数，接着双方就用实现商定的加密方法，各自生成本次会话所用的同一把“会话密钥”。</p><p>问：为什么一定要用三个随机数来生成“会话密钥”？</p><p>答：pre master 的存在在于 SSL 协议不信任每个主机都能产生完全随机的随机数，如果随机数不随机，那么 pre master secret 就有可能被猜测出来，那么仅仅用 pre master secret 最为密钥就不和适了，因此必须引入新的随机因素。所以客户端和服务端加上 pre master secret 三个随机数一同生成的密钥就不容易被猜出来了，一个伪随机可能不完全随机，可是三个伪随机就十分接近随机了，每增加一个自由度，随机性增加的可不是一。这里注意，因为第一个和第二个随机数都是明文传输的，如果客户端随机是一个伪随机，那么第三方通过第一个随机数猜出 pre master key 的几率就大大增加，所以用三个随机数混合加密出一个“会话密钥”。</p><h3 id="3-4-服务器的最后回应"><a href="#3-4-服务器的最后回应" class="headerlink" title="3.4 服务器的最后回应"></a>3.4 服务器的最后回应</h3><p>服务器收到客户端的第三个随机数pre-master key之后，计算生成本次会话所用的”会话密钥”。然后，向客户端最后发送下面信息。</p><ol><li>编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送。</li><li>服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时也是前面发送的所有内容的hash值，用来供客户端校验。</li></ol><p>至此，整个握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用”会话密钥”加密内容。</p><h2 id="4-为什么需要-SSL-TSL-协议？"><a href="#4-为什么需要-SSL-TSL-协议？" class="headerlink" title="4. 为什么需要 SSL\TSL 协议？"></a>4. 为什么需要 SSL\TSL 协议？</h2><p>下图一步步解释了传输一步步加密的过程，最后衍生出较为安全的版本，也就是现在的 SSL\TSL 协议。</p><p><img src="../../images/springcloud/session/SSL、TLS协议由来.png" alt=""></p><h2 id="5-HTTPS-真的安全吗？"><a href="#5-HTTPS-真的安全吗？" class="headerlink" title="5. HTTPS 真的安全吗？"></a>5. HTTPS 真的安全吗？</h2><p>HTTPS 并不是绝对安全的，主要有以下两方面原因：</p><ol><li>CA 要靠法律约束。</li><li>目前浏览器默认都是 HTTP 协议访问，所以代理服务器拦截到请求后，直接返回钓鱼网站，甚至都没有机会跳转 302 来使用 https 进行安全通信。</li></ol><h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html" target="_blank" rel="external">阮一峰老师 https 相关博客</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;互联网的通信安全，建立在 SSL/TLS 协议之上。TLS 是 SSL 的升级。下面将简单介绍 SSL/TLS 协议基本原理。这里只说设计思想和运行过程，不涉及具体实现细节，如果需要了解具体实现细节，请参阅读&lt;a href=&quot;https://tools.ietf.org/html/rfc5246&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC文档&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringCloud" scheme="http://yoursite.com/categories/SpringCloud/"/>
    
    
      <category term="SpringCloud" scheme="http://yoursite.com/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>算法基础之 Morris</title>
    <link href="http://yoursite.com/2020-05-31-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%AE%AD%E7%BB%83%E8%90%A5%E4%B8%80%E6%9C%9F/Morris%E7%AE%97%E6%B3%95.html"/>
    <id>http://yoursite.com/2020-05-31-算法与数据结构/训练营一期/Morris算法.html</id>
    <published>2020-05-31T14:13:12.000Z</published>
    <updated>2020-05-31T15:05:27.981Z</updated>
    
    <content type="html"><![CDATA[<p>算法基础之 Morris</p><a id="more"></a><h2 id="1-算法规则"><a href="#1-算法规则" class="headerlink" title="1. 算法规则"></a>1. 算法规则</h2><ol><li>cur 无左子树， cur = cur.right（<strong>当前节点右移</strong>）</li><li>cur 有左子树，找到左子树<strong>最右节点</strong>，most right<ol><li>如果 most right 的右指针指向 null。most right.right = cur, cur = cur.left（<strong>最右节点右指针指向当前节点，当前节点左移</strong>）</li><li>如果 most right 的右指针指向当前节点（cur）。most right.right=null,cur=cur.right（<strong>最右节点右指针指向 null，当前节点右移</strong>）</li></ol></li></ol><p>例如有如下二叉树(红色 cur 表示当前节点，绿色 cur 表示下一个 cur 节点)：</p><p><img src="../../../images/算法/Morris_1.png" alt=""></p><p><img src="../../../images/算法/Morris_2.png" alt=""></p><p><img src="../../../images/算法/Morris_3.png" alt=""></p><p><img src="../../../images/算法/Morris_4.png" alt=""></p><p><img src="../../../images/算法/Morris_5.png" alt=""></p><p>所以生成的 Morris 序列为： <strong>1,2,4,2,5,1,3,6,3,7</strong> </p><p>例图2：</p><p><img src="../../../images/算法/Morris.png" alt=""></p><p>可以发现有如下特点：</p><ul><li>有左子树的节点肯定会碰到两次</li><li>当当前节点的左子树最右节点的右指针指向自己时，表示时第二次碰到了</li><li>时间复杂度为 O(N)，因为每个节点最多遍历两次</li></ul><h2 id="2-Morris-算法代码实现"><a href="#2-Morris-算法代码实现" class="headerlink" title="2. Morris 算法代码实现"></a>2. Morris 算法代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Morris</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Node d = <span class="keyword">new</span> Node(<span class="number">1</span>);</div><div class="line">        d.left = <span class="keyword">new</span> Node(<span class="number">2</span>);</div><div class="line">        d.right = <span class="keyword">new</span> Node(<span class="number">3</span>);</div><div class="line">        d.left.left = <span class="keyword">new</span> Node(<span class="number">4</span>);</div><div class="line">        d.left.right = <span class="keyword">new</span> Node(<span class="number">5</span>);</div><div class="line">        d.right.left = <span class="keyword">new</span> Node(<span class="number">6</span>);</div><div class="line">        d.right.right = <span class="keyword">new</span> Node(<span class="number">7</span>);</div><div class="line">        morris(d);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> value;</div><div class="line">        <span class="keyword">public</span> Node left;</div><div class="line">        <span class="keyword">public</span> Node right;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</div><div class="line">            value = v;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">morris</span><span class="params">(Node head)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line">        Node cur = head;</div><div class="line">        Node mostRight = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</div><div class="line">            System.out.println(cur.value);</div><div class="line">            <span class="comment">// 左子树为空,cur 右移</span></div><div class="line">            <span class="keyword">if</span> (cur.left == <span class="keyword">null</span>) &#123;</div><div class="line">                cur = cur.right;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 查找左子树最右节点</span></div><div class="line">                mostRight = cur.left;</div><div class="line">                <span class="keyword">while</span> (mostRight.right != <span class="keyword">null</span> &amp;&amp; mostRight.right != cur) &#123;</div><div class="line">                    mostRight = mostRight.right;</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// 最右节点右指针为 null</span></div><div class="line">                <span class="keyword">if</span> (mostRight.right == <span class="keyword">null</span>) &#123;</div><div class="line">                    mostRight.right = cur;</div><div class="line">                    cur = cur.left;</div><div class="line">                &#125; <span class="keyword">else</span> &#123; <span class="comment">// 最右节点右指针为 cur</span></div><div class="line">                    mostRight.right = <span class="keyword">null</span>;</div><div class="line">                    cur = cur.right;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-使用-Morris-实现前、中、后序遍历"><a href="#3-使用-Morris-实现前、中、后序遍历" class="headerlink" title="3. 使用 Morris 实现前、中、后序遍历"></a>3. 使用 Morris 实现前、中、后序遍历</h2><h3 id="先序遍历"><a href="#先序遍历" class="headerlink" title="先序遍历"></a>先序遍历</h3><ul><li>访问根节点</li><li>左子树</li><li>右子树</li></ul><p>实现：有左子树的节点，<strong>第二次访问时不打印即可</strong></p><h3 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h3><ul><li>左子树</li><li>根节点</li><li>右子树</li></ul><p>实现：有左子树的节点，<strong>第一次访问时不打印即可</strong></p><h3 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h3><ul><li>左子树</li><li>右子树</li><li>根节点</li></ul><p>实现：有左子树的节点，<strong>第二次访问时，逆序打印左子树的右边界</strong>，最后单独逆序打印<strong>整树的右边界</strong>即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 最右节点右指针为 null</span></div><div class="line"><span class="keyword">if</span> (mostRight.right == <span class="keyword">null</span>) &#123;</div><div class="line">    mostRight.right = cur;</div><div class="line">    cur = cur.left;</div><div class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 最右节点右指针为 cur</span></div><div class="line">    mostRight.right = <span class="keyword">null</span>;</div><div class="line">    <span class="comment">// 这里注意需要在最右节点右指针设置为 null 后再打印</span></div><div class="line">    printRightBorderRev(cur.left);</div><div class="line">    cur = cur.right;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 反转左子树右边界输出后还原</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printRightBorderRev</span><span class="params">(Node node)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (node == <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line">    <span class="comment">// 反转列表</span></div><div class="line">    Node pre = reverseNode(node);</div><div class="line">    Node preBak = pre;</div><div class="line">    <span class="comment">// 遍历输出</span></div><div class="line">    <span class="keyword">while</span> (pre != <span class="keyword">null</span>) &#123;</div><div class="line">        System.out.print(pre.value + <span class="string">","</span>);</div><div class="line">        pre = pre.right;</div><div class="line">    &#125;</div><div class="line">    node = reverseNode(preBak);</div><div class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Node <span class="title">reverseNode</span><span class="params">(Node node)</span> </span>&#123;</div><div class="line">    Node pre = <span class="keyword">null</span>;</div><div class="line">    Node cur = node;</div><div class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</div><div class="line">        Node tmp = cur.right;</div><div class="line">        cur.right = pre;</div><div class="line">        pre = cur;</div><div class="line">        cur = tmp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> pre;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="4-验证是否为搜索二叉树"><a href="#4-验证是否为搜索二叉树" class="headerlink" title="4. 验证是否为搜索二叉树"></a>4. 验证是否为搜索二叉树</h2><p>线索二叉树：每个节点左节点小于根节点，右节点大于跟节点。</p><p>思路：</p><ul><li>通常的验证流程就是中序遍历，验证每个节点的值比前一个大即可。</li></ul><p>实现：</p><ul><li><strong>中序遍历打印的地方修改为判断即可</strong></li></ul><h2 id="5-二叉树最小高度"><a href="#5-二叉树最小高度" class="headerlink" title="5. 二叉树最小高度"></a>5. 二叉树最小高度</h2><h3 id="5-1-使用-Morris-实现思路"><a href="#5-1-使用-Morris-实现思路" class="headerlink" title="5.1 使用 Morris 实现思路"></a>5.1 使用 Morris 实现思路</h3><ul><li>维护一个变量用于保存最小高度</li><li>记录当前节点的高度<ul><li>cur 无左树，cur 右移动，直接 level++</li><li>cur 有左树<ul><li>第一次访问：cur 左移，也是直接 level++</li><li>第二次访问：cur 右移，level = level - 左子树右边界的高度</li></ul></li></ul></li><li>如果当前节点为叶子节点，尝试更新最小高度<ul><li>cur 有左数，并且第二次访问时，如果前面节点左指针为 null，说明为叶子节点。</li></ul></li><li>最后单独计算整棵树的最右节点是否为叶子节点，如果是则尝试更新最小高度</li></ul><h3 id="5-2-代码"><a href="#5-2-代码" class="headerlink" title="5.2 代码"></a>5.2 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">minHeight</span><span class="params">(Node head)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">    Node cur = head;</div><div class="line">    Node mostRight = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">int</span> minHeight = Integer.MAX_VALUE;</div><div class="line">    <span class="keyword">int</span> level = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">// 左子树为空,cur 右移</span></div><div class="line">        <span class="keyword">if</span> (cur.left == <span class="keyword">null</span>) &#123;</div><div class="line">            cur = cur.right;</div><div class="line">            level++;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// 查找左子树最右节点</span></div><div class="line">            mostRight = cur.left;</div><div class="line">            <span class="comment">// 左子树有边界</span></div><div class="line">            <span class="keyword">int</span> rightBorder = <span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span> (mostRight.right != <span class="keyword">null</span> &amp;&amp; mostRight.right != cur) &#123;</div><div class="line">                mostRight = mostRight.right;</div><div class="line">                rightBorder++;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 最右节点右指针为 null</span></div><div class="line">            <span class="keyword">if</span> (mostRight.right == <span class="keyword">null</span>) &#123;</div><div class="line">                mostRight.right = cur;</div><div class="line">                level++;</div><div class="line">                cur = cur.left;</div><div class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 最右节点右指针为 cur</span></div><div class="line">                <span class="keyword">if</span> (mostRight.left == <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="comment">// 此时的 level 就是叶子节点的 level</span></div><div class="line">                    minHeight = Math.min(minHeight, level);</div><div class="line">                &#125;</div><div class="line">                level -= rightBorder;</div><div class="line">                mostRight.right = <span class="keyword">null</span>;</div><div class="line">                cur = cur.right;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 单独计算整数最右节点</span></div><div class="line">    Node t = head;</div><div class="line">    <span class="keyword">int</span> fullRightBorder = <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (t.right != <span class="keyword">null</span>) &#123;</div><div class="line">        fullRightBorder++;</div><div class="line">        t = t.right;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (t.left == <span class="keyword">null</span>) &#123;</div><div class="line">        minHeight = Math.min(minHeight, fullRightBorder);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> minHeight;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法基础之 Morris&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020-05-31-%E6%95%B0%E6%8D%AE%E5%BA%93/mycat/mycat_01.html"/>
    <id>http://yoursite.com/2020-05-31-数据库/mycat/mycat_01.html</id>
    <published>2020-05-31T12:02:07.641Z</published>
    <updated>2020-05-31T12:02:07.641Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020-05-31-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%AE%AD%E7%BB%83%E8%90%A5%E4%B8%80%E6%9C%9F/%E7%BA%BF%E6%AE%B5%E6%A0%91.html"/>
    <id>http://yoursite.com/2020-05-31-算法与数据结构/训练营一期/线段树.html</id>
    <published>2020-05-31T01:10:05.820Z</published>
    <updated>2020-05-31T01:12:17.304Z</updated>
    
    <content type="html"><![CDATA[<p>int[] arr [1…1000]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;int[] arr [1…1000]&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>122_买卖股票最佳时机||</title>
    <link href="http://yoursite.com/2020-05-28-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/20200529_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII.html"/>
    <id>http://yoursite.com/2020-05-28-算法与数据结构/每日一题/20200529_买卖股票最佳时机II.html</id>
    <published>2020-05-28T14:13:12.000Z</published>
    <updated>2020-05-29T17:09:30.203Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode 第 122 题，买卖股票最佳时机||</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。</p><p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> prices[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> maxProfit = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> prePoint = prices[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prices.length; i++) &#123;</div><div class="line">        <span class="keyword">if</span>(prices[i] &gt; prePoint) &#123;</div><div class="line">            maxProfit = maxProfit + (prices[i] - prePoint);</div><div class="line">        &#125;</div><div class="line">        prePoint = prices[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> maxProfit;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leetcode 第 122 题，买卖股票最佳时机||&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>121_买卖股票最佳时机</title>
    <link href="http://yoursite.com/2020-05-28-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/20200528_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html"/>
    <id>http://yoursite.com/2020-05-28-算法与数据结构/每日一题/20200528_买卖股票最佳时机.html</id>
    <published>2020-05-28T14:13:12.000Z</published>
    <updated>2020-05-29T17:03:34.723Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode 第 121 题，买卖股票最佳时机</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个数组，它的第 <em>i</em> 个元素是一支给定股票第 <em>i</em> 天的价格。</p><p>如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。</p><p>注意：你不能在买入股票前卖出股票。</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">T121_maxProfit</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="comment">//        int[] prices = &#123;7,1,5,3,6,4&#125;; // 5</span></div><div class="line">        <span class="keyword">int</span>[] prices = &#123;<span class="number">7</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>&#125;; <span class="comment">// 0</span></div><div class="line">        System.out.println(maxProfit(prices));</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> prices[])</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> minPrice = Integer.MAX_VALUE;</div><div class="line">        <span class="keyword">int</span> maxProfit = <span class="number">0</span>;</div><div class="line">        <span class="comment">// 不管如何 ,在低价格的时候买入就可以获得最大利润</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prices.length; i++) &#123;</div><div class="line">            <span class="keyword">if</span>(prices[i] &lt; minPrice) &#123;</div><div class="line">                minPrice = prices[i];</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                maxProfit = Math.max(maxProfit, prices[i] - minPrice);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> maxProfit;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leetcode 第 121 题，买卖股票最佳时机&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>123_买卖股票最佳时机|||</title>
    <link href="http://yoursite.com/2020-05-28-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/20200530_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII.html"/>
    <id>http://yoursite.com/2020-05-28-算法与数据结构/每日一题/20200530_买卖股票最佳时机III.html</id>
    <published>2020-05-28T14:13:12.000Z</published>
    <updated>2020-05-29T23:54:30.840Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode 第 123 题，买卖股票最佳时机|||</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。</p><p>注意: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><h3 id="错误思路"><a href="#错误思路" class="headerlink" title="错误思路"></a>错误思路</h3><p>计算每次出现低点时的增长大小，其中最大的两个相加就是需要的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(prices.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> m1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> m2 = <span class="number">0</span>;</div><div class="line">        <span class="comment">// 一段增长利润</span></div><div class="line">        <span class="keyword">int</span> mtmp = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> lowPoint = prices[<span class="number">0</span>];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;prices.length; i++) &#123;</div><div class="line">            <span class="comment">// 出现低点</span></div><div class="line">            <span class="keyword">if</span>(prices[i] &lt; prices[i-<span class="number">1</span>]) &#123;</div><div class="line">                lowPoint = prices[i];</div><div class="line">                <span class="keyword">if</span>(mtmp &gt; m1) &#123; <span class="comment">// 出现第一高利润段</span></div><div class="line">                    m2 = m1;</div><div class="line">                    m1 = mtmp;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(mtmp &gt; m2) &#123; <span class="comment">// 出现第二高利润段</span></div><div class="line">                    m2 = mtmp;</div><div class="line">                &#125;</div><div class="line">                mtmp = <span class="number">0</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mtmp = prices[i] - lowPoint;</div><div class="line">                <span class="comment">// mtmp = Math.max(mtmp, prices[i] - lowPoint);</span></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span>(i == prices.length -<span class="number">1</span>) &#123;</div><div class="line">                <span class="keyword">if</span>(mtmp &gt; m1) &#123; <span class="comment">// 出现第一高利润段</span></div><div class="line">                    m2 = m1;</div><div class="line">                    m1 = mtmp;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(mtmp &gt; m2) &#123; <span class="comment">// 出现第二高利润段</span></div><div class="line">                    m2 = mtmp;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> m1 + m2;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这样想思路出现了问题，最大的利润段不一定是连续增长的。比如<code>{1,2,4,2,5,7,2,4,9}</code>，按照上面的思路算出来结果是12，即<code>(2,5,7)、(2,4,9)</code>。但实际上应该是<code>(1,2,4,2,5,7)、(2,4,9)</code>才对。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leetcode 第 123 题，买卖股票最佳时机|||&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>70_爬楼梯问题</title>
    <link href="http://yoursite.com/2020-05-26-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/20200527_%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97.html"/>
    <id>http://yoursite.com/2020-05-26-算法与数据结构/每日一题/20200527_最大子序列.html</id>
    <published>2020-05-26T14:13:12.000Z</published>
    <updated>2020-05-27T15:12:41.653Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode 第 53 题，最大子序和</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p> 给定一个整数数组 <code>nums</code> ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 </p><p>示例:</p><p>输入: [-2,1,-3,4,-1,2,1,-5,4],<br>输出: 6<br>解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">T53_maxSubArray</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] nums= &#123;-<span class="number">2</span>,<span class="number">1</span>,-<span class="number">3</span>,<span class="number">4</span>,-<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,-<span class="number">5</span>,<span class="number">4</span>&#125;;</div><div class="line">        System.out.println(String.format(<span class="string">"[动态规划]最大子序和&#123;%s&#125;。"</span>, maxSubArray(nums)));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span> nums[])</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="comment">// 截至目前最大子数列</span></div><div class="line">        <span class="keyword">int</span> maxSoFar = nums[<span class="number">0</span>];</div><div class="line">        <span class="comment">// 当前位置为终点的最大子数列</span></div><div class="line">        <span class="keyword">int</span> maxEndingHere = nums[<span class="number">0</span>];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</div><div class="line">            <span class="comment">// 以每个位置为终点的最大子数列 都是基于前一个位置的最大子数列计算得出</span></div><div class="line">            maxEndingHere = Math.max((maxEndingHere + nums[i]), nums[i]);</div><div class="line">            maxSoFar = Math.max(maxSoFar, maxEndingHere);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> maxSoFar;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leetcode 第 53 题，最大子序和&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Manacher 算法</title>
    <link href="http://yoursite.com/2020-05-26-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%AE%AD%E7%BB%83%E8%90%A5%E4%B8%80%E6%9C%9F/Manacher%E7%AE%97%E6%B3%95.html"/>
    <id>http://yoursite.com/2020-05-26-算法与数据结构/训练营一期/Manacher算法.html</id>
    <published>2020-05-26T14:13:12.000Z</published>
    <updated>2020-05-31T15:56:28.581Z</updated>
    
    <content type="html"><![CDATA[<p>Manacher 算法</p><a id="more"></a><p>回文算法。</p><p>求最大回文子串。</p><h2 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h2><p>思路1：直接遍历字符串，以当前节点为中心向两边扩。遇到虚轴为中心时有问题。</p><p>思路2：增加辅助虚轴 <code>31211214 ==&gt; #3#1#2#1#1#2#1#4#</code></p><p>分析复杂度：最差情况 “aaaaaaa” 复杂度 O(N²)。子串长度 2n+1，在中心之前，每次要比较到最左边，在中心之后，每次要比较到最右。</p><h2 id="2-Manacher"><a href="#2-Manacher" class="headerlink" title="2. Manacher"></a>2. Manacher</h2><h3 id="2-1-基本概念"><a href="#2-1-基本概念" class="headerlink" title="2.1 基本概念"></a>2.1 基本概念</h3><ul><li>回文半径、直径、区域</li><li>回文半径数组 pArr[]。类似动态规划，看能否加速</li><li>回文最右边界（int R=-1），R 更新 C 必定也会更新</li><li>中心（int C=-1）</li></ul><h3 id="2-2-算法思路"><a href="#2-2-算法思路" class="headerlink" title="2.2 算法思路"></a>2.2 算法思路</h3><ol><li>i 在 R 外，就是暴力破解，没有任何优化</li><li>i 在 R 内，分为三种小情况<ol><li>i’ 的回文区域彻底在 [L,R] 中，<strong>pArr[i] = pArr[i’]</strong></li><li>i’ 的回文区域在[L,R]外，<strong>pArr[i] = R - i</strong></li><li>i’ 的回文区域左边界等于左边界，<strong>[R’,R]肯定是回文区域，只需从 R+1 开始验证即可</strong>。</li></ol></li></ol><h3 id="2-3-复杂度分析"><a href="#2-3-复杂度分析" class="headerlink" title="2.3 复杂度分析"></a>2.3 复杂度分析</h3><p>时间复杂度：O(N)</p><h3 id="2-4-代码实现"><a href="#2-4-代码实现" class="headerlink" title="2.4 代码实现"></a>2.4 代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Manacher</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(manacher(<span class="string">"a12321aaba"</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">manacher</span><span class="params">(String strOrg)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(strOrg == <span class="keyword">null</span> || strOrg == <span class="string">""</span>) <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> maxC = -<span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 转换为 manacher 字符串</span></div><div class="line">        String str = changeToManacher(strOrg);</div><div class="line">        <span class="keyword">final</span> <span class="keyword">char</span>[] strArr = str.toCharArray();</div><div class="line">        <span class="keyword">int</span> R = -<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> C = -<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span>[] pArr = <span class="keyword">new</span> <span class="keyword">int</span>[str.length()]; <span class="comment">// 回文半径数组</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="comment">// i 在 R 外</span></div><div class="line">            <span class="keyword">if</span> (i &gt; R) &#123;</div><div class="line">                <span class="keyword">int</span> j = <span class="number">0</span>; <span class="comment">// 向两边的偏移量</span></div><div class="line">                <span class="keyword">while</span> ((i + j) &lt; str.length() &amp;&amp; j &lt;= i) &#123;</div><div class="line">                    <span class="keyword">if</span> (strArr[i-j] == strArr[i+j]) &#123;</div><div class="line">                        pArr[i]++;</div><div class="line">                        j++;</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt;= R) &#123; <span class="comment">// i 在 R 内</span></div><div class="line">                <span class="comment">// i' 回文左边界大于 L（R-i =&gt; i'）</span></div><div class="line">                <span class="keyword">if</span> (((R-i)-pArr[R-i])&gt;(R-<span class="number">2</span>*C)) &#123;</div><div class="line">                    pArr[i] = pArr[R-i];</div><div class="line">                <span class="comment">// i' 回文左边界小于 L</span></div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (((R-i)-pArr[R-i])&lt;(R-<span class="number">2</span>*C)) &#123;</div><div class="line">                    pArr[i] = R - i;</div><div class="line">                <span class="comment">// i' 回文左边界等于 L</span></div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    pArr[i] = R - i;</div><div class="line">                    <span class="keyword">int</span> j = R - i;</div><div class="line">                    <span class="keyword">while</span> ((i + j) &lt; str.length() &amp;&amp; j &lt;= i) &#123;</div><div class="line">                        <span class="keyword">if</span>(strArr[i-<span class="number">1</span>] == strArr[i+<span class="number">1</span>]) &#123;</div><div class="line">                            pArr[i]++;</div><div class="line">                            j++;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            C = i;</div><div class="line">            R = C + pArr[i] - <span class="number">1</span>;</div><div class="line"></div><div class="line">            <span class="keyword">if</span>(pArr[i] &gt; maxLen) &#123;</div><div class="line">                maxLen = pArr[i];</div><div class="line">                maxC = C;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        System.out.println(<span class="string">"C:"</span> + maxC + <span class="string">"; len:"</span> + maxLen);</div><div class="line">        <span class="keyword">final</span> String finStr = str.substring(maxC - (maxLen - <span class="number">1</span>), maxC + (maxLen - <span class="number">1</span>) + <span class="number">1</span>);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> finStr;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">changeToManacher</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">"#"</span>);</div><div class="line">        <span class="keyword">final</span> <span class="keyword">char</span>[] chars = str.toCharArray();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</div><div class="line">            sb.append(chars[i]).append(<span class="string">"#"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-5-应用题"><a href="#2-5-应用题" class="headerlink" title="2.5 应用题"></a>2.5 应用题</h3><p>给定一个字符串 str，要求在后边至少给其补充多少个字符串使得它变为一个回文字符串。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Manacher 算法&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>70_爬楼梯问题</title>
    <link href="http://yoursite.com/2020-05-26-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/20200526_%E7%88%AC%E6%A5%BC%E6%A2%AF.html"/>
    <id>http://yoursite.com/2020-05-26-算法与数据结构/每日一题/20200526_爬楼梯.html</id>
    <published>2020-05-26T14:13:12.000Z</published>
    <updated>2020-05-26T15:14:28.448Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode 第 70 题，爬楼梯问题。</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>假设你正在爬楼梯。需要 <em>n</em> 阶你才能到达楼顶。</p><p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p><strong>注意：</strong>给定 <em>n</em> 是一个正整数。</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">T70_climbStairs</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> n = <span class="number">6</span>;</div><div class="line">        System.out.println(String.format(<span class="string">"[动态规划法]爬到第&#123;%s&#125;级楼梯有&#123;%s&#125;种方法。"</span>, n, climbStairs1(n)));</div><div class="line">        System.out.println(String.format(<span class="string">"[暴力法]爬到第&#123;%s&#125;级楼梯有&#123;%s&#125;种方法。"</span>, n, climbStairs2(<span class="number">0</span>, n)));</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">climbStairs1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// dp数组</span></div><div class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</div><div class="line">        dp[<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">        dp[<span class="number">2</span>] = <span class="number">2</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) &#123;</div><div class="line">            <span class="comment">// dp 公式</span></div><div class="line">            dp[i] = dp[i-<span class="number">1</span>] + dp[i-<span class="number">2</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> dp[n];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">climbStairs2</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (i&gt;n) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (i == n) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 爬到第 n 阶等于从第一阶到第n阶段+从第二阶到第n阶</span></div><div class="line">        <span class="keyword">return</span> climbStairs2(i+<span class="number">1</span>, n) + climbStairs2(i+<span class="number">2</span>, n);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leetcode 第 70 题，爬楼梯问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Flex 布局</title>
    <link href="http://yoursite.com/2020-05-25-%E5%89%8D%E7%AB%AF/Flex%E5%B8%83%E5%B1%80.html"/>
    <id>http://yoursite.com/2020-05-25-前端/Flex布局.html</id>
    <published>2020-05-25T14:13:12.000Z</published>
    <updated>2020-05-25T15:33:14.330Z</updated>
    
    <content type="html"><![CDATA[<p>Flex 布局基础概念和语法。</p><a id="more"></a><h2 id="1-启用-Flex-布局"><a href="#1-启用-Flex-布局" class="headerlink" title="1. 启用 Flex 布局"></a>1. 启用 Flex 布局</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*任何一个容器*/</span></div><div class="line"><span class="selector-class">.box</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*行内元素*/</span></div><div class="line"><span class="selector-class">.box</span>&#123;</div><div class="line">  <span class="attribute">display</span>: inline-flex;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*Webkit 内核的浏览器*/</span></div><div class="line"><span class="selector-class">.box</span>&#123;</div><div class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2. 基本概念"></a>2. 基本概念</h2><p><img src="../../images/前端/flex/flex基本概念.png" alt=""></p><ul><li>Flex 容器：采用 Flex 布局的元素</li><li>Flex 项目：容器中子元素</li><li><p>水平主轴(main axis)</p></li><li><p>垂直交叉轴(cross axis)</p></li><li>主轴开始和结束位置(main start、main end)</li><li>交叉轴开始和结束位置(cross start、corss end)</li><li>项目占据主轴空间（main size）</li><li>项目占据交叉轴空间（cross size）</li></ul><h2 id="3-容器属性"><a href="#3-容器属性" class="headerlink" title="3. 容器属性"></a>3. 容器属性</h2><p>六个设置在容器上的属性：</p><ul><li>flex-direction：<strong>主轴排列方向</strong><ul><li>row（默认值）/row-reverse：水平</li><li>column/column-reverse：垂直</li></ul></li><li>flex-wrap：<strong>换行</strong><ul><li>nowrap（默认值）</li><li>wrap</li><li>warp-reverse</li></ul></li><li>flex-flow ：flex-direction 和 flex-wrap 简写形式。<ul><li>默认值：row nowrap</li></ul></li><li>justify-content：<strong>主轴对齐方式</strong><ul><li>flex-start（默认值）</li><li>flex-end</li><li>center</li><li>space-between：两端对齐</li><li>space-around：每个项目两侧间隔相等</li></ul></li><li>align-items：<strong>交叉轴对齐方式</strong><ul><li>flex-start</li><li>flex-end</li><li>center</li><li>baseline：项目第一行文字对齐</li><li>stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul></li><li>align-content：没明白啥意思(换行会导致多跟轴线，这多跟轴线的对齐方式)。多根轴线对齐方式，如果项目只有一根轴线，不起作用<ul><li>flex-start</li><li>flex-end</li><li>center</li><li>space-between</li><li>space-around</li><li>stretch</li></ul></li></ul><h2 id="4-项目的属性"><a href="#4-项目的属性" class="headerlink" title="4. 项目的属性"></a>4. 项目的属性</h2><p>六个设置在项目上的属性。</p><ul><li>order：项目排列顺序，越小越靠前，默认0</li><li>flex-grow：项目放大比例，默认为0，即如果有剩余空间也不放大</li><li>flex-shrink：项目缩小比例，默认为1，即如果空间不足，将该项目缩小</li><li>flex-basis：分配多余空间之前，项目占据的主轴（main size）空间。浏览器根据这个属性，计算主轴是否有多余空间。默认值为 auto，即项目的本来大小</li><li>flex：前面三个属性的简写。默认为：0 1 auto。<strong>后两个属性可选</strong><ul><li>auto:1 1 auto 即放大一倍缩小一倍</li><li>none:0 0 auto 即不放大也不缩小</li></ul></li><li>align-self：允许单个项目与其他项目<strong>交叉轴</strong>不一样的对齐方式，可覆盖 align-items。默认为 auto 即继承父元素的 align-items 属性。如果没有父元素则等同于 stretch</li></ul><p>参考文章： <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flex 布局基础概念和语法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020-05-05-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95.html"/>
    <id>http://yoursite.com/2020-05-05-算法与数据结构/动态规划算法.html</id>
    <published>2020-05-05T14:31:42.515Z</published>
    <updated>2020-04-02T15:52:04.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="动态规划（Dynamic-Programming）"><a href="#动态规划（Dynamic-Programming）" class="headerlink" title="动态规划（Dynamic Programming）"></a>动态规划（Dynamic Programming）</h2><h2 id="1-1-问题引入"><a href="#1-1-问题引入" class="headerlink" title="1.1 问题引入"></a>1.1 问题引入</h2><p>假设您是个土豪，身上带了足够的 1、5、10、20、50、100 元面值的钞票。现在您的目标是凑出某个金额 w，<strong>需要用到尽量少的钞票。</strong></p><p>依据生活经验，我们显然可以采取这样的策略：能用100的就尽量用100的，否则尽量用50的……依次类推。在这种策略下，666=6×100+1×50+1×10+1×5+1×1，共使用了10张钞票。这种策略称为“<strong>贪心</strong>”；</p><p>假设我们面对的局面是“需要凑出w”，<strong>贪心策略会尽快让w变得更小</strong>。能让 w 少 100 就尽量让它少 100，这样我们接下来面对的局面就是凑出 w-100。长期的生活经验表明，贪心策略是正确的。</p><p>但是，如果我们换一组钞票的面值，贪心策略就也许不成立了。如果一个奇葩国家的钞票面额分别是 1、5、11，那么我们在凑出 15 的时候，贪心策略会出错：15=1×11+4×1 （贪心策略使用了5张钞票）。</p><p>为什么会这样呢？贪心策略错在了哪里？<strong>鼠目寸光。</strong>贪心是一种<strong>只考虑眼前情况</strong>的策略。</p><h2 id="1-2-动态规划分析"><a href="#1-2-动态规划分析" class="headerlink" title="1.2 动态规划分析"></a>1.2 动态规划分析</h2><p>重新分析刚刚的例子。w=15 时，我们如果取 11，接下来就面对 w=4 的情况；如果取 5，则接下来面对 w=10的情况。我们发现这些问题都有相同的形式：“给定 w，凑出 w 所用的最少钞票是多少张？”接下来，我们用f(n) 来表示“凑出 n 所需的最少钞票数量”。</p><p>可以分析出方程：F(n) = min{F(n-11)、F(n-5)、F(n-1)} + 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DpDemo2</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(getMinMoneyNums(<span class="number">15</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMinMoneyNums</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(n&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="comment">// 定义一个 dp 数组，保存 F(n) 的值。F(n) 表示凑出 n 元需要的最少钞票数量。</span></div><div class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span> cost;</div><div class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 定义一个 dp map，保存详细信息</span></div><div class="line">        Map&lt;Integer, List&lt;Integer&gt;&gt; dpMap = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        dpMap.put(<span class="number">0</span>,<span class="keyword">new</span> ArrayList&lt;&gt;());</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</div><div class="line">            cost = Integer.MAX_VALUE;</div><div class="line">            List&lt;Integer&gt; dpDetail = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">            <span class="comment">// F(n-1)</span></div><div class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">1</span>) &#123;</div><div class="line">                <span class="comment">// cost = Integer.min(cost, dp[i-1]+1);</span></div><div class="line">                <span class="keyword">if</span>(cost &gt; dp[n-<span class="number">1</span>]+<span class="number">1</span>)&#123;</div><div class="line">                    cost = dp[i-<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">                    dpDetail.clear();</div><div class="line">                    dpDetail.addAll(dpMap.get(i-<span class="number">1</span>));</div><div class="line">                    dpDetail.add(<span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// F(n-1)、F(n-5) 中较小者</span></div><div class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">5</span>) &#123;</div><div class="line">                <span class="comment">// cost = Integer.min(cost, dp[i-5]+1);</span></div><div class="line">                <span class="keyword">if</span>(cost &gt; dp[i-<span class="number">5</span>]+<span class="number">1</span>)&#123;</div><div class="line">                    cost = dp[i-<span class="number">5</span>]+<span class="number">1</span>;</div><div class="line">                    dpDetail.clear();</div><div class="line">                    dpDetail.addAll(dpMap.get(i-<span class="number">5</span>));</div><div class="line">                    dpDetail.add(<span class="number">5</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// F(n-1)、F(n-5)、F(n-11) 中较小者</span></div><div class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">11</span>) &#123;</div><div class="line">                <span class="comment">// cost = Integer.min(cost, dp[i-11]+1);</span></div><div class="line">                <span class="keyword">if</span>(cost &gt; dp[i-<span class="number">11</span>]+<span class="number">1</span>)&#123;</div><div class="line">                    cost = dp[i-<span class="number">11</span>]+<span class="number">1</span>;</div><div class="line">                    dpDetail.clear();</div><div class="line">                    dpDetail.addAll(dpMap.get(i-<span class="number">11</span>));</div><div class="line">                    dpDetail.add(<span class="number">11</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            dp[i] = cost;</div><div class="line">            dpMap.put(i, dpDetail);</div><div class="line">            <span class="comment">// System.out.println(i+":"+dp[i]);</span></div><div class="line">            System.out.println(i+<span class="string">":"</span>+dpDetail);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> dp[n];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>F(n)只与F(n-1)、F(n-5)、F(n-11)的值有关；我们只关心F(w)的值，不关心是怎么凑出 w 的。</p><p>它比起贪心策略，会分别算出取1、5、11的代价，从而做出一个正确决策，这样就避免掉了“鼠目寸光”！</p><p>它与暴力的区别在于我们舍弃了冗余信息。</p><h2 id="1-3-几个简单概念"><a href="#1-3-几个简单概念" class="headerlink" title="1.3 几个简单概念"></a>1.3 几个简单概念</h2><h3 id="1-无后效性"><a href="#1-无后效性" class="headerlink" title="1. 无后效性"></a>1. 无后效性</h3><p>一旦f(n)确定，“我们如何凑出f(n)”就再也用不着了。<strong>“未来与过去无关”，</strong>这就是<strong>无后效性</strong>。</p><h3 id="2-最优子结构"><a href="#2-最优子结构" class="headerlink" title="2. 最优子结构"></a>2. 最优子结构</h3><p>大问题的<strong>最优解</strong>可以由小问题的<strong>最优解</strong>推出，这个性质叫做“最优子结构性质”</p><h3 id="3-判断某问题是否能用-DP-解决"><a href="#3-判断某问题是否能用-DP-解决" class="headerlink" title="3. 判断某问题是否能用 DP 解决"></a>3. 判断某问题是否能用 DP 解决</h3><ul><li>能将大问题拆成几个小问题</li><li>满足无后效性</li><li>满足最优子结构</li></ul><h3 id="4-设计状态"><a href="#4-设计状态" class="headerlink" title="4. 设计状态"></a>4. 设计状态</h3><h3 id="5-状态转移方程"><a href="#5-状态转移方程" class="headerlink" title="5. 状态转移方程"></a>5. 状态转移方程</h3><h2 id="1-4-DP的典型应用"><a href="#1-4-DP的典型应用" class="headerlink" title="1.4 DP的典型应用"></a>1.4 DP的典型应用</h2><h3 id="1-DAG-最短路"><a href="#1-DAG-最短路" class="headerlink" title="1. DAG 最短路"></a>1. DAG 最短路</h3><p>问题：给定一个城市的地图，所有的道路都是单行道，而且不会构成环。每条道路都有过路费，问您从S点到T点花费的最少费用。</p><p><img src="./算法img/DAG问题.jpg" alt=""></p><p>分析：</p><p>想要到 T，要么经过 C，要么经过 D。从而 f(T) = min{f(C)+20, f(D)+10}</p><p>无后效性：对于 P，一旦f(P)确定，以后就只关心f(P)，不关心怎么去的。</p><p>最优子结构：对于 P，我们当然只关心到 P 的最小费用，即f(P)。</p><p>方程：f(P) = min{f(R) + w(R-&gt;P)}；其中 R 为有通路到 P 的所有的点。</p><p>代码实现也很简单，拓扑排序即可。？？？</p><h3 id="2-最长上升子序列"><a href="#2-最长上升子序列" class="headerlink" title="2. 最长上升子序列"></a>2. 最长上升子序列</h3><p>问题：</p><p>给定长度为 n 的序列 a，从 a 中抽取出一个子序列，这个子序列需要单调递增。问最长的上升子序列（LIS）的长度。e.g. 1,5,3,4,6,9,7,8的 LIS 为 1,3,4,6,7,8，长度为 6。</p><p>分析：</p><p>如何设计状态（我是谁）？</p><p>记 f(x) 为以 Ax 结尾的 LIS 长度，那么答案就是 max{f(x)}</p><p>状态 x 从哪里推过来（我从哪里来）？</p><p>考虑比 x 小的每一个 p：如果 Ax &gt; Ap，那么 f(x) 可以取 f(p) + 1</p><p>状态转移方程：f(x)=max{f(p)} + 1。其中，x&gt;p,Ax&gt;Ap</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DpDemo3</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</div><div class="line">        System.out.println(getLis(a));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getLis</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> x,ans = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> n = a.length;</div><div class="line">        <span class="comment">// 定义 dp 数组</span></div><div class="line">        <span class="keyword">int</span>[] f = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</div><div class="line">        <span class="comment">// 边界初始化</span></div><div class="line">        <span class="keyword">for</span>(x=<span class="number">1</span>; x&lt;=n; x++)</div><div class="line">            f[x]=<span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (x=<span class="number">1</span>; x&lt;=n; x++)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>; p&lt;x; p++)&#123;</div><div class="line">                <span class="keyword">if</span>(a[p-<span class="number">1</span>]&lt;a[x-<span class="number">1</span>]) f[x] = Integer.max(f[x], f[p]+<span class="number">1</span>);</div><div class="line">            &#125;</div><div class="line">            System.out.println(<span class="string">"f["</span>+x+<span class="string">"]="</span> + f[x]);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(x=<span class="number">1</span>; x&lt;=n; x++)</div><div class="line">            ans = Integer.max(ans, f[x]);</div><div class="line">        <span class="keyword">return</span> ans;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-LIS问题优化"><a href="#3-LIS问题优化" class="headerlink" title="3. LIS问题优化"></a>3. LIS问题优化</h3><h3 id="4-不同路径"><a href="#4-不同路径" class="headerlink" title="4. 不同路径"></a>4. 不同路径</h3><p>一个机器人位于一个 m x n 网格的左上角，机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角。现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(<span class="keyword">int</span>[][] obstacleGrid)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> R = obstacleGrid.length;</div><div class="line">        <span class="keyword">int</span> C = obstacleGrid[<span class="number">0</span>].length;</div><div class="line"></div><div class="line">        <span class="comment">// 初始格子</span></div><div class="line">        <span class="keyword">if</span> (obstacleGrid[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        obstacleGrid[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 遍历第一行</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; R; i++) &#123;</div><div class="line">            obstacleGrid[i][<span class="number">0</span>] = (obstacleGrid[i][<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; obstacleGrid[i - <span class="number">1</span>][<span class="number">0</span>] == <span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 便利第一列</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; C; i++) &#123;</div><div class="line">            obstacleGrid[<span class="number">0</span>][i] = (obstacleGrid[<span class="number">0</span>][i] == <span class="number">0</span> &amp;&amp; obstacleGrid[<span class="number">0</span>][i - <span class="number">1</span>] == <span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 从[1][1]开始便利</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; R; i++) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; C; j++) &#123;</div><div class="line">                <span class="keyword">if</span> (obstacleGrid[i][j] == <span class="number">0</span>) &#123;</div><div class="line">                    obstacleGrid[i][j] = obstacleGrid[i - <span class="number">1</span>][j] + obstacleGrid[i][j - <span class="number">1</span>];</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    obstacleGrid[i][j] = <span class="number">0</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="keyword">return</span> obstacleGrid[R - <span class="number">1</span>][C - <span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="5-阶梯问题"><a href="#5-阶梯问题" class="headerlink" title="5. 阶梯问题"></a>5. 阶梯问题</h3><p>有n个阶梯，一个人每一步只能跨一个台阶或是两个台阶，问这个人一共有多少种走法？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DpDemo1</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(getPathNums(<span class="number">3</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 有n个阶梯，一个人每一步只能跨一个台阶或是两个台阶，问这个人一共有多少种走法？</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getPathNums</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">        <span class="comment">// 定义一个数组表示x到n有多少种走法</span></div><div class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">        <span class="comment">// 数组初始化为0</span></div><div class="line">        Arrays.fill(dp, <span class="number">0</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(n&lt;<span class="number">1</span>)</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(n ==<span class="number">2</span>)</div><div class="line">            <span class="keyword">return</span> <span class="number">2</span>;</div><div class="line"></div><div class="line">        dp[n-<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">        dp[n-<span class="number">2</span>] = <span class="number">2</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-<span class="number">3</span>; i&gt;=<span class="number">0</span>; i--)</div><div class="line">        &#123;</div><div class="line">            dp[i] = dp[i+<span class="number">1</span>] + dp[i+<span class="number">2</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="6-记忆化搜索实现金额问题"><a href="#6-记忆化搜索实现金额问题" class="headerlink" title="6. 记忆化搜索实现金额问题"></a>6. 记忆化搜索实现金额问题</h3><p>“按顺序递推”和“记忆化搜索”是实现DP的两种方式。</p><h3 id="7-01-背包问题"><a href="#7-01-背包问题" class="headerlink" title="7. 01 背包问题"></a>7. 01 背包问题</h3><h2 id="1-5-参考资料"><a href="#1-5-参考资料" class="headerlink" title="1.5 参考资料"></a>1.5 参考资料</h2><p><a href="https://www.zhihu.com/question/23995189/answer/613096905" target="_blank" rel="external">https://www.zhihu.com/question/23995189/answer/613096905</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;动态规划（Dynamic-Programming）&quot;&gt;&lt;a href=&quot;#动态规划（Dynamic-Programming）&quot; class=&quot;headerlink&quot; title=&quot;动态规划（Dynamic Programming）&quot;&gt;&lt;/a&gt;动态规划（Dynami
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nginx 学习(一)</title>
    <link href="http://yoursite.com/2020-04-28-nignx/Nginx%20%E5%AD%A6%E4%B9%A0(%E4%B8%80).html"/>
    <id>http://yoursite.com/2020-04-28-nignx/Nginx 学习(一).html</id>
    <published>2020-04-28T14:13:12.000Z</published>
    <updated>2020-04-28T14:34:32.881Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx 安装、配置<br><a id="more"></a></p><h2 id="1-Nginx-安装"><a href="#1-Nginx-安装" class="headerlink" title="1. Nginx 安装"></a>1. Nginx 安装</h2><h3 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h3><ul><li>tengine： <a href="http://tengine.taobao.org/download.html" target="_blank" rel="external">http://tengine.taobao.org/download.html</a> </li><li>nginx： <a href="http://nginx.org/en/download.html" target="_blank" rel="external">http://nginx.org/en/download.html</a> </li></ul><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">tar -xzf tengine-2.3.1.tar.gz</div><div class="line">cd tengine-2.3.1</div><div class="line"><span class="meta">#</span><span class="bash"> 安装依赖组件</span></div><div class="line">yum install gcc openssl-devel pcre-devel zlib-devel</div><div class="line"><span class="meta">#</span><span class="bash"> 生成 MakeFile 文件</span></div><div class="line">./ configure --prefix=/usr/local</div><div class="line"><span class="meta">#</span><span class="bash"> 安装</span></div><div class="line">make &amp;&amp; make install</div><div class="line">cd /etc/init.d</div><div class="line"><span class="meta">#</span><span class="bash"> 创建启动 shell 脚本</span></div><div class="line">vi nginx</div><div class="line"><span class="meta">#</span><span class="bash"> nginx 文件授权</span></div><div class="line">chmod 777 nginx</div><div class="line"><span class="meta">#</span><span class="bash"> 启动、停止、重启</span></div><div class="line">service nginx start</div><div class="line">service nginx stop</div><div class="line">service nginx status</div><div class="line">service nginx reload</div></pre></td></tr></table></figure><h3 id="shell-脚本："><a href="#shell-脚本：" class="headerlink" title="shell 脚本："></a>shell 脚本：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> nginx - this script starts and stops the nginx daemon</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> chkconfig:   - 85 15 </span></div><div class="line"><span class="meta">#</span><span class="bash"> description:  Nginx is an HTTP(S) server, HTTP(S) reverse \</span></div><div class="line"><span class="meta">#</span><span class="bash">               proxy and IMAP/POP3 proxy server</span></div><div class="line"><span class="meta">#</span><span class="bash"> processname: nginx</span></div><div class="line"><span class="meta">#</span><span class="bash"> config:      /etc/nginx/nginx.conf</span></div><div class="line"><span class="meta">#</span><span class="bash"> config:      /etc/sysconfig/nginx</span></div><div class="line"><span class="meta">#</span><span class="bash"> pidfile:     /var/run/nginx.pid</span></div><div class="line"> </div><div class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library.</span></div><div class="line">. /etc/rc.d/init.d/functions</div><div class="line"> </div><div class="line"><span class="meta">#</span><span class="bash"> Source networking configuration.</span></div><div class="line">. /etc/sysconfig/network</div><div class="line"> </div><div class="line"><span class="meta">#</span><span class="bash"> Check that networking is up.</span></div><div class="line">[ "$NETWORKING" = "no" ] &amp;&amp; exit 0</div><div class="line"> </div><div class="line">nginx="/usr/local/tengine/sbin/nginx"</div><div class="line">prog=$(basename $nginx)</div><div class="line"> </div><div class="line">NGINX_CONF_FILE="/usr/local/tengine/conf/nginx.conf"</div><div class="line"> </div><div class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</div><div class="line"> </div><div class="line">lockfile=/var/lock/subsys/nginx</div><div class="line"> </div><div class="line">make_dirs() &#123;</div><div class="line"><span class="meta">   #</span><span class="bash"> make required directories</span></div><div class="line">   user=`nginx -V 2&gt;&amp;1 | grep "configure arguments:" | sed 's/[^*]*--user=\([^ ]*\).*/\1/g' -`</div><div class="line">   options=`$nginx -V 2&gt;&amp;1 | grep 'configure arguments:'`</div><div class="line">   for opt in $options; do</div><div class="line">       if [ `echo $opt | grep '.*-temp-path'` ]; then</div><div class="line">           value=`echo $opt | cut -d "=" -f 2`</div><div class="line">           if [ ! -d "$value" ]; then</div><div class="line">               # echo "creating" $value</div><div class="line">               mkdir -p $value &amp;&amp; chown -R $user $value</div><div class="line">           fi</div><div class="line">       fi</div><div class="line">   done</div><div class="line">&#125;</div><div class="line"> </div><div class="line">start() &#123;</div><div class="line">    [ -x $nginx ] || exit 5</div><div class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</div><div class="line">    make_dirs</div><div class="line">    echo -n $"Starting $prog: "</div><div class="line">    daemon $nginx -c $NGINX_CONF_FILE</div><div class="line">    retval=$?</div><div class="line">    echo</div><div class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</div><div class="line">    return $retval</div><div class="line">&#125;</div><div class="line"> </div><div class="line">stop() &#123;</div><div class="line">    echo -n $"Stopping $prog: "</div><div class="line">    killproc $prog -QUIT</div><div class="line">    retval=$?</div><div class="line">    echo</div><div class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</div><div class="line">    return $retval</div><div class="line">&#125;</div><div class="line"> </div><div class="line">restart() &#123;</div><div class="line">    configtest || return $?</div><div class="line">    stop</div><div class="line">    sleep 1</div><div class="line">    start</div><div class="line">&#125;</div><div class="line"> </div><div class="line">reload() &#123;</div><div class="line">    configtest || return $?</div><div class="line">    echo -n $"Reloading $prog: "</div><div class="line">    killproc $nginx -HUP</div><div class="line">    RETVAL=$?</div><div class="line">    echo</div><div class="line">&#125;</div><div class="line"> </div><div class="line">force_reload() &#123;</div><div class="line">    restart</div><div class="line">&#125;</div><div class="line"> </div><div class="line">configtest() &#123;</div><div class="line"><span class="meta">  $</span><span class="bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></div><div class="line">&#125;</div><div class="line"> </div><div class="line">rh_status() &#123;</div><div class="line">    status $prog</div><div class="line">&#125;</div><div class="line"> </div><div class="line">rh_status_q() &#123;</div><div class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</div><div class="line">&#125;</div><div class="line"> </div><div class="line">case "$1" in</div><div class="line">    start)</div><div class="line">        rh_status_q &amp;&amp; exit 0</div><div class="line">        $1</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        rh_status_q || exit 0</div><div class="line">        $1</div><div class="line">        ;;</div><div class="line">    restart|configtest)</div><div class="line">        $1</div><div class="line">        ;;</div><div class="line">    reload)</div><div class="line">        rh_status_q || exit 7</div><div class="line">        $1</div><div class="line">        ;;</div><div class="line">    force-reload)</div><div class="line">        force_reload</div><div class="line">        ;;</div><div class="line">    status)</div><div class="line">        rh_status</div><div class="line">        ;;</div><div class="line">    condrestart|try-restart)</div><div class="line">        rh_status_q || exit 0</div><div class="line">            ;;</div><div class="line">    *)</div><div class="line">        echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</div><div class="line">        exit 2</div><div class="line">esac</div></pre></td></tr></table></figure><h2 id="2-Nginx-配置解析"><a href="#2-Nginx-配置解析" class="headerlink" title="2. Nginx 配置解析"></a>2. Nginx 配置解析</h2><p>Nginx 并发数：max_clients = worker_processes * worker_connections。</p><p>在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  。</p><p>worker_connections 值的设置跟物理内存大小有关，因为并发受 IO 约束，max_clients 的值须小于系统可以打开的最大文件数(<code>cat /proc/sys/fs/file-max</code>)。</p><p>是Linux操作系统对一个进程打开的文件句柄数量的限制(也包含打开的SOCKET数量，可影响MySQL的并发连接数目)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看系统限制</span></div><div class="line"><span class="built_in">ulimit</span> -a</div><div class="line"><span class="comment"># 系统总限制 </span></div><div class="line">/proc/sys/fs/file-max </div><div class="line"><span class="comment"># 当前使用句柄数</span></div><div class="line">/proc/sys/fs/file-nr</div><div class="line"><span class="comment"># 修改句柄数?</span></div><div class="line"><span class="built_in">limit</span> -SHn 65535</div></pre></td></tr></table></figure><p>怎么加速静态文件加速，减少磁盘I/O </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx 安装、配置&lt;br&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>uni-app</title>
    <link href="http://yoursite.com/2020-04-10-%E5%89%8D%E7%AB%AF/uniapp.html"/>
    <id>http://yoursite.com/2020-04-10-前端/uniapp.html</id>
    <published>2020-04-10T14:13:13.000Z</published>
    <updated>2020-04-23T14:01:17.591Z</updated>
    
    <content type="html"><![CDATA[<p>uni-app 学习笔记</p><a id="more"></a><p>技术栈：vue、微信小程序 api</p><ul><li><p>支持通过 npm 安装第三方包</p></li><li><p>支持微信小程序自定义组件以及 SDK</p></li><li><p>兼容 mpvue 组件及项目</p></li><li>App 端支持和原生混合编码</li><li>DCloud 将发布插件市场</li></ul><p>HTML5Plus</p><p>nvue：支持 weex 原生渲染</p><p>native.js：直接使用JS调用 Android API</p><p><a href="http://ask.dcloud.net.cn/article/114" target="_blank" rel="external">http://ask.dcloud.net.cn/article/114</a></p><p>flex 布局</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;uni-app 学习笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue 学习(一)</title>
    <link href="http://yoursite.com/2020-04-10-%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0(1).html"/>
    <id>http://yoursite.com/2020-04-10-前端/vue学习(1).html</id>
    <published>2020-04-10T14:13:12.000Z</published>
    <updated>2020-04-23T14:01:06.775Z</updated>
    
    <content type="html"><![CDATA[<p>vue 基本指令。</p><a id="more"></a><h2 id="1-Vue-指令"><a href="#1-Vue-指令" class="headerlink" title="1. Vue 指令"></a>1. Vue 指令</h2><h3 id="1-1-基本使用"><a href="#1-1-基本使用" class="headerlink" title="1.1 基本使用"></a>1.1 基本使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 引入 vue 源码 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是 Alvin，我今年&#123;&#123;age&#125;&#125;岁了<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// vue 框架对外暴露了一个 vue 构造函数</span></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        <span class="comment">// el:挂载点设置，将 vue 实例和结构层标签进行挂载</span></span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="javascript">        <span class="comment">// 实例数据来源</span></span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="undefined">            age: 100</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="javascript">    <span class="comment">// 修改实例 age 属性值，页面会直接对应修改</span></span></div><div class="line"><span class="undefined">    vm.age = 999;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="1-2-v-text-更新标签文本内容"><a href="#1-2-v-text-更新标签文本内容" class="headerlink" title="1.2 v-text 更新标签文本内容"></a>1.2 v-text 更新标签文本内容</h3><p>简写：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">v-html：和 v-text 类似。如果渲染数据为标签形式字符串，会真的渲染为标签。</div><div class="line"></div><div class="line">```html</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">    &lt;script src=&quot;./js/vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;div id=&quot;app&quot;&gt;</div><div class="line">        &lt;h1&gt;下面是指令操作文本&lt;/h1&gt;</div><div class="line">        &lt;p v-text=&quot;msg&quot;&gt;&lt;/p&gt;</div><div class="line">        &lt;hr&gt;</div><div class="line">        &lt;!-- v-text 的简写 --&gt;</div><div class="line">        &lt;p&gt;&#123;&#123;msg&#125;&#125;&lt;/p&gt;</div><div class="line">        &lt;!-- 如果是标签形式，直接渲染 --&gt;</div><div class="line">        &lt;p v-html=&quot;msg&quot;&gt;&lt;/p&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    var vue = new Vue(&#123;</div><div class="line">        el: &quot;#app&quot;,</div><div class="line">        data: &#123;</div><div class="line">            msg: &quot;&lt;a href=&apos;http://www/baidu.com&apos;&gt;百度&lt;/a&gt;&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><h3 id="1-3-v-show-控制标签显示隐藏"><a href="#1-3-v-show-控制标签显示隐藏" class="headerlink" title="1.3 v-show 控制标签显示隐藏"></a>1.3 v-show 控制标签显示隐藏</h3><p>底层原理其实是通过 CSS 中的 display 属性进行控制</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>吃饭<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-show</span>=<span class="string">"3 &gt; 8"</span>&gt;</span>睡觉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>打豆豆<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        date: &#123;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>通过 v-show 指令实现选项卡功能:</p><p>包含 vue 中函数和按钮点击事件的实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- @click 绑定事件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add('军事')"</span>&gt;</span>军事<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add('新闻')"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add('直播')"</span>&gt;</span>直播<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-show</span>=<span class="string">"'军事'==info"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>军事军事<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>军事军事<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>军事军事<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-show</span>=<span class="string">"'新闻'==info"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>新闻新闻<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>新闻新闻<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>新闻新闻<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-show</span>=<span class="string">"'直播'==info"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>直播直播<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>直播直播<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>直播直播<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            info: <span class="string">"军事"</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 函数</span></span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            add(a) &#123;</span></div><div class="line"><span class="javascript">                <span class="comment">// 修改 vue 实例的属性值</span></span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.info = a;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="1-4-v-if-根据属性值真假渲染标签"><a href="#1-4-v-if-根据属性值真假渲染标签" class="headerlink" title="1.4 v-if 根据属性值真假渲染标签"></a>1.4 v-if 根据属性值真假渲染标签</h3><p>v-show：显示与隐藏标签，标签在节点数上始终有</p><p>v-if：控制标签在节点数上的上树和下树操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你的性别是什么呀？<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-if</span>=<span class="string">"'男'==sex"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-if</span>=<span class="string">"'女'==sex"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-else</span>&gt;</span>未知<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            sex: <span class="string">"aaa"</span></span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="1-5-v-for-循环"><a href="#1-5-v-for-循环" class="headerlink" title="1.5 v-for 循环"></a>1.5 v-for 循环</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>非常常用的指令 v-for<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>循环遍历数字<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">"item in 2"</span>&gt;</span>我是二级标题&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>循环遍历数组<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in arr"</span>&gt;</span>&#123;&#123;item&#125;&#125;=====&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"row in 9"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">v-for</span>=<span class="string">"col in 9"</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            arr: [<span class="string">'吃饭'</span>, <span class="string">'睡觉'</span>, <span class="string">'打豆豆'</span>]</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>v-for 小练习：</p><p>同时学习 vue 中 v-model 用法。</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">    &lt;div id=<span class="string">"app"</span>&gt;</div><div class="line">        &lt;p&gt;</div><div class="line">            &lt;!-- v-model --&gt;</div><div class="line">            &lt;input type=<span class="string">"text"</span> v-model=<span class="string">"hobby"</span>&gt;</div><div class="line">            &lt;button @click="add"&gt;单击我添加爱好&lt;/button&gt;</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;ul&gt;</div><div class="line">            &lt;li v-for="item in arr"&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    var vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">        el: <span class="string">"#app"</span>,</div><div class="line">        data: &#123;</div><div class="line">            arr: [<span class="string">'吃饭'</span>, <span class="string">'睡觉'</span>, <span class="string">'打豆豆'</span>],</div><div class="line">            hobby: <span class="string">''</span></div><div class="line">        &#125;,</div><div class="line">        methods: &#123;</div><div class="line">            add() &#123;</div><div class="line">                <span class="comment">// 向数组尾部添加元素</span></div><div class="line">                vm.arr.push(<span class="keyword">this</span>.hobby);</div><div class="line">                <span class="comment">// 清空输入框</span></div><div class="line">                vm.hobby = <span class="string">''</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="1-6-v-on-绑定事件"><a href="#1-6-v-on-绑定事件" class="headerlink" title="1.6 v-on 绑定事件"></a>1.6 v-on 绑定事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是计数器小案例&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"add"</span>&gt;</span>单击我+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"minus"</span>&gt;</span>单击我-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> @<span class="attr">mouseenter</span>=<span class="string">"haha"</span>&gt;</span>我绑定鼠标移上事件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="undefined">            count: 1</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            add() &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.count++;</span></div><div class="line"><span class="javascript">                <span class="comment">// 设置上限</span></span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.count = <span class="keyword">this</span>.count &gt;=<span class="number">10</span> ? <span class="number">10</span> : <span class="keyword">this</span>.count;</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            minus() &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.count--;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.count = <span class="keyword">this</span>.count &lt;= <span class="number">-6</span> ? <span class="number">-1000000</span> : <span class="keyword">this</span>.count;</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            haha() &#123;</span></div><div class="line"><span class="javascript">                alert(<span class="string">"鼠标在我上面"</span>);</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="1-7-v-model-数据双向绑定"><a href="#1-7-v-model-数据双向绑定" class="headerlink" title="1.7 v-model 数据双向绑定"></a>1.7 v-model 数据双向绑定</h3><p>只能给表单元素使用。给非表单元素使用后没有任何效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是实例属性值&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"msg"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            msg: <span class="string">"我是实例数据"</span></span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="2-Vue-小案例"><a href="#2-Vue-小案例" class="headerlink" title="2. Vue 小案例"></a>2. Vue 小案例</h2><h3 id="2-1-H5-新增元素"><a href="#2-1-H5-新增元素" class="headerlink" title="2.1 H5 新增元素"></a>2.1 H5 新增元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            单选按钮：</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>吃饭</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>睡觉</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>打豆豆</div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            复选按钮</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>飞机</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>大炮</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>坦克</div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            范围条：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            颜色表单元素：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            日历表单元素：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            第几周日历：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"week"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            搜索的表单元素：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            地址格式表单元素：必须输入符合 URL 格式的文本</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            邮箱格式：必须输入邮箱格式的文本</div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-2-调色板"><a href="#2-2-调色板" class="headerlink" title="2.2 调色板"></a>2.2 调色板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 颜色变化元素 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"&#123;width:'400px',height:'100px',</span></span></div><div class="line"><span class="tag"><span class="string">            background:`rgb($&#123;R&#125;,$&#123;G&#125;,$&#123;B&#125;)`&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 三个范围条 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            R：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">v-model</span>=<span class="string">"R"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;R&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            G：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">v-model</span>=<span class="string">"G"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;G&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            B：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">v-model</span>=<span class="string">"B"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;B&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">SCript</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="undefined">            R: 0,</span></div><div class="line"><span class="undefined">            G: 0,</span></div><div class="line"><span class="undefined">            B: 0</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">SCript</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-3-微博发布框效果"><a href="#2-3-微博发布框效果" class="headerlink" title="2.3 微博发布框效果"></a>2.3 微博发布框效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 多行文本框 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">v-model</span>=<span class="string">"info"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;info.length&#125;&#125;/140字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"info.length==0||info.length&gt;140"</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clear"</span>&gt;</span>清除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            info: <span class="string">''</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            clear() &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.info = <span class="string">''</span>;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>动画(待学习)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    * &#123;</span></div><div class="line"><span class="undefined">        margin: 0;</span></div><div class="line"><span class="undefined">        padding: 0;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="css">    <span class="selector-class">.cur</span> &#123;</span></div><div class="line"><span class="undefined">        animation: donghua 2s linear 0s infinite;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="css">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> donghua &#123;</span></div><div class="line"><span class="undefined">        form &#123;</span></div><div class="line"><span class="undefined">            transform: rotate(0deg);</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        to &#123;</span></div><div class="line"><span class="undefined">            transform: rotate(360deg);</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-4-animation"><a href="#2-4-animation" class="headerlink" title="2.4 animation"></a>2.4 animation</h3><p>概述:animation是CSS3中新增的动画样式，它的使用类似于函数，分为两步：声明和调用。</p><p>Animation这个属性可以让程序员在样式当中完成动画效果。</p><p>注意：以前让元素运动一般都是需要通过JS【比如：JQ】</p><p>浏览器私有前缀：</p><table><thead><tr><th>谷歌</th><th>微软</th><th>火狐</th><th>欧鹏</th></tr></thead><tbody><tr><td>webkit</td><td>ms</td><td>Moz</td><td>o</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        * &#123;</span></div><div class="line"><span class="undefined">            margin: 0;</span></div><div class="line"><span class="undefined">            padding: 0;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        div &#123;</span></div><div class="line"><span class="undefined">            position: relative;</span></div><div class="line"><span class="undefined">            width: 300px;</span></div><div class="line"><span class="undefined">            height: 150px;</span></div><div class="line"><span class="undefined">            background-color: cyan;</span></div><div class="line"><span class="css">            <span class="comment">/* 调用动画 */</span></span></div><div class="line"><span class="undefined">            /* </span></div><div class="line"><span class="undefined">              第一个参数：动画名称</span></div><div class="line"><span class="undefined">              第二个参数：每一次动画执行时间</span></div><div class="line"><span class="undefined">              第三个参数：动画执行速率</span></div><div class="line"><span class="undefined">              第四个参数：第一次动画延迟时间</span></div><div class="line"><span class="undefined">              第五个参数：动画执行次数（infinite：无数次）</span></div><div class="line"><span class="undefined">            */</span></div><div class="line"><span class="undefined">            animation: erha 3s linear 0s infinite;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="css">        <span class="comment">/* animation 动画声明 */</span></span></div><div class="line"><span class="css">        <span class="comment">/* webkit 代表谷歌浏览器私有前缀：这个动画只能在谷歌浏览器中使用 */</span></span></div><div class="line"><span class="css">        @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> erha &#123;</span></div><div class="line"><span class="undefined">            form &#123;</span></div><div class="line"><span class="undefined">                left: 0px;</span></div><div class="line"><span class="undefined">                background-color: cyan;</span></div><div class="line"><span class="undefined">                border-radius: 0px 0px 0px 0px;</span></div><div class="line"><span class="undefined">                font-size: 16px;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">            to &#123;</span></div><div class="line"><span class="undefined">                left: 600px;</span></div><div class="line"><span class="undefined">                background-color: red;</span></div><div class="line"><span class="undefined">                border-radius: 0px 0px 100px 0px;</span></div><div class="line"><span class="undefined">                font-size: 30px;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我爱你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-5-watch-监听实例属性"><a href="#2-5-watch-监听实例属性" class="headerlink" title="2.5 watch 监听实例属性"></a>2.5 watch 监听实例属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"msg"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            msg: <span class="string">""</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 监听实例属性值变化地方</span></span></div><div class="line"><span class="undefined">        watch: &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// watch 可以监听实例属性值变化</span></span></div><div class="line"><span class="javascript">            <span class="comment">// 这里书写函数名字务必和监听属性的名字相同</span></span></div><div class="line"><span class="undefined">            msg(a) &#123;</span></div><div class="line"><span class="javascript">                <span class="built_in">console</span>.log(a);</span></div><div class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"你发生变化了"</span>);</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-6-百度预搜索框效果"><a href="#2-6-百度预搜索框效果" class="headerlink" title="2.6 百度预搜索框效果"></a>2.6 百度预搜索框效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- &#123;&#123;url&#125;&#125; --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>请你输入想搜索的内容：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in arr"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            url: <span class="string">""</span>,</span></div><div class="line"><span class="undefined">            arr: []</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        watch: &#123;</span></div><div class="line"><span class="undefined">            url(a) &#123;</span></div><div class="line"><span class="javascript">                <span class="comment">// 将最新的数值作为参数注入</span></span></div><div class="line"><span class="javascript">                <span class="keyword">var</span> path = <span class="string">"https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd="</span> + a + <span class="string">"&amp;cb=a"</span>;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">                <span class="comment">// JSONP 跨域拉取数据</span></span></div><div class="line"><span class="javascript">                <span class="comment">// 实现原理：</span></span></div><div class="line"><span class="javascript">                <span class="comment">// 利用 script 标签 src 属性</span></span></div><div class="line"><span class="javascript">                <span class="comment">// 利用函数声明+调用放在两个不同的服务器上面</span></span></div><div class="line"><span class="javascript">                <span class="comment">// 动态创建 script</span></span></div><div class="line"><span class="javascript">                <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span></div><div class="line"><span class="javascript">                <span class="comment">// 设置 script src 属性</span></span></div><div class="line"><span class="undefined">                script.src = path;</span></div><div class="line"><span class="javascript">                <span class="comment">// 标签上树将请求发出去</span></span></div><div class="line"><span class="javascript">                <span class="built_in">document</span>.body.appendChild(script);</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="javascript">    <span class="comment">// 声明一个同名函数</span></span></div><div class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">obj</span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj);</span></div><div class="line"><span class="javascript">        <span class="comment">// 修改 vue 实例 arr 属性值</span></span></div><div class="line"><span class="undefined">        vm.arr = obj.s;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="3-vue-声明周期函数"><a href="#3-vue-声明周期函数" class="headerlink" title="3. vue 声明周期函数"></a>3. vue 声明周期函数</h2><p>概述：在Vue实例和模板DOM标签进行关联的时候，其实这个阶段经历很多种状态，</p><p>可以通过Vue框架提供生命周期函数，可以在不同的状态下，书写自己业务代码即可。</p><p>注意：在特定的条件下执行函数而已。（面试常问道：八个）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>生命周期函数-------&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>单击我我加上1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="undefined">            msg: 1</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            add() &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.msg++;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        watch: &#123;&#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 生命周期函数</span></span></div><div class="line"><span class="undefined">        beforeCreate() &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 在创建实例之前执行一次，这里访问不到实例的 data 数据</span></span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"beforeCreate 在创建 vm 之前执行一次"</span> + <span class="keyword">this</span>.msg);</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        created() &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 在实例创建完毕后立即执行一次</span></span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"created 在创建 vm 后立即执行一次"</span> + <span class="keyword">this</span>.msg)</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        beforeMount() &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 在实例创建完毕且和模板进行关联之前执行一次</span></span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"beforeMount 我是 vm 即将和模板进行关联"</span> + <span class="keyword">this</span>.msg)</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        mounted() &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 在实际工作中经常从这个生命周期函数拉取服务器数据</span></span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"mounted 我是 vm 我已经和模板关联完毕"</span> + <span class="keyword">this</span>.msg);</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        beforeUpdate() &#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"beforeUpdate 当数据发生变化时立即执行一次"</span> + <span class="keyword">this</span>.msg);</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        updated() &#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"updated 当数据发生变化后立即执行一次"</span> + <span class="keyword">this</span>.msg)</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="4-vue-中-Ajax-技术实现"><a href="#4-vue-中-Ajax-技术实现" class="headerlink" title="4. vue 中 Ajax 技术实现"></a>4. vue 中 Ajax 技术实现</h2><p>axios:它是Vue当中经常使用第三方JavaScript函数库，它主要作用是可以向服务器端发起请求。</p><p>下载axios源码方式：</p><p>CDN：百度静态资源库（百度公司给提供网站：各种常用前端源码文件都有）</p><p><a href="https://www.bootcdn.cn/" target="_blank" rel="external">https://www.bootcdn.cn/</a></p><h3 id="4-1-基本使用"><a href="#4-1-基本使用" class="headerlink" title="4.1 基本使用"></a>4.1 基本使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"fetchData"</span>&gt;</span>单击我发起 GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"postData"</span>&gt;</span>单击我发起 POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            msg: <span class="string">"默认文本"</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            </span></div><div class="line"><span class="undefined">            fetchData() &#123;</span></div><div class="line"><span class="javascript">                <span class="comment">// 发起 GET 请求，拉取服务器新闻数据</span></span></div><div class="line"><span class="javascript">                axios.get(<span class="string">"./data.txt"</span>).then(<span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">this</span>.msg = obj.data;</span></div><div class="line"><span class="undefined">                &#125;);</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            postData() &#123;</span></div><div class="line"><span class="javascript">                axios.post(<span class="string">"./data.txt"</span>).then(<span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">this</span>.msg = obj.data;</span></div><div class="line"><span class="undefined">                &#125;);</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>报跨域问题了。</p><h3 id="4-2-结合生命周期函数一起使用"><a href="#4-2-结合生命周期函数一起使用" class="headerlink" title="4.2 结合生命周期函数一起使用"></a>4.2 结合生命周期函数一起使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in postList"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="undefined">            postList: []</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 生命周期函数：实例已经和模板挂载完毕</span></span></div><div class="line"><span class="undefined">        mounted() &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 向服务器拉取数据</span></span></div><div class="line"><span class="javascript">            axios.get(<span class="string">"./jieyong.txt"</span>).then(<span class="function"><span class="params">obj</span> =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.postList = obj.data.postList;</span></div><div class="line"><span class="undefined">            &#125;);</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="5-组件开发"><a href="#5-组件开发" class="headerlink" title="5. 组件开发"></a>5. 组件开发</h2><h3 id="5-1-组件的基本使用"><a href="#5-1-组件的基本使用" class="headerlink" title="5.1 组件的基本使用"></a>5.1 组件的基本使用</h3><p>Vue当中组件分为两种：</p><p>局部组件务必需要在compoents里面进行注册，使用的时候当中一个自定义标签即可。注意组件名字不能瞎写：不能是已有标签名字。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 用标签形式使用组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jch</span>&gt;</span><span class="tag">&lt;/<span class="name">jch</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">gen</span>&gt;</span><span class="tag">&lt;/<span class="name">gen</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">say-call</span>&gt;</span><span class="tag">&lt;/<span class="name">say-call</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">go</span>&gt;</span><span class="tag">&lt;/<span class="name">go</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 下面这里是组件模板 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"erha"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"gen"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">go</span>&gt;</span><span class="tag">&lt;/<span class="name">go</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in arr"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"memeda"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">go</span>&gt;</span><span class="tag">&lt;/<span class="name">go</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是么么哒<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"go"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sina.com"</span>&gt;</span>新浪<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 全局组件</span></span></div><div class="line"><span class="javascript">    Vue.component(<span class="string">"go"</span>, &#123;</span></div><div class="line"><span class="javascript">        template: <span class="string">"#go"</span></span></div><div class="line"><span class="undefined">    &#125;)</span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;&#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;&#125;,</span></div><div class="line"><span class="undefined">        watch: &#123;&#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 局部组件需要注册</span></span></div><div class="line"><span class="undefined">        components: &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 组件名字</span></span></div><div class="line"><span class="undefined">            jch: &#123;</span></div><div class="line"><span class="javascript">                <span class="comment">// jch 组件模板</span></span></div><div class="line"><span class="javascript">                template: <span class="string">"#erha"</span>,</span></div><div class="line"><span class="javascript">                <span class="comment">// jch 组件数据</span></span></div><div class="line"><span class="undefined">                data() &#123;</span></div><div class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="number">123</span>);</span></div><div class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="undefined">                        msg: 1</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;,</span></div><div class="line"><span class="javascript">                <span class="comment">// 事件处理函数</span></span></div><div class="line"><span class="undefined">                methods: &#123;</span></div><div class="line"><span class="undefined">                    add() &#123;</span></div><div class="line"><span class="javascript">                        <span class="keyword">this</span>.msg++;</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            gen: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#gen"</span>,</span></div><div class="line"><span class="undefined">                data() &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="undefined">                        arr: [1,2,3,4,5]</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="javascript">            <span class="comment">// 组件名字不能是以后标签名字</span></span></div><div class="line"><span class="undefined">            div: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#gen"</span></span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            sayCall: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#memeda"</span></span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="5-2-父组件给子组件传值"><a href="#5-2-父组件给子组件传值" class="headerlink" title="5.2 父组件给子组件传值"></a>5.2 父组件给子组件传值</h3><p>父组件中使用动态参数形式（v-bind）：:msg=”msg”  :car=”car”</p><p>子组件中使用 props 接收：props:[“msg”,”car”]</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-id">#app</span> &#123;</span></div><div class="line"><span class="undefined">            width: 80%;</span></div><div class="line"><span class="undefined">            height: 300px;</span></div><div class="line"><span class="undefined">            background-color: red;</span></div><div class="line"><span class="undefined">            border: 2px;</span></div><div class="line"><span class="undefined">            margin: 0 auto;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="css">        <span class="selector-class">.cur</span> &#123;</span></div><div class="line"><span class="undefined">            width: 400px;</span></div><div class="line"><span class="undefined">            height: 200px;</span></div><div class="line"><span class="undefined">            background-color: chartreuse;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是最大的根组件。。。&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">son</span> <span class="attr">class</span>=<span class="string">"cur"</span> <span class="attr">:msg</span>=<span class="string">"msg"</span>  <span class="attr">:car</span>=<span class="string">"car"</span>&gt;</span><span class="tag">&lt;/<span class="name">son</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"son"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是子组件...&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">            &#123;&#123;car&#125;&#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            msg: <span class="string">"lalallaa"</span>,</span></div><div class="line"><span class="javascript">            car: <span class="string">"奔驰"</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        components: &#123;</span></div><div class="line"><span class="undefined">            son: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#son"</span>,</span></div><div class="line"><span class="javascript">                props:[<span class="string">"msg"</span>,<span class="string">"car"</span>]</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="5-3-子组件给父组件传值"><a href="#5-3-子组件给父组件传值" class="headerlink" title="5.3 子组件给父组件传值"></a>5.3 子组件给父组件传值</h3><ol><li>儿子组件需要通过 $emit 方法触发自定义事件发送数据：第一个参数为自定义事件名字，第二个参数为传递的数据</li><li>父组件接收数据：@gift=”show($event)”</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        * &#123;</span></div><div class="line"><span class="undefined">            margin: 0;</span></div><div class="line"><span class="undefined">            padding: 0;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#app</span> &#123;</span></div><div class="line"><span class="undefined">            width: 80%;</span></div><div class="line"><span class="undefined">            height: 400px;</span></div><div class="line"><span class="undefined">            background-color: skyblue;</span></div><div class="line"><span class="undefined">            margin: 10px auto;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="css">        <span class="selector-class">.cur</span> &#123;</span></div><div class="line"><span class="undefined">            width: 400px;</span></div><div class="line"><span class="undefined">            height: 200px;</span></div><div class="line"><span class="undefined">            background-color: pink;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是王健林-----&#123;&#123;liwu&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 通过自定义事件 gift 接收子组件数据 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">wsc</span> <span class="attr">class</span>=<span class="string">"cur"</span> @<span class="attr">gift</span>=<span class="string">"show($event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">wsc</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 子组件模板 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"wsc"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是王思聪<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"send"</span>&gt;</span>把熊猫TV送给父亲<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        data: &#123;</span></div><div class="line"><span class="javascript">            liwu: <span class="string">''</span></span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 展示儿子礼物</span></span></div><div class="line"><span class="undefined">            show(liwu)&#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.liwu = liwu;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        components: &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 组件 wsc</span></span></div><div class="line"><span class="undefined">            wsc: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#wsc"</span>,</span></div><div class="line"><span class="undefined">                data() &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">return</span>&#123;</span></div><div class="line"><span class="javascript">                        msg: <span class="string">"熊猫TV"</span></span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;,</span></div><div class="line"><span class="undefined">                methods: &#123;</span></div><div class="line"><span class="javascript">                    <span class="comment">// 给父亲传递数据的方法</span></span></div><div class="line"><span class="undefined">                    send() &#123;</span></div><div class="line"><span class="javascript">                        <span class="comment">// 触发自定义事件，通过组件的 $emit 方法</span></span></div><div class="line"><span class="javascript">                        <span class="keyword">this</span>.$emit(<span class="string">"gift"</span>, <span class="keyword">this</span>.msg);</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="5-4-兄弟组件传值"><a href="#5-4-兄弟组件传值" class="headerlink" title="5.4 兄弟组件传值"></a>5.4 兄弟组件传值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-id">#app</span> &#123;</span></div><div class="line"><span class="undefined">            width: 80%;</span></div><div class="line"><span class="undefined">            height: 300px;</span></div><div class="line"><span class="undefined">            background-color: red;</span></div><div class="line"><span class="undefined">            border: 2px;</span></div><div class="line"><span class="undefined">            margin: 0 auto;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="css">        <span class="selector-class">.son</span> &#123;</span></div><div class="line"><span class="undefined">            width: 200px;</span></div><div class="line"><span class="undefined">            height: 100px;</span></div><div class="line"><span class="undefined">            background-color: pink;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">son</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">son</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">son1</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">son1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"son"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>大儿子组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"son1"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>二儿子组件----&#123;&#123;car&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"sendCar"</span>&gt;</span>给哥哥送礼物<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 中央管道：原型</span></span></div><div class="line"><span class="javascript">    Vue.prototype.$bus = <span class="keyword">new</span> Vue;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        dada: &#123;&#125;,</span></div><div class="line"><span class="undefined">        components: &#123;</span></div><div class="line"><span class="undefined">            son: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#son"</span>,</span></div><div class="line"><span class="undefined">                data()&#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="javascript">                        info:<span class="string">''</span></span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;,</span></div><div class="line"><span class="undefined">                mounted() &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">this</span>.$bus.$on(<span class="string">"sendCar"</span>, ($event)=&gt;&#123;</span></div><div class="line"><span class="javascript">                        <span class="keyword">this</span>.info = $event;</span></div><div class="line"><span class="undefined">                    &#125;)</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="undefined">            son1: &#123;</span></div><div class="line"><span class="javascript">                template: <span class="string">"#son1"</span>,</span></div><div class="line"><span class="undefined">                data() &#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="javascript">                        car: <span class="string">"奔驰"</span></span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;,</span></div><div class="line"><span class="undefined">                methods: &#123;</span></div><div class="line"><span class="undefined">                    sendCar() &#123;</span></div><div class="line"><span class="javascript">                        <span class="keyword">this</span>.$bus.$emit(<span class="string">"sendCar"</span>, <span class="keyword">this</span>.car);</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="6-vue-cli-使用"><a href="#6-vue-cli-使用" class="headerlink" title="6. vue-cli 使用"></a>6. vue-cli 使用</h2><p>在公司创建 vue 项目的时候一般都使用脚手架，它是 vue 框架提供的一个工具，可以快速生成 vue 项目，很多常用的 vue 项目依赖会自动安装。</p><p>安装：<code>npm install -g vue-cli</code></p><p>检查是否成功：vue -V</p><p>创建一个项目：vue init webpack myproject</p><p>运行程序：npm run dev</p><p>如果启动失败，删除 nodemodules 文件夹：cnpm install</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue 基本指令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue 学习(二)</title>
    <link href="http://yoursite.com/2020-04-10-%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0(2).html"/>
    <id>http://yoursite.com/2020-04-10-前端/vue学习(2).html</id>
    <published>2020-04-10T14:13:12.000Z</published>
    <updated>2020-05-07T14:10:27.812Z</updated>
    
    <content type="html"><![CDATA[<p>vuex</p><a id="more"></a><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p> <a href="https://unpkg.com/vuex" target="_blank" rel="external">https://unpkg.com/vuex</a> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"/path/to/vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script src=<span class="string">"/path/to/vuex.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">npm install vuex --save</div><div class="line">yarn add vuex</div><div class="line"></div><div class="line">import Vue from 'vue'</div><div class="line">import Vuex from 'vuex'</div><div class="line"></div><div class="line">Vue.use(Vuex)</div></pre></td></tr></table></figure><h2 id="2-Vuex-是什么"><a href="#2-Vuex-是什么" class="headerlink" title="2. Vuex 是什么?"></a>2. Vuex 是什么?</h2><p> Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。 </p><p> 当我们的应用遇到<strong>多个组件共享状态</strong>时，单向数据流的简洁性很容易被破坏： </p><ul><li>多个视图依赖于同一状态 </li><li><p>来自不同视图的行为需要变更同一状态。 </p><p>对于问题一，传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。 </p><p>对于问题二，我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。 </p></li></ul><h2 id="3-开始"><a href="#3-开始" class="headerlink" title="3. 开始"></a>3. 开始</h2><p> 每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器，它包含着你的应用中大部分的<strong>状态 (state)</strong>。Vuex 和单纯的全局对象有以下两点不同： </p><ol><li>Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。 </li><li>你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地<strong>提交 (commit) mutation</strong>。这样使得我们可以方便地跟踪每一个状态的变化 </li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 定义 store</span></span></div><div class="line"><span class="javascript"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span></div><div class="line"><span class="javascript">    <span class="comment">// store 中的状态</span></span></div><div class="line"><span class="undefined">  state: &#123;</span></div><div class="line"><span class="undefined">    count: 0</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="javascript">  <span class="comment">// 修改状态的方法</span></span></div><div class="line"><span class="undefined">  mutations: &#123;</span></div><div class="line"><span class="undefined">    increment (state) &#123;</span></div><div class="line"><span class="undefined">      state.count++</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="comment">// 修改状态</span></span></div><div class="line"><span class="javascript">store.commit(<span class="string">'increment'</span>)</span></div><div class="line"><span class="javascript">store.commit(<span class="string">'increment'</span>)</span></div><div class="line"><span class="javascript"><span class="built_in">console</span>.log(store.state.count) <span class="comment">// -&gt; 2</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p> 为了在 Vue 组件中访问 <code>this.$store</code> property，你需要为 Vue 实例提供创建好的 store。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">    el: <span class="string">"#app"</span>,</div><div class="line">    data: &#123;</div><div class="line">    &#125;,</div><div class="line">    methods: &#123;</div><div class="line">        increment() &#123;</div><div class="line">            <span class="keyword">this</span>.$store.commit(<span class="string">'increment'</span>)</div><div class="line">            <span class="comment">// js 中通过 this.$store 访问状态</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$store.state.count)</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    store: store,</div><div class="line">    computed: &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h2 id="3-核心概念"><a href="#3-核心概念" class="headerlink" title="3. 核心概念"></a>3. 核心概念</h2><h3 id="3-1-State"><a href="#3-1-State" class="headerlink" title="3.1 State"></a>3.1 State</h3><h4 id="单一状态树"><a href="#单一状态树" class="headerlink" title="单一状态树"></a>单一状态树</h4><p> 每个应用将仅仅包含一个 store 实例。 </p><h4 id="在-Vue-组件中获得-Vuex-状态"><a href="#在-Vue-组件中获得-Vuex-状态" class="headerlink" title="在 Vue 组件中获得 Vuex 状态"></a>在 Vue 组件中获得 Vuex 状态</h4><ol><li>计算属性:</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>count+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span></div><div class="line"><span class="undefined">        state: &#123;</span></div><div class="line"><span class="undefined">            count: 0</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        mutations: &#123;</span></div><div class="line"><span class="undefined">            increment(state)&#123;</span></div><div class="line"><span class="undefined">                state.count++;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        computed: &#123;</span></div><div class="line"><span class="javascript">            <span class="comment">// 计算属性实现绑定 state</span></span></div><div class="line"><span class="undefined">            count()&#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">return</span> store.state.count;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="undefined">        methods: &#123;</span></div><div class="line"><span class="undefined">            increment() &#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">this</span>.$store.commit(<span class="string">'increment'</span>)</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 这种形式会注册到所有子组件</span></span></div><div class="line"><span class="undefined">        store</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p> 然而，这种模式导致组件依赖全局状态单例。在模块化的构建系统中，在每个需要使用 state 的组件中需要频繁地导入，并且在测试组件时需要模拟状态。 </p><ol><li><p>直接添加 store 选项</p><p>Vuex 通过 <code>store</code> 选项，提供了一种机制将状态从根组件“注入”到每一个子组件中（需调用 <code>Vue.use(Vuex)</code>）： </p></li></ol><h4 id="mapState-辅助函数"><a href="#mapState-辅助函数" class="headerlink" title="mapState 辅助函数"></a><code>mapState</code> 辅助函数</h4><p> 当一个组件需要获取多个状态的时候，将这些状态都声明为计算属性会有些重复和冗余。为了解决这个问题，我们可以使用 <code>mapState</code> 辅助函数帮助我们生成计算属性，让你少按几次键： </p><p>没太看懂。计算属性简化写法？</p><h4 id="对象展开运算符"><a href="#对象展开运算符" class="headerlink" title="对象展开运算符"></a>对象展开运算符</h4><p>没太看懂。</p><h3 id="3-2-Getter"><a href="#3-2-Getter" class="headerlink" title="3.2 Getter"></a>3.2 Getter</h3><p> 有时候我们需要从 store 中的 state 中派生出一些新的状态。</p><p> Vuex 允许我们在 store 中定义“getter”（可以认为是 store 的计算属性）。就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。 </p><ol><li>通过属性访问</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        已完成任务列表:&#123;&#123;$store.getters.doneTodos&#125;&#125;</div><div class="line">        已完成任务个数:<span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;$store.getters.doneTodosCount&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="comment">// 定义状态库    </span></span></div><div class="line"><span class="javascript"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span></div><div class="line"><span class="undefined">    state: &#123;</span></div><div class="line"><span class="javascript">        <span class="comment">// 所有任务列表</span></span></div><div class="line"><span class="undefined">        todos: [</span></div><div class="line"><span class="javascript">            &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">false</span> &#125;,</span></div><div class="line"><span class="javascript">            &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">true</span> &#125;,</span></div><div class="line"><span class="javascript">            &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">text</span>: <span class="string">'...'</span>, <span class="attr">done</span>: <span class="literal">true</span> &#125;</span></div><div class="line"><span class="undefined">        ]        </span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="javascript">    <span class="comment">// 类似 vue 的 computed</span></span></div><div class="line"><span class="undefined">    getters: &#123;</span></div><div class="line"><span class="javascript">        <span class="comment">// 已处理列表</span></span></div><div class="line"><span class="javascript">        doneTodos: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> state.todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.done)</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 已处理个数</span></span></div><div class="line"><span class="javascript">        doneTodosCount: <span class="function">(<span class="params">state, getters</span>) =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> getters.doneTodos.length</span></div><div class="line"><span class="undefined">        &#125;        </span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">        el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">        computed: &#123;</span></div><div class="line"><span class="undefined">            doneTodosCount () &#123;</span></div><div class="line"><span class="javascript">                <span class="comment">// 通过属性访问状态</span></span></div><div class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">this</span>.$store.getters.doneTodosCount</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// 这种形式会注册到所有子组件</span></span></div><div class="line"><span class="undefined">        store</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><ol><li><p>通过方法访问</p><p>可以通过让 getter 返回一个函数，来实现给 getter 传参。在你对 store 里的数组进行查询时非常有用。 </p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 返回一个函数</div><div class="line">getTodoById: (state) =&gt; (id) =&gt; &#123;</div><div class="line">return state.todos.find(todo =&gt; todo.id === id)</div><div class="line">&#125;</div><div class="line"></div><div class="line">通过ID获取任务:&#123;&#123; $store.getters.getTodoById(2) &#125;&#125;</div></pre></td></tr></table></figure><ol><li><p><code>mapGetters</code> 辅助函数</p><p><code>mapGetters</code> 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性： </p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  computed: &#123;</div><div class="line">  <span class="comment">// 使用对象展开运算符将 getter 混入 computed 对象中</span></div><div class="line">    ...mapGetters([</div><div class="line">      <span class="string">'doneTodosCount'</span>,</div><div class="line">      <span class="string">'anotherGetter'</span>,</div><div class="line">      <span class="comment">// ...</span></div><div class="line">    ])</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p> 如果你想将一个 getter 属性另取一个名字，使用对象形式： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">...mapGetters(&#123;</div><div class="line">  <span class="comment">// 把 `this.doneCount` 映射为 `this.$store.getters.doneTodosCount`</span></div><div class="line">  doneCount: <span class="string">'doneTodosCount'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure><h3 id="3-3-Mutation"><a href="#3-3-Mutation" class="headerlink" title="3.3 Mutation"></a>3.3 Mutation</h3><p> 每个 mutation 都有一个字符串的 <strong>事件类型 (type)</strong> 和 一个 <strong>回调函数 (handler)</strong>。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数： </p><h4 id="定义-mutations"><a href="#定义-mutations" class="headerlink" title="定义 mutations"></a>定义 mutations</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</div><div class="line">  state: &#123;</div><div class="line">    count: <span class="number">1</span></div><div class="line">  &#125;,</div><div class="line">  mutations: &#123;</div><div class="line">    increment (state) &#123;</div><div class="line">      <span class="comment">// 变更状态</span></div><div class="line">      state.count++</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h4 id="唤醒-mutations"><a href="#唤醒-mutations" class="headerlink" title="唤醒 mutations"></a>唤醒 mutations</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 唤醒 mutations handler</span></div><div class="line">store.commit(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><h4 id="提交载荷（Payload）"><a href="#提交载荷（Payload）" class="headerlink" title="提交载荷（Payload）"></a>提交载荷（Payload）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mutations: &#123;</div><div class="line">  increment (state, payload) &#123;</div><div class="line">    state.count += payload.amount</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">store.commit(&apos;increment&apos;, &#123;</div><div class="line">  amount: 10</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h4 id="对象风格的提交方式"><a href="#对象风格的提交方式" class="headerlink" title="对象风格的提交方式"></a>对象风格的提交方式</h4><p> 提交 mutation 的另一种方式是直接使用包含 <code>type</code> 属性的对象： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">store.commit(&#123;</div><div class="line">  type: <span class="string">'increment'</span>,</div><div class="line">  amount: <span class="number">10</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// handler 不变</span></div><div class="line">mutations: &#123;</div><div class="line">  increment (state, payload) &#123;</div><div class="line">    state.count += payload.amount</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="Mutation-需遵守-Vue-的响应规则"><a href="#Mutation-需遵守-Vue-的响应规则" class="headerlink" title="Mutation 需遵守 Vue 的响应规则"></a>Mutation 需遵守 Vue 的响应规则</h4><ol><li><p>最好提前在你的 store 中初始化好所有所需属性。 </p></li><li><p>当需要在对象上添加新属性时，你应该 </p><ol><li><p>使用 <code>Vue.set(obj, &#39;newProp&#39;, 123)</code>, 或者 </p></li><li><p>以新对象替换老对象。state.obj = { …state.obj, newProp: 123 }</p></li></ol></li></ol><h4 id="Mutation-必须是同步函数"><a href="#Mutation-必须是同步函数" class="headerlink" title="Mutation 必须是同步函数"></a>Mutation 必须是同步函数</h4><p>因为异步函数不知道啥时候成功.</p><p> this.$store.commit(‘xxx’) </p><h3 id="3-4-Actioin"><a href="#3-4-Actioin" class="headerlink" title="3.4 Actioin"></a>3.4 Actioin</h3><p>Action 类似于 mutation，不同在于：</p><ul><li>Action 提交的是 mutation，而不是直接变更状态。</li><li>Action 可以包含任意异步操作。</li></ul><h4 id="定义-Action"><a href="#定义-Action" class="headerlink" title="定义 Action"></a>定义 Action</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">actions: &#123;</div><div class="line">    increment(context)&#123;</div><div class="line">        context.commit(<span class="string">'increment'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="分发-Action"><a href="#分发-Action" class="headerlink" title="分发 Action"></a>分发 Action</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">store.dispatch(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure><p>Action 同样支持以载荷形式分发和以对象形式分发。</p><h4 id="在组件中分发-Action"><a href="#在组件中分发-Action" class="headerlink" title="在组件中分发 Action"></a>在组件中分发 Action</h4><p> 你在组件中使用 <code>this.$store.dispatch(&#39;xxx&#39;)</code> 分发 action，或者使用 <code>mapActions</code> 辅助函数将组件的 methods 映射为 <code>store.dispatch</code> 调用（需要先在根节点注入 <code>store</code>）： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;$store.state.count&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"dispatchByNormal"</span>&gt;</span>dispatchByNormal<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- &lt;button @click="incrementAsync"&gt;incrementAsync&lt;/button&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span></div><div class="line"><span class="undefined">    state: &#123;</span></div><div class="line"><span class="undefined">        count: 0</span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="undefined">    mutations: &#123;</span></div><div class="line"><span class="undefined">        increment(state)&#123;</span></div><div class="line"><span class="undefined">            state.count++</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="undefined">    actions: &#123;</span></div><div class="line"><span class="javascript">        <span class="comment">// 定义 action</span></span></div><div class="line"><span class="undefined">        increment(context)&#123;</span></div><div class="line"><span class="javascript">            context.commit(<span class="string">'increment'</span>)</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// action 可以执行异步操作</span></span></div><div class="line"><span class="undefined">        incrementAsync(&#123;commit&#125;)&#123;</span></div><div class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></div><div class="line"><span class="javascript">                commit(<span class="string">'increment'</span>)</span></div><div class="line"><span class="undefined">            &#125;, 1000)</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="comment">// import &#123; mapActions &#125; from 'vuex'</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></div><div class="line"><span class="javascript">    el: <span class="string">"#app"</span>,</span></div><div class="line"><span class="undefined">    methods: &#123;</span></div><div class="line"><span class="undefined">        dispatchByNormal()&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">this</span>.$store.dispatch(<span class="string">'incrementAsync'</span>);</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        <span class="comment">// ...mapActions(&#123;</span></span></div><div class="line"><span class="javascript">        <span class="comment">//     // 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span></div><div class="line"><span class="javascript">        <span class="comment">//     dispatchByMap: 'incrementAsync',</span></span></div><div class="line"><span class="javascript">        <span class="comment">// &#125;)</span></span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="undefined">    store</span></div><div class="line"><span class="undefined">&#125;)</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="组合-Action"><a href="#组合-Action" class="headerlink" title="组合 Action"></a>组合 Action</h4><p>Promise</p><p>async </p><p>await</p><h3 id="3-5-Module"><a href="#3-5-Module" class="headerlink" title="3.5 Module"></a>3.5 Module</h3><p> Vuex 允许我们将 store 分割成<strong>模块（module）</strong>。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割： </p><h4 id="模块的局部状态"><a href="#模块的局部状态" class="headerlink" title="模块的局部状态"></a>模块的局部状态</h4><p> 对于模块内部的 mutation 和 getter，接收的第一个参数是<strong>模块的局部状态对象</strong>。 </p><p> 同样，对于模块内部的 action，局部状态通过 <code>context.state</code> 暴露出来，根节点状态则为 <code>context.rootState</code>： </p><p> 对于模块内部的 getter，根节点状态会作为第三个参数暴露出来： </p><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p> 默认情况下，模块内部的 action、mutation 和 getter 是注册在<strong>全局命名空间</strong>的——这样使得多个模块能够对同一 mutation 或 action 作出响应。 </p><p> 如果希望你的模块具有更高的封装度和复用性，你可以通过添加 <code>namespaced: true</code> 的方式使其成为带命名空间的模块。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vuex&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习(五)</title>
    <link href="http://yoursite.com/2020-04-09-SpringBoot/SpringBoot%E5%AD%A6%E4%B9%A0(5).html"/>
    <id>http://yoursite.com/2020-04-09-SpringBoot/SpringBoot学习(5).html</id>
    <published>2020-04-09T14:13:16.000Z</published>
    <updated>2020-04-23T14:00:45.806Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 自动装配原理。<br><a id="more"></a></p><h2 id="1-SpringBootApplication-注解"><a href="#1-SpringBootApplication-注解" class="headerlink" title="1. SpringBootApplication 注解"></a>1. SpringBootApplication 注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// SpringBootApplication 注解</span></div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class="line"><span class="meta">@Documented</span></div><div class="line"><span class="meta">@Inherited</span></div><div class="line"><span class="meta">@SpringBootConfiguration</span></div><div class="line"><span class="meta">@EnableAutoConfiguration</span></div><div class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123; <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</div><div class="line"><span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</div><div class="line">    </div><div class="line"><span class="comment">// EnableAutoConfiguration 注解</span></div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class="line"><span class="meta">@Documented</span></div><div class="line"><span class="meta">@Inherited</span></div><div class="line"><span class="meta">@AutoConfigurationPackage</span></div><div class="line"><span class="meta">@Import</span>(AutoConfigurationImportSelector.class)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;&#125;</div></pre></td></tr></table></figure><p>可以看到，使用 <code>@Import(AutoConfigurationImportSelector.class)</code>导入了 </p><p><code>AutoConfigurationImportSelector</code>。</p><p>也就是 SpringBoot 程序主类有<code>@Import(AutoConfigurationImportSelector.class)</code>。</p><h2 id="2-启动过程中会解析-Import注解"><a href="#2-启动过程中会解析-Import注解" class="headerlink" title="2. 启动过程中会解析@Import注解"></a>2. 启动过程中会解析<code>@Import</code>注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">refreshContext(context);</div><div class="line"></div><div class="line"><span class="comment">// Invoke factory processors registered as beans in the context.</span></div><div class="line">invokeBeanFactoryPostProcessors(beanFactory);</div><div class="line"></div><div class="line"><span class="comment">// Parse each @Configuration class</span></div><div class="line">ConfigurationClassParser parser = <span class="keyword">new</span> ConfigurationClassParser(</div><div class="line">    <span class="keyword">this</span>.metadataReaderFactory, <span class="keyword">this</span>.problemReporter, <span class="keyword">this</span>.environment,</div><div class="line">    <span class="keyword">this</span>.resourceLoader, <span class="keyword">this</span>.componentScanBeanNameGenerator, registry);</div><div class="line">parser.parse(candidates);</div><div class="line"></div><div class="line"><span class="comment">// 处理主类的 @Import 注解</span></div><div class="line"><span class="keyword">this</span>.deferredImportSelectorHandler.process();</div><div class="line"></div><div class="line"><span class="comment">// 获取需要注入的组件的自动装配类，并依次解析注入</span></div><div class="line">grouping.getImports().forEach(entry -&gt; &#123;</div><div class="line">    ConfigurationClass configurationClass = <span class="keyword">this</span>.configurationClasses.get(entry.getMetadata());</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        processImports(configurationClass, asSourceClass(configurationClass, exclusionFilter),</div><div class="line">                       Collections.singleton(asSourceClass(entry.getImportClassName(), exclusionFilter)),</div><div class="line">                       exclusionFilter, <span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (BeanDefinitionStoreException ex) &#123;</div><div class="line">        <span class="keyword">throw</span> ex;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Throwable ex) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BeanDefinitionStoreException(</div><div class="line">            <span class="string">"Failed to process import candidates for configuration class ["</span> +</div><div class="line">            configurationClass.getMetadata().getClassName() + <span class="string">"]"</span>, ex);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 获取需要装配的组件的自动装配类</span></div><div class="line">AutoConfigurationEntry autoConfigurationEntry = ((AutoConfigurationImportSelector) deferredImportSelector)</div><div class="line">    .getAutoConfigurationEntry(getAutoConfigurationMetadata(), annotationMetadata);</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">protected</span> AutoConfigurationEntry <span class="title">getAutoConfigurationEntry</span><span class="params">(AutoConfigurationMetadata autoConfigurationMetadata, AnnotationMetadata annotationMetadata)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!isEnabled(annotationMetadata)) &#123;</div><div class="line">        <span class="keyword">return</span> EMPTY_ENTRY;</div><div class="line">    &#125;</div><div class="line">    AnnotationAttributes attributes = getAttributes(annotationMetadata);</div><div class="line">    <span class="comment">// 从 spring.factories 中加载所有自动装配类</span></div><div class="line">    List&lt;String&gt; configurations = getCandidateConfigurations(annotationMetadata, attributes);</div><div class="line">    <span class="comment">// 去重</span></div><div class="line">    configurations = removeDuplicates(configurations);</div><div class="line">    <span class="comment">// 配置排除</span></div><div class="line">    Set&lt;String&gt; exclusions = getExclusions(annotationMetadata, attributes);</div><div class="line">    checkExcludedClasses(configurations, exclusions);</div><div class="line">    configurations.removeAll(exclusions);</div><div class="line">    <span class="comment">// 过滤</span></div><div class="line">    configurations = filter(configurations, autoConfigurationMetadata);</div><div class="line">    <span class="comment">// 发布自动装配事件</span></div><div class="line">    fireAutoConfigurationImportEvents(configurations, exclusions);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> AutoConfigurationEntry(configurations, exclusions);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 从 spring.factories 中加载所有自动装配类</span></div><div class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</div><div class="line">    List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(getSpringFactoriesLoaderFactoryClass(),</div><div class="line">                                                                         getBeanClassLoader());</div><div class="line">    Assert.notEmpty(configurations, <span class="string">"No auto configuration classes found in META-INF/spring.factories. If you "</span></div><div class="line">                    + <span class="string">"are using a custom packaging, make sure that file is correct."</span>);</div><div class="line">    <span class="keyword">return</span> configurations;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>父子递归解析配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Recursively process the configuration class and its superclass hierarchy.</span></div><div class="line">SourceClass sourceClass = asSourceClass(configClass, filter);</div><div class="line"><span class="keyword">do</span> &#123;</div><div class="line">    sourceClass = doProcessConfigurationClass(configClass, sourceClass, filter);</div><div class="line">&#125;</div><div class="line"><span class="keyword">while</span> (sourceClass != <span class="keyword">null</span>);</div></pre></td></tr></table></figure><p>递归解析 processImports</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">processImports(configClass, currentSourceClass, importSourceClasses, exclusionFilter, <span class="keyword">false</span>);</div></pre></td></tr></table></figure><h2 id="3-HttpEncodingAutoConfiguration-例子"><a href="#3-HttpEncodingAutoConfiguration-例子" class="headerlink" title="3. HttpEncodingAutoConfiguration 例子"></a>3. HttpEncodingAutoConfiguration 例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">表明这是一个配置类，</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@Configuration</span>(proxyBeanMethods = <span class="keyword">false</span>)</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">启动指定类的ConfigurationProperties功能,进入HttpProperties查看，将配置文件中对应的值和HttpProperties绑定起来，并把HttpProperties加入到ioc容器中</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@EnableConfigurationProperties</span>(HttpProperties.class)</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">spring底层@Confitional注解，根据不同的条件判断，如果满足指定的条件，整个配置类里面的配置就会生效</span></div><div class="line"><span class="comment">此时表示判断当前应用是否是web应用，如果是，那么配置类生效</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@ConditionalOnWebApplication</span>(type = ConditionalOnWebApplication.Type.SERVLET)</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">判断当前项目由没有这个类CharacterEncodingFilter，springmvc中进行乱码解决的过滤器</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@ConditionalOnClass</span>(CharacterEncodingFilter.class)</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">判断配置文件中是否存在某个配置：spring.http.encoding.enabled</span></div><div class="line"><span class="comment">如果不存在，判断也是成立的，</span></div><div class="line"><span class="comment">即使我们配置文件中不配置spring.http.encoding.enabled=true，也是默认生效的</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@ConditionalOnProperty</span>(prefix = <span class="string">"spring.http.encoding"</span>, value = <span class="string">"enabled"</span>, matchIfMissing = <span class="keyword">true</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingAutoConfiguration</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//和springboot的配置文件映射</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> HttpProperties.Encoding properties;</div><div class="line"></div><div class="line">    <span class="comment">//只有一个有参构造器的情况下，参数的值就会从容器中拿</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">HttpEncodingAutoConfiguration</span><span class="params">(HttpProperties properties)</span> </span>&#123;</div><div class="line"><span class="keyword">this</span>.properties = properties.getEncoding();</div><div class="line">&#125;</div><div class="line"></div><div class="line">    <span class="comment">//给容器中添加一个组件，这个组件的某些值需要从properties中获取</span></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="meta">@ConditionalOnMissingBean</span><span class="comment">//判断容器中是否有此组件</span></div><div class="line"><span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</div><div class="line">CharacterEncodingFilter filter = <span class="keyword">new</span> OrderedCharacterEncodingFilter();</div><div class="line">filter.setEncoding(<span class="keyword">this</span>.properties.getCharset().name());</div><div class="line">filter.setForceRequestEncoding(<span class="keyword">this</span>.properties.shouldForce(Type.REQUEST));</div><div class="line">filter.setForceResponseEncoding(<span class="keyword">this</span>.properties.shouldForce(Type.RESPONSE));</div><div class="line"><span class="keyword">return</span> filter;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> LocaleCharsetMappingsCustomizer <span class="title">localeCharsetMappingsCustomizer</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> LocaleCharsetMappingsCustomizer(<span class="keyword">this</span>.properties);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LocaleCharsetMappingsCustomizer</span></span></div><div class="line"><span class="class"><span class="keyword">implements</span> <span class="title">WebServerFactoryCustomizer</span>&lt;<span class="title">ConfigurableServletWebServerFactory</span>&gt;, <span class="title">Ordered</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> HttpProperties.Encoding properties;</div><div class="line"></div><div class="line">LocaleCharsetMappingsCustomizer(HttpProperties.Encoding properties) &#123;</div><div class="line"><span class="keyword">this</span>.properties = properties;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(ConfigurableServletWebServerFactory factory)</span> </span>&#123;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.properties.getMapping() != <span class="keyword">null</span>) &#123;</div><div class="line">factory.setLocaleCharsetMappings(<span class="keyword">this</span>.properties.getMapping());</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="4-Conditional-控制组件装配"><a href="#4-Conditional-控制组件装配" class="headerlink" title="4. @Conditional 控制组件装配"></a>4. @Conditional 控制组件装配</h2><table><thead><tr><th>@Conditional扩展注解</th><th>作用</th></tr></thead><tbody><tr><td>@ConditionalOnJava</td><td>系统的java版本是否符合要求</td></tr><tr><td>@ConditionalOnBean</td><td>容器中存在指定Bean</td></tr><tr><td>@ConditionalOnMissingBean</td><td>容器中不存在指定Bean</td></tr><tr><td>@ConditionalOnExpression</td><td>满足SpEL表达式</td></tr><tr><td>@ConditionalOnClass</td><td>系统中有指定的类</td></tr><tr><td>@ConditionalOnMissingClass</td><td>系统中没有指定的类</td></tr><tr><td>@ConditionalOnSingleCandidate</td><td>容器中只有一个指定的Bean，或者是首选Bean</td></tr><tr><td>@ConditionalOnProperty</td><td>系统中指定的属性是否有指定的值</td></tr><tr><td>@ConditionalOnResource</td><td>类路径下是否存在指定资源文件</td></tr><tr><td>@ConditionOnWebApplication</td><td>当前是web环境</td></tr><tr><td>@ConditionalOnNotWebApplication</td><td>当前不是web环境</td></tr><tr><td>@ConditionalOnJndi</td><td>JNDI存在指定项</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot 自动装配原理。&lt;br&gt;
    
    </summary>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/categories/Srping-Boot/"/>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/tags/Srping-Boot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习(四)</title>
    <link href="http://yoursite.com/2020-04-09-SpringBoot/SpringBoot%E5%AD%A6%E4%B9%A0(4).html"/>
    <id>http://yoursite.com/2020-04-09-SpringBoot/SpringBoot学习(4).html</id>
    <published>2020-04-09T14:13:15.000Z</published>
    <updated>2020-04-23T13:58:47.542Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 启动源码分析。<br><a id="more"></a></p><h2 id="1-启动大体流程"><a href="#1-启动大体流程" class="headerlink" title="1. 启动大体流程"></a>1. 启动大体流程</h2><ol><li>SpringApplication 构造器初始化<ul><li>应用程序类型。NONE、SERVLET、REACTIVE</li><li>加载所有 ApplicationContextInitializer</li><li>加载所有  ApplicationListener</li><li>找到程序运行主类</li></ul></li><li>开启计时器</li><li>设置 java.awt.headless 系统属性</li><li>获取 EventPublishingRunListeners</li><li>listeners.starting();</li><li>配置应用程序环境</li><li>listeners.environmentPrepared(environment);</li><li>设置系统属性 spring.beaninfo.ignore</li><li>打印 banner</li><li>创建应用程序上下文：context = createApplicationContext();</li><li>创建异常报告器</li><li>准备应用程序上下文<ul><li>listeners.contextPrepared(context);</li><li>listeners.contextLoaded(context);</li></ul></li><li>刷新应用程序上下文</li><li>计时结束</li><li>listeners.started(context);</li><li>listeners.running(context);</li></ol><h2 id="2-启动流程图片"><a href="#2-启动流程图片" class="headerlink" title="2. 启动流程图片"></a>2. 启动流程图片</h2><p><img src="../../images/springboot/springboot2.2.2启动过程流程.png" alt=""></p><h2 id="3-spring-factories"><a href="#3-spring-factories" class="headerlink" title="3. spring.factories"></a>3. spring.factories</h2><h3 id="3-1-spring-boot-2-2-6-RELEASE-jar"><a href="#3-1-spring-boot-2-2-6-RELEASE-jar" class="headerlink" title="3.1 spring-boot-2.2.6.RELEASE.jar"></a>3.1 spring-boot-2.2.6.RELEASE.jar</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"># PropertySource Loaders</div><div class="line">org.springframework.boot.env.PropertySourceLoader=\</div><div class="line">org.springframework.boot.env.PropertiesPropertySourceLoader,\</div><div class="line">org.springframework.boot.env.YamlPropertySourceLoader</div><div class="line"></div><div class="line"># Run Listeners</div><div class="line">org.springframework.boot.SpringApplicationRunListener=\</div><div class="line">org.springframework.boot.context.event.EventPublishingRunListener</div><div class="line"></div><div class="line"># Error Reporters</div><div class="line">org.springframework.boot.SpringBootExceptionReporter=\</div><div class="line">org.springframework.boot.diagnostics.FailureAnalyzers</div><div class="line"></div><div class="line"># Application Context Initializers</div><div class="line">org.springframework.context.ApplicationContextInitializer=\</div><div class="line">org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer,\</div><div class="line">org.springframework.boot.context.ContextIdApplicationContextInitializer,\</div><div class="line">org.springframework.boot.context.config.DelegatingApplicationContextInitializer,\</div><div class="line">org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer,\</div><div class="line">org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer</div><div class="line"></div><div class="line"># Application Listeners</div><div class="line">org.springframework.context.ApplicationListener=\</div><div class="line">org.springframework.boot.ClearCachesApplicationListener,\</div><div class="line">org.springframework.boot.builder.ParentContextCloserApplicationListener,\</div><div class="line">org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor,\</div><div class="line">org.springframework.boot.context.FileEncodingApplicationListener,\</div><div class="line">org.springframework.boot.context.config.AnsiOutputApplicationListener,\</div><div class="line">org.springframework.boot.context.config.ConfigFileApplicationListener,\</div><div class="line">org.springframework.boot.context.config.DelegatingApplicationListener,\</div><div class="line">org.springframework.boot.context.logging.ClasspathLoggingApplicationListener,\</div><div class="line">org.springframework.boot.context.logging.LoggingApplicationListener,\</div><div class="line">org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener</div><div class="line"></div><div class="line"># Environment Post Processors</div><div class="line">org.springframework.boot.env.EnvironmentPostProcessor=\</div><div class="line">org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor,\</div><div class="line">org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor,\</div><div class="line">org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor,\</div><div class="line">org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor</div><div class="line"></div><div class="line"># Failure Analyzers</div><div class="line">org.springframework.boot.diagnostics.FailureAnalyzer=\</div><div class="line">org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer,\</div><div class="line">org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer</div><div class="line"></div><div class="line"># FailureAnalysisReporters</div><div class="line">org.springframework.boot.diagnostics.FailureAnalysisReporter=\</div><div class="line">org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter</div></pre></td></tr></table></figure><h3 id="3-2-spring-boot-autoconfigure-2-2-6-RELEASE-jar"><a href="#3-2-spring-boot-autoconfigure-2-2-6-RELEASE-jar" class="headerlink" title="3.2 spring-boot-autoconfigure-2.2.6.RELEASE.jar"></a>3.2 spring-boot-autoconfigure-2.2.6.RELEASE.jar</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div></pre></td><td class="code"><pre><div class="line"># Initializers</div><div class="line">org.springframework.context.ApplicationContextInitializer=\</div><div class="line">org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\</div><div class="line">org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener</div><div class="line"></div><div class="line"># Application Listeners</div><div class="line">org.springframework.context.ApplicationListener=\</div><div class="line">org.springframework.boot.autoconfigure.BackgroundPreinitializer</div><div class="line"></div><div class="line"># Auto Configuration Import Listeners</div><div class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportListener=\</div><div class="line">org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener</div><div class="line"></div><div class="line"># Auto Configuration Import Filters</div><div class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportFilter=\</div><div class="line">org.springframework.boot.autoconfigure.condition.OnBeanCondition,\</div><div class="line">org.springframework.boot.autoconfigure.condition.OnClassCondition,\</div><div class="line">org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition</div><div class="line"></div><div class="line"># Auto Configure</div><div class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</div><div class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.cloud.CloudServiceConnectorsAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveRestClientAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,\</div><div class="line">org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</div><div class="line"></div><div class="line"># Failure analyzers</div><div class="line">org.springframework.boot.diagnostics.FailureAnalyzer=\</div><div class="line">org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer,\</div><div class="line">org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer,\</div><div class="line">org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer,\</div><div class="line">org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer</div><div class="line"></div><div class="line"># Template availability providers</div><div class="line">org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider=\</div><div class="line">org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider,\</div><div class="line">org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider,\</div><div class="line">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider,\</div><div class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider,\</div><div class="line">org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider</div></pre></td></tr></table></figure><h2 id="4-Spring-事件发布机制"><a href="#4-Spring-事件发布机制" class="headerlink" title="4. Spring 事件发布机制"></a>4. Spring 事件发布机制</h2><p>这是典型的观察者模式的实际应用。</p><h3 id="4-1-主题（事件源）"><a href="#4-1-主题（事件源）" class="headerlink" title="4.1 主题（事件源）"></a>4.1 主题（事件源）</h3><p>SpringApplication 启动过程中，会经历多个状态，比如启动中、环境准备好了、上下文准备好了、上下文加载好了等等。可以把 SpringApplication  当成观察者模式的主题，不同状态主题发布不同的事件通知符合条件的观察者门去做相应的处理。</p><h3 id="4-2-事件"><a href="#4-2-事件" class="headerlink" title="4.2 事件"></a>4.2 事件</h3><p>ApplicationEvent 就是主题的事件，比如：ApplicationStartingEvent、ApplicationEnvironmentPreparedEvent…</p><h3 id="4-3-多路广播工具"><a href="#4-3-多路广播工具" class="headerlink" title="4.3 多路广播工具"></a>4.3 多路广播工具</h3><p>ApplicationEventMulticaster，增加、删除、筛选不同事件对应的观察者。可以看成主题的一个工具，专门用于管理主题的观察者门。并且可以帮助主题根据不同事件，通知订阅了该事件的观察者们去做相应处理。</p><h3 id="4-4-观察者"><a href="#4-4-观察者" class="headerlink" title="4.4 观察者"></a>4.4 观察者</h3><p>ApplicationListener，比如：ClearCachesApplicationListener、LoggingApplicationListener。就是主题变化后，需要具体做事的人。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot 启动源码分析。&lt;br&gt;
    
    </summary>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/categories/Srping-Boot/"/>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/tags/Srping-Boot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习(三)</title>
    <link href="http://yoursite.com/2020-04-09-SpringBoot/SpringBoot%E5%AD%A6%E4%B9%A0(3).html"/>
    <id>http://yoursite.com/2020-04-09-SpringBoot/SpringBoot学习(3).html</id>
    <published>2020-04-09T14:13:14.000Z</published>
    <updated>2020-04-23T13:58:39.633Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 数据源配置和集成 Thymeleaf<br><a id="more"></a></p><h2 id="1-JDBC"><a href="#1-JDBC" class="headerlink" title="1. JDBC"></a>1. JDBC</h2><h3 id="1-1-导入依赖"><a href="#1-1-导入依赖" class="headerlink" title="1.1     导入依赖"></a>1.1     导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- jdbc --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- mysql 驱动 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="1-2-配置数据源"><a href="#1-2-配置数据源" class="headerlink" title="1.2 配置数据源"></a>1.2 配置数据源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 数据源配置</div><div class="line">spring.datasource.username=root</div><div class="line">spring.datasource.password=root</div><div class="line">spring.datasource.url=jdbc:mysql://39.108.78.254:3306/test?serverTimezone=UTC&amp;useUnicode=true@characterEncoding=utf-8</div><div class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</div></pre></td></tr></table></figure><h3 id="1-3-测试"><a href="#1-3-测试" class="headerlink" title="1.3 测试"></a>1.3 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootWebApplicationTests</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    DataSource dataSource;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"dataSource==&gt;"</span>+dataSource.getClass());</div><div class="line">        Connection connection = dataSource.getConnection();</div><div class="line">        System.out.println(<span class="string">"connection==&gt;"</span>+connection);</div><div class="line">        connection.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以看到默认配置的数据源为 class com.zaxxer.hikari.HikariDataSource，我们没有经过任何配置，说明springboot 默认情况下支持的就是这种数据源，可以在 DataSourceProperties.java 文件中查看具体的属性配置</p><h3 id="1-4-crud-操作"><a href="#1-4-crud-操作" class="headerlink" title="1.4 crud 操作"></a>1.4 crud 操作</h3><p>​        1、有了数据源(com.zaxxer.hikari.HikariDataSource)，然后可以拿到数据库连接(java.sql.Connection)，有了连接，就可以使用连接和原生的 JDBC 语句来操作数据库</p><p>​        2、即使不使用第三方第数据库操作框架，如 MyBatis等，Spring 本身也对原生的JDBC 做了轻量级的封装，即 org.springframework.jdbc.core.JdbcTemplate。</p><p>​        3、数据库操作的所有 CRUD 方法都在 JdbcTemplate 中。</p><p>​        4、Spring Boot 不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，程序员只需自己注入即可使用</p><p>​        5、JdbcTemplate 的自动配置原理是依赖 org.springframework.boot.autoconfigure.jdbc 包下的 org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcContorller</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    JdbcTemplate jdbcTemplate;</div><div class="line">    </div><div class="line">    <span class="comment">// ...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="2-自定义数据源-DruidDataSource"><a href="#2-自定义数据源-DruidDataSource" class="headerlink" title="2. 自定义数据源 DruidDataSource"></a>2. 自定义数据源 DruidDataSource</h2><h3 id="2-1-添加依赖"><a href="#2-1-添加依赖" class="headerlink" title="2.1 添加依赖"></a>2.1 添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- druid --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="2-2-添加配置"><a href="#2-2-添加配置" class="headerlink" title="2.2 添加配置"></a>2.2 添加配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</div></pre></td></tr></table></figure><h3 id="2-3-测试"><a href="#2-3-测试" class="headerlink" title="2.3 测试"></a>2.3 测试</h3><p>发现已经切换到了 Druid 数据源</p><h3 id="2-4-Druid-独有配置"><a href="#2-4-Druid-独有配置" class="headerlink" title="2.4 Druid 独有配置"></a>2.4 Druid 独有配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</div><div class="line">#druid 数据源专有配置</div><div class="line">spring.datasource.initialSize=5</div><div class="line">spring.datasource.minIdle=5</div><div class="line">spring.datasource.maxActive=20</div><div class="line">spring.datasource.maxWait=60000</div><div class="line">spring.datasource.timeBetweenEvictionRunsMillis=60000</div><div class="line">spring.datasource.minEvictableIdleTimeMillis=300000</div><div class="line">spring.datasource.validationQuery=SELECT 1 FROM DUAL</div><div class="line">spring.datasource.testWhileIdle=true</div><div class="line">spring.datasource.testOnBorrow=false</div><div class="line">spring.datasource.testOnReturn=false</div><div class="line">spring.datasource.poolPreparedStatements=true</div><div class="line"></div><div class="line">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</div><div class="line">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</div><div class="line">#则导入 log4j 依赖即可，Maven 地址： https://mvnrepository.com/artifact/log4j/log4j</div><div class="line">spring.datasource.filters=stat,wall,log4j</div><div class="line">spring.datasource.maxPoolPreparedStatementPerConnectionSize=20</div><div class="line">spring.datasource.useGlobalDataSourceStat=true</div><div class="line">spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</div></pre></td></tr></table></figure><p>需要定义druidDatasource的配置类，绑定参数。否则配置不生效，因为 DataSource 中没有那些配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</div><div class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-5-测试"><a href="#2-5-测试" class="headerlink" title="2.5 测试"></a>2.5 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DruidDataSource druidDataSource = (DruidDataSource)dataSource;</div><div class="line">System.out.println(<span class="string">"maxActive==&gt;"</span>+druidDataSource.getMaxActive());</div><div class="line">System.out.println(<span class="string">"initialSize==&gt;"</span>+druidDataSource.getInitialSize());</div></pre></td></tr></table></figure><h3 id="2-6-配置druid监控管理台的servlet"><a href="#2-6-配置druid监控管理台的servlet" class="headerlink" title="2.6 配置druid监控管理台的servlet"></a>2.6 配置druid监控管理台的servlet</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">druidServletRegistrationBean</span><span class="params">()</span></span>&#123;</div><div class="line">    ServletRegistrationBean&lt;Servlet&gt; servletRegistrationBean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> StatViewServlet(),<span class="string">"/druid/*"</span>);</div><div class="line">    Map&lt;String,String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    initParams.put(<span class="string">"loginUsername"</span>,<span class="string">"admin"</span>);</div><div class="line">    initParams.put(<span class="string">"loginPassword"</span>,<span class="string">"123456"</span>);</div><div class="line">    <span class="comment">//后台允许谁可以访问</span></div><div class="line">    <span class="comment">//initParams.put("allow", "localhost")：表示只有本机可以访问</span></div><div class="line">    <span class="comment">//initParams.put("allow", "")：为空或者为null时，表示允许所有访问</span></div><div class="line">    initParams.put(<span class="string">"allow"</span>,<span class="string">""</span>);</div><div class="line">    <span class="comment">//deny：Druid 后台拒绝谁访问</span></div><div class="line">    <span class="comment">//initParams.put("msb", "192.168.1.20");表示禁止此ip访问</span></div><div class="line"></div><div class="line">    servletRegistrationBean.setInitParameters(initParams);</div><div class="line">    <span class="keyword">return</span> servletRegistrationBean;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//配置 Druid 监控 之  web 监控的 filter</span></div><div class="line"><span class="comment">//WebStatFilter：用于配置Web和Druid数据源之间的管理关联监控统计</span></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span> </span>&#123;</div><div class="line">    FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean();</div><div class="line">    bean.setFilter(<span class="keyword">new</span> WebStatFilter());</div><div class="line"></div><div class="line">    <span class="comment">//exclusions：设置哪些请求进行过滤排除掉，从而不进行统计</span></div><div class="line">    Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    initParams.put(<span class="string">"exclusions"</span>, <span class="string">"*.js,*.css,/druid/*"</span>);</div><div class="line">    bean.setInitParameters(initParams);</div><div class="line"></div><div class="line">    <span class="comment">//"/*" 表示过滤所有请求</span></div><div class="line">    bean.setUrlPatterns(Arrays.asList(<span class="string">"/*"</span>));</div><div class="line">    <span class="keyword">return</span> bean;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>登录控制台： <a href="http://localhost:8080/druid" target="_blank" rel="external">http://localhost:8080/druid</a> </p><h2 id="3-springboot-整合-mybatis"><a href="#3-springboot-整合-mybatis" class="headerlink" title="3. springboot 整合 mybatis"></a>3. springboot 整合 mybatis</h2><h3 id="3-1-导入依赖"><a href="#3-1-导入依赖" class="headerlink" title="3.1 导入依赖"></a>3.1 导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="3-2-配置数据源"><a href="#3-2-配置数据源" class="headerlink" title="3.2  配置数据源"></a>3.2  配置数据源</h3><p>参考前面</p><h3 id="3-3-测试数据源"><a href="#3-3-测试数据源" class="headerlink" title="3.3 测试数据源"></a>3.3 测试数据源</h3><p>参考前面</p><h3 id="3-4-创建实体类"><a href="#3-4-创建实体类" class="headerlink" title="3.4 创建实体类"></a>3.4 创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUser</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> oid;</div><div class="line">    <span class="keyword">private</span> String userId;</div><div class="line">    <span class="keyword">private</span> String userName;</div><div class="line"><span class="comment">// get/set...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-5-配置-mapper-接口类"><a href="#3-5-配置-mapper-接口类" class="headerlink" title="3.5 配置 mapper 接口类"></a>3.5 配置 mapper 接口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Mapper</span></div><div class="line"><span class="meta">@Repository</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</div><div class="line">    <span class="function">List&lt;SysUser&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function">SysUser <span class="title">selectUserByOid</span><span class="params">(Integer oid)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">Integer <span class="title">addUser</span><span class="params">(SysUser user)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">Integer <span class="title">updateUser</span><span class="params">(SysUser user)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">Integer <span class="title">deleteUser</span><span class="params">(Integer userOid)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-6-在resources下创建Emp-xml文件"><a href="#3-6-在resources下创建Emp-xml文件" class="headerlink" title="3.6 在resources下创建Emp.xml文件"></a>3.6 在resources下创建Emp.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mapper</span></div><div class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></div><div class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.monkeykong.mapper.UserMapper"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUser"</span> <span class="attr">resultType</span>=<span class="string">"SysUser"</span>&gt;</span></div><div class="line">        select * from sys_user</div><div class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByOid"</span> <span class="attr">resultType</span>=<span class="string">"SysUser"</span>&gt;</span></div><div class="line">        select * from sys_user where oid = #&#123;oid&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"SysUser"</span>&gt;</span></div><div class="line">        insert into sys_user (userId, userName) values (#&#123;userId&#125;,#&#123;userName&#125;)</div><div class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"SysUser"</span>&gt;</span></div><div class="line">        update sys_user set userId=#&#123;userId&#125; where userName = #&#123;userName&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></div><div class="line">        delete from sys_user where oid = #&#123;oid&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="3-7-添加配置文件"><a href="#3-7-添加配置文件" class="headerlink" title="3.7 添加配置文件"></a>3.7 添加配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mybatis.config-location=classpath:mapper/*.xml</div><div class="line">mybatis.type-aliases-package=com.monkeykong.entity</div></pre></td></tr></table></figure><h3 id="3-8-编写controller"><a href="#3-8-编写controller" class="headerlink" title="3.8 编写controller"></a>3.8 编写controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    UserMapper userMapper;</div><div class="line"></div><div class="line">    <span class="comment">//选择全部用户</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/selectUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">selectUser</span><span class="params">()</span></span>&#123;</div><div class="line">        List&lt;SysUser&gt; users = userMapper.selectUser();</div><div class="line">        users.stream().forEach(u -&gt; &#123;</div><div class="line">            System.out.println(u);</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//根据id选择用户</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/selectEmpByOid"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">selectEmpByOid</span><span class="params">()</span></span>&#123;</div><div class="line">        SysUser user = userMapper.selectUserByOid(<span class="number">1</span>);</div><div class="line">        System.out.println(user);</div><div class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//添加一个用户</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/addUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">()</span></span>&#123;</div><div class="line">        userMapper.addUser(<span class="keyword">new</span> SysUser(<span class="string">"jj"</span>,<span class="string">"liujingjing"</span>));</div><div class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//修改一个用户</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/updateUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">()</span></span>&#123;</div><div class="line">        userMapper.updateUser(<span class="keyword">new</span> SysUser(<span class="string">"jj"</span>,<span class="string">"刘晶晶"</span>));</div><div class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//根据id删除用户</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/deleteUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">()</span></span>&#123;</div><div class="line">        userMapper.deleteUser(<span class="number">2</span>);</div><div class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot 数据源配置和集成 Thymeleaf&lt;br&gt;
    
    </summary>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/categories/Srping-Boot/"/>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/tags/Srping-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot学习(二)</title>
    <link href="http://yoursite.com/2020-04-09-SpringBoot/SpringBoot%E5%AD%A6%E4%B9%A0(2).html"/>
    <id>http://yoursite.com/2020-04-09-SpringBoot/SpringBoot学习(2).html</id>
    <published>2020-04-09T14:13:13.000Z</published>
    <updated>2020-04-23T13:58:32.509Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot Web 开发，自定义 web 基础组件，包括 servlet、filter、listener；静态资源配置；Spring MVC 试图解析器配置。<br><a id="more"></a></p><h2 id="1-整合-Servlet"><a href="#1-整合-Servlet" class="headerlink" title="1. 整合 Servlet"></a>1. 整合 Servlet</h2><h3 id="1-1-组件扫描方式"><a href="#1-1-组件扫描方式" class="headerlink" title="1.1 组件扫描方式"></a>1.1 组件扫描方式</h3><ol><li>定义一个 servlet，并且用 <strong>@WebServlet</strong> 注解描述</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"myFirstServlet"</span>, urlPatterns = <span class="string">"/firstServlet"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirstServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"==&gt; my servlet doGet"</span>);</div><div class="line">        resp.getWriter().append(<span class="string">"firstServlet"</span>);</div><div class="line">        <span class="comment">// super.doGet(req, resp);</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>在启动类上使用 <strong>@ServletComponentScan</strong> 扫描 Servlet</li></ol><h3 id="1-2-组件注册方式"><a href="#1-2-组件注册方式" class="headerlink" title="1.2 组件注册方式"></a>1.2 组件注册方式</h3><ol><li>定义一个 servlet</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySecondServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"==&gt; second servlet"</span>);</div><div class="line">        resp.getWriter().write(<span class="string">"second servlet."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>通过 ServletRegistrationBean 注入 servlet</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean&lt;MySecondServlet&gt; <span class="title">getServletRegistrationBean</span><span class="params">()</span></span>&#123;</div><div class="line">    ServletRegistrationBean&lt;MySecondServlet&gt; bean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> MySecondServlet());</div><div class="line">    bean.setLoadOnStartup(<span class="number">1</span>);</div><div class="line">    bean.setName(<span class="string">"mySecondServlet"</span>);</div><div class="line">    bean.addUrlMappings(<span class="string">"/secondServlet"</span>);</div><div class="line">    <span class="keyword">return</span> bean;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="2-整合-Filter"><a href="#2-整合-Filter" class="headerlink" title="2. 整合 Filter"></a>2. 整合 Filter</h2><h3 id="2-1-组件扫描方式"><a href="#2-1-组件扫描方式" class="headerlink" title="2.1 组件扫描方式"></a>2.1 组件扫描方式</h3><ol><li>定义一个 filter，并且使用 <strong>@WebFilter</strong> 注解描述</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"FirstFilter"</span>, urlPatterns = <span class="string">"/firstFilter"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirstFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my first filter init..."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my first filter doFilter..."</span>);</div><div class="line">        chain.doFilter(request, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my first filter destroy..."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>在启动类上使用 <strong>@ServletComponentScan</strong> 扫描 Filter</li></ol><h3 id="2-2-组件注册方式"><a href="#2-2-组件注册方式" class="headerlink" title="2.2 组件注册方式"></a>2.2 组件注册方式</h3><ol><li>定义一个 filter</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySecondFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my second filter init..."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my second filter doFilter..."</span>);</div><div class="line">        chain.doFilter(request, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"my second filter destroy..."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>通过 FilterRegistrationBean 注册 filter</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean&lt;MySecondFilter&gt; <span class="title">getFilterRegistrationBean</span><span class="params">()</span></span>&#123;</div><div class="line">    FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean(<span class="keyword">new</span> MySecondFilter());</div><div class="line">    bean.setUrlPatterns(Arrays.asList(<span class="string">"/secondFilter"</span>));</div><div class="line">    <span class="keyword">return</span> bean;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-整合-Listener"><a href="#3-整合-Listener" class="headerlink" title="3. 整合 Listener"></a>3. 整合 Listener</h2><p>listener是servlet规范定义的一种特殊类，用于监听servletContext,HttpSession和ServletRequest等域对象的创建和销毁事件。监听域对象的属性发生修改的事件，用于在事件发生前、发生后做一些必要的处理。</p><p>可用于以下方面：</p><ol><li><p>统计在线人数和在线用户</p></li><li><p>系统启动时加载初始化信息</p></li><li><p>统计网站访问量</p></li><li><p>记录用户访问路径。</p></li></ol><p>同样有两种方式：<strong>@WebListener+@ServletComponentScan</strong> 或者 <strong>ServletListenerRegistrationBean</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@WebListener</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHttpSessionListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> online=<span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"创建session"</span>);</div><div class="line">        online++;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"销毁session"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="4-静态资源配置"><a href="#4-静态资源配置" class="headerlink" title="4. 静态资源配置"></a>4. 静态资源配置</h2><p>默认情况下，Spring Boot 将在 classpath 或者 ServletContext 根目录下从名为 /static （/public、/resources 或 /META-INF/resources）目录中服务静态内容。它使用了 Spring MVC 的 ResourceHttpRequestHandler，因此您可以通过添加自己的 WebMvcConfigurerAdapter 并重写 addResourceHandlers 方法来修改此行为。</p><h3 id="4-1-加载-webjars-文件"><a href="#4-1-加载-webjars-文件" class="headerlink" title="4.1 加载 webjars 文件"></a>4.1 加载 webjars 文件</h3><p>在pom文件中添加jquery的相关依赖，直接可以通过浏览器访问到<a href="http://localhost:8080/webjars/jquery/3.4.1/jquery.js" target="_blank" rel="external">http://localhost:8080/webjars/jquery/3.4.1/jquery.js</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jquery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="4-2-加载静态资源"><a href="#4-2-加载静态资源" class="headerlink" title="4.2 加载静态资源"></a>4.2 加载静态资源</h3><p>从 ResourceProperties 这个类可以看出，默认加载路径有如下这些：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] CLASSPATH_RESOURCE_LOCATIONS = &#123; <span class="string">"classpath:/META-INF/resources/"</span>,                                                   <span class="string">"classpath:/resources/"</span>, <span class="string">"classpath:/static/"</span>, <span class="string">"classpath:/public/"</span> &#125;;</div></pre></td></tr></table></figure><h3 id="4-3-首页配置信息"><a href="#4-3-首页配置信息" class="headerlink" title="4.3 首页配置信息"></a>4.3 首页配置信息</h3><p>？？？</p><h2 id="5-Spring-MVC-扩展"><a href="#5-Spring-MVC-扩展" class="headerlink" title="5. Spring MVC 扩展"></a>5. Spring MVC 扩展</h2><h3 id="5-1-配置试图解析器"><a href="#5-1-配置试图解析器" class="headerlink" title="5.1 配置试图解析器"></a>5.1 配置试图解析器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</div><div class="line">        registry.addViewController(<span class="string">"/index"</span>).setViewName(<span class="string">"indexView"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//自定义视图解析器</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ViewResolver <span class="title">myViewResolver</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyViewResolver();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyViewResolver</span> <span class="keyword">implements</span> <span class="title">ViewResolver</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">resolveViewName</span><span class="params">(String s, Locale locale)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        System.out.println(<span class="string">"==&gt;"</span>+s);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot Web 开发，自定义 web 基础组件，包括 servlet、filter、listener；静态资源配置；Spring MVC 试图解析器配置。&lt;br&gt;
    
    </summary>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/categories/Srping-Boot/"/>
    
    
      <category term="Srping Boot" scheme="http://yoursite.com/tags/Srping-Boot/"/>
    
  </entry>
  
</feed>
