<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>悟空</title>
  
  <subtitle>悟空的技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-23T02:58:50.436Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>monkey-kong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NIO 原理</title>
    <link href="http://yoursite.com/2020-02-22-202002/NIO%E5%8E%9F%E7%90%86.html"/>
    <id>http://yoursite.com/2020-02-22-202002/NIO原理.html</id>
    <published>2020-02-22T14:13:12.000Z</published>
    <updated>2020-02-23T02:58:50.436Z</updated>
    
    <content type="html"><![CDATA[<p>TCP 三次握手四次分手、I/O 多路复用等知识学习笔记。<br><a id="more"></a></p><h2 id="1-TCP-IP-协议"><a href="#1-TCP-IP-协议" class="headerlink" title="1. TCP/IP 协议"></a>1. TCP/IP 协议</h2><p>TCP/IP：应用层（http、ftp、ssh）、传输层（TCP/UDP）、网络层（IP）、链路层、物理层</p><h3 id="1-1-获取百度主页"><a href="#1-1-获取百度主页" class="headerlink" title="1.1 获取百度主页"></a>1.1 获取百度主页</h3><p><strong>问题：</strong>linux 通过命令获取百度主页怎么获取？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// linux 一切皆文件。文件输入流、文件输出流</div><div class="line">// 6&lt;&gt;：6 表示文件描述符 &lt;&gt;表示重定向，&lt;输入 &gt;输出</div><div class="line">// 表示和百度建立了 socket 连接</div><div class="line"><span class="built_in">exec</span> 6&lt;&gt; /dev/tcp/www.baidu.com/80 </div><div class="line">// $$:表示当前解释器的进程。可以看到有6这个文件描述符</div><div class="line"><span class="built_in">cd</span> /proc/$$/fd</div><div class="line">// 输出 http 协议头。怎么发给百度呢？</div><div class="line"><span class="built_in">echo</span> -e <span class="string">'GET / HTTP/1.0\n'</span></div><div class="line">// <span class="built_in">echo</span> 的标准输出（1）重定向到 6</div><div class="line"><span class="built_in">echo</span> -e <span class="string">'GET / HTTP/1.0\n'</span> 1&gt;&amp; 6</div><div class="line">// 获取百度的响应。cat 的标准输入流（0）来自 6 的返回</div><div class="line">cat 0&lt;&amp; 6</div><div class="line">// 关闭 socket</div><div class="line"><span class="built_in">exec</span> 6&lt;&amp;-</div></pre></td></tr></table></figure><p>TCP：面向连接的，可靠的传输协议。</p><h3 id="1-2-TCP三次握手和四次分手"><a href="#1-2-TCP三次握手和四次分手" class="headerlink" title="1.2 TCP三次握手和四次分手"></a>1.2 TCP三次握手和四次分手</h3><p>3 次握手：</p><p><img src="../../images/nio/TCP连接三次握手.png" alt=""></p><p>4 次分手：只有双方都知道了对方答应分手才会释放资源。fin+ack 只是表示服务端确认收到了客户端的请求，并不是服务端答应断开连接。</p><p><img src="../../images/nio/TCP连接四次分手.png" alt=""></p><h3 id="1-3-验证三次握手和四次分手"><a href="#1-3-验证三次握手和四次分手" class="headerlink" title="1.3 验证三次握手和四次分手"></a>1.3 验证三次握手和四次分手</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">// 查看端口监听情况</div><div class="line">// a：显示所有</div><div class="line">// n：ip 形式显示</div><div class="line">// u：udp t：tcp</div><div class="line">// p：pid</div><div class="line">netstat -anutp | grep 80</div><div class="line">// 安装抓包程序</div><div class="line">yum install tcpdump</div><div class="line">// 抓取 eth0 网卡，主机不包含（100.100.30.25）并且端口为80 的信息</div><div class="line">tcpdump -nn -i eth0 host ! 100.100.30.25 and port 80</div><div class="line">// 对百度建立三次握手连接，发送协议，返回数据，然后关闭连接</div><div class="line">curl www.baidu.com</div></pre></td></tr></table></figure><p>抓包结果：</p><p><img src="../../images/nio/传输过程抓包.png" alt=""></p><p>[P.] 中的 P 表示数据已经传输完成，不用缓冲 了，拿到数据赶紧去处理。可以理解为传输完成，立即处理的意思。</p><p>从三次握手到传输数据到四次分手应该是一个粒度，不应被以后的技术给分开，比如负载均衡，你不能三次握手在 A 主机，然后去 B 主机传输数据。</p><h3 id="1-4-追踪-TCP-通讯的详细过程"><a href="#1-4-追踪-TCP-通讯的详细过程" class="headerlink" title="1.4 追踪 TCP 通讯的详细过程"></a>1.4 追踪 TCP 通讯的详细过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 一个模拟客户端服务端程序 netcat</div><div class="line">yum install nc</div><div class="line">// 模拟服务端，占用 8080 端口</div><div class="line">nc -l 8080</div><div class="line">// 发现这时候 fd 目录下已经有一个 socket 了。这是服务端监听的 socket</div><div class="line">ps -ef|grep nc</div><div class="line">// 0：标准输入 1：标准输出 2：报错输出</div><div class="line"><span class="built_in">cd</span> /proc/pid/fd</div><div class="line">// 连接服务端</div><div class="line">nc localhost 8080</div><div class="line">// 客户端连接后，服务端进程下会增加一个 socket 连接，表示和客户端的连接</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">// 追踪程序的系统调用</div><div class="line">yum install strace</div><div class="line">mkdir ooxx</div><div class="line"><span class="built_in">cd</span> ooxx</div><div class="line">// 追踪 nc -l 8080 对系统的调用</div><div class="line">strace -ff -o out nc -l 8080</div><div class="line">// 发现目录下有一个 out.15824 文件，这个就是追踪的输出文件</div><div class="line">// 如何学习系统调用</div><div class="line">yum install man man-pages</div><div class="line">man 2 socket</div><div class="line">// 实时监控文件</div><div class="line">tail -f out.15824</div><div class="line">// 然后客户端连接，查看 out.15824 的变化</div></pre></td></tr></table></figure><h2 id="2-I-O-模型演变过程"><a href="#2-I-O-模型演变过程" class="headerlink" title="2. I/O 模型演变过程"></a>2. I/O 模型演变过程</h2><h3 id="2-1-BIO-阻塞模型"><a href="#2-1-BIO-阻塞模型" class="headerlink" title="2.1 BIO(阻塞模型)"></a>2.1 BIO(阻塞模型)</h3><p><img src="../../images/nio/BIO.png" alt=""></p><h3 id="2-2-多线程模型"><a href="#2-2-多线程模型" class="headerlink" title="2.2 多线程模型"></a>2.2 多线程模型</h3><p><img src="../../images/nio/多线程IO.png" alt=""></p><h3 id="2-3-NIO-非阻塞-模型"><a href="#2-3-NIO-非阻塞-模型" class="headerlink" title="2.3 NIO(非阻塞)模型"></a>2.3 NIO(非阻塞)模型</h3><p><img src="../../images/nio/NIO(非阻塞" alt="">模型.png)</p><h3 id="2-4-SELECT-POLL-模型"><a href="#2-4-SELECT-POLL-模型" class="headerlink" title="2.4 SELECT/POLL 模型"></a>2.4 SELECT/POLL 模型</h3><p><img src="../../images/nio/SELECT、POLL 模型.png" alt=""></p><h3 id="2-5-EPOLL-多路复用-模型"><a href="#2-5-EPOLL-多路复用-模型" class="headerlink" title="2.5  EPOLL(多路复用)模型"></a>2.5  <strong>EPOLL(多路复用)模型</strong></h3><h4 id="2-5-1-中断事件"><a href="#2-5-1-中断事件" class="headerlink" title="2.5.1 中断事件"></a>2.5.1 中断事件</h4><p>数据的到达，在计算机中有一系列的处理，计算机只有一个 cpu，很多东西在复用这个 cpu，计算机有网卡、键盘、摄像头等，谁有事件到达了，它会给 cpu 总线发一个中断信号，cpu 就回来处理你的请求。</p><p><img src="../../images/nio/中断事件.png" alt=""></p><h4 id="2-5-2-多路复用模型"><a href="#2-5-2-多路复用模型" class="headerlink" title="2.5.2 多路复用模型"></a>2.5.2 多路复用模型</h4><p><img src="../../images/nio/多路复用.png" alt=""></p><h2 id="3-sendfile-零拷贝"><a href="#3-sendfile-零拷贝" class="headerlink" title="3. sendfile(零拷贝)"></a>3. sendfile(零拷贝)</h2><p><img src="../../images/nio/零拷贝.png" alt=""></p><h2 id="4-mmap-直接内存"><a href="#4-mmap-直接内存" class="headerlink" title="4. mmap(直接内存)"></a>4. mmap(直接内存)</h2><p><img src="../../images/nio/直接内存.png" alt=""></p><h2 id="5-kafka-模型"><a href="#5-kafka-模型" class="headerlink" title="5. kafka 模型"></a>5. kafka 模型</h2><p><img src="../../images/nio/kafka模型.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TCP 三次握手四次分手、I/O 多路复用等知识学习笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="TCP" scheme="http://yoursite.com/tags/TCP/"/>
    
      <category term="NIO" scheme="http://yoursite.com/tags/NIO/"/>
    
  </entry>
  
  <entry>
    <title>Redis 学习(四)-主从复制、高可用、集群</title>
    <link href="http://yoursite.com/2020-02-21-202002/Redis%20%E5%AD%A6%E4%B9%A0(%E5%9B%9B)-%E9%9B%86%E7%BE%A4.html"/>
    <id>http://yoursite.com/2020-02-21-202002/Redis 学习(四)-集群.html</id>
    <published>2020-02-21T14:13:12.000Z</published>
    <updated>2020-02-23T04:41:30.536Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 主从复制、高可用和集群学习笔记。<br><a id="more"></a></p><h2 id="1-为什么要主从复制、高可用和集群？"><a href="#1-为什么要主从复制、高可用和集群？" class="headerlink" title="1. 为什么要主从复制、高可用和集群？"></a>1. 为什么要主从复制、高可用和集群？</h2><h3 id="1-1-单机、单节点、单实例问题"><a href="#1-1-单机、单节点、单实例问题" class="headerlink" title="1.1 单机、单节点、单实例问题"></a>1.1 单机、单节点、单实例问题</h3><ol><li>单点故障问题（可用性），就是说一台机器挂了，整个系统就挂了</li><li>单据内存容量有限，就是说一个 Redis 存不了很多数据</li><li>压力大，包括 socket io 压力，cpu 操作等</li></ol><h3 id="1-2-尝试解决单节点问题-一变多"><a href="#1-2-尝试解决单节点问题-一变多" class="headerlink" title="1.2 尝试解决单节点问题-一变多"></a>1.2 尝试解决单节点问题-一变多</h3><ol><li>为了解决单点故障问题，可以把 Redis 一个实例复制为多个实例，当一个实例挂了时，另外的实例可以顶上，这叫做主从复制。</li><li>为了解决容量问题，可以把数据根据业务或者根据某种规则，把数据尽量均匀的存在多个 Redis 实例上，这叫做数据分区。</li></ol><p><img src="../../images/redis4/解决单节点问题.png" alt=""></p><p>但是一变多带来了另外的问题</p><ol><li>各个库之间如何保证数据的一致呢？这就是数据一致性问题。</li><li>当主库挂了如何让从库顶上去呢？这就是故障转移问题。</li></ol><h3 id="1-3-尝试解决数据一致性问题"><a href="#1-3-尝试解决数据一致性问题" class="headerlink" title="1.3 尝试解决数据一致性问题"></a>1.3 尝试解决数据一致性问题</h3><h4 id="1-3-1-强一致性-同步阻塞"><a href="#1-3-1-强一致性-同步阻塞" class="headerlink" title="1.3.1 强一致性-同步阻塞"></a>1.3.1 强一致性-同步阻塞</h4><p><img src="../../images/redis4/强一致性.png" alt=""></p><h4 id="1-3-2-弱一致性-异步非阻塞"><a href="#1-3-2-弱一致性-异步非阻塞" class="headerlink" title="1.3.2 弱一致性-异步非阻塞"></a>1.3.2 弱一致性-异步非阻塞</h4><p><img src="../../images/redis4/弱一致性.png" alt=""></p><h4 id="1-3-3-最终一致性"><a href="#1-3-3-最终一致性" class="headerlink" title="1.3.3 最终一致性"></a>1.3.3 最终一致性</h4><p><img src="../../images/redis4/最终一致性.png" alt=""></p><h3 id="1-4-尝试解决故障转移问题"><a href="#1-4-尝试解决故障转移问题" class="headerlink" title="1.4 尝试解决故障转移问题"></a>1.4 尝试解决故障转移问题</h3><p>现在 Redis 有一个主库和多个从库，我们希望当主库出现问题时，有某个从库自动承担起主库的职责来继续提供服务。那么有两个问题：</p><ol><li>如何知道主库是否出现问题了？</li><li>让让哪个从库来代替主库呢？</li></ol><p>为了解决上面两个问题，我们可以弄一套监控程序来监控主库，时刻监控主库是否出现问题了。一旦发现主库出问题了，就让从库来代替主库。</p><p>那么问题又来了，首先这套监控程序肯定不能是一个，因为一个人说了不算，谁知道是你自己出问题了还是主库出问题了，所以这个监控程序需要集群。</p><p>集群之后还是有问题，假设我们有两个监控程序，当一个说主库挂了，另外一个说主库正常，这就是常说的<strong>脑裂问题</strong>。</p><p>为了解决脑裂问题，出现了势力值的概念，就是说只有达到势力值了，才能听你的，比如有三个监控程序，势力值是 2，就是说只要两个监控程序说你挂了，那就认定你挂了，所以这个势力值一般是 n/2 + 1，也就是<strong>过半原则</strong>。</p><p>同时一般监控程序的个数配置奇数个比较好，奇数台风险更小，成本也更小。？？？</p><h2 id="2-Redis-主从复制"><a href="#2-Redis-主从复制" class="headerlink" title="2. Redis 主从复制"></a>2. Redis 主从复制</h2><p>就是 1.2 图中的 X 轴，为了解决单点故障问题。</p><p>Redis 主从复制带来的数据一致性问题的解决方案采用的第二种，就是异步非阻塞模式。</p><h3 id="2-1-Redis-主从复制原理"><a href="#2-1-Redis-主从复制原理" class="headerlink" title="2.1 Redis 主从复制原理"></a>2.1 Redis 主从复制原理</h3><ol><li><p>slave 发送 offset（偏移量）给 master</p></li><li><p>master 验证增量队列是否还没有满，验证 offset 是否正常，如果都正常则执行增量复制。</p><p>否则执行全量复制。增量队列的大小通过  <strong>repl-backlog-size 1mb</strong>  配置。</p></li><li><p>如果全量复制，有两种方式，一种是走磁盘，即 master 先在 磁盘建一个 RDB 文件，然后读到内存发给 slave；或者 master 直接发送 RDB 到 slave。通过  <strong>repl-diskless-sync no</strong> 配置。最后 master 把 RDB 之后新产生的缓存指令以指令流形式发给 slave。</p></li></ol><p><img src="../../images/redis4/主从复制原理.png" alt=""></p><h3 id="2-2-Redis-主从复制如何处理过期"><a href="#2-2-Redis-主从复制如何处理过期" class="headerlink" title="2.2 Redis 主从复制如何处理过期"></a>2.2 Redis 主从复制如何处理过期</h3><p>slave 不会让 key 过期，而是等待 master 让 key 过期。 当一个 master 让一个 key 到期（或由于 LRU 算法将之驱逐）时，它会合成一个 DEL 命令并传输到所有的 slave。 </p><h3 id="3-Redis-高可用"><a href="#3-Redis-高可用" class="headerlink" title="3. Redis 高可用"></a>3. Redis 高可用</h3><h2 id="1-主从集群和哨兵"><a href="#1-主从集群和哨兵" class="headerlink" title="1. 主从集群和哨兵"></a>1. 主从集群和哨兵</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">// 1. 准备：启动 3 个 redis 实例</div><div class="line"><span class="built_in">cd</span> ~</div><div class="line">mkdir redistest</div><div class="line"><span class="built_in">cd</span> redistest</div><div class="line">cp /etc/redis/* ../../</div><div class="line">-- 修改配置文件：1. 关闭后台线程执行 2. 关闭日志文件 3. 关闭 AOF</div><div class="line">vim 6379|6380|6380.conf</div><div class="line">// 删除持久化目录内容</div><div class="line"><span class="built_in">cd</span> /var/lib/redis/6379|6380|6381</div><div class="line">rm -rf ../../*</div><div class="line">redis-server ../../6379.conf</div><div class="line">redis-cli</div><div class="line"><span class="built_in">set</span> k1 1</div><div class="line"></div><div class="line">redis-server ../../6380.conf --replicaof 127.0.0.1 6379</div><div class="line"></div><div class="line">// 2. 主从复制</div><div class="line">// 2.1 主库数据自动同步到从库</div><div class="line">redis-cli -p 6380</div><div class="line">-- 有 k1，说明同步了 6379</div><div class="line">keys *</div><div class="line">-- 报错，默认从库只读，可以配置</div><div class="line"><span class="built_in">set</span> k1 1</div><div class="line"></div><div class="line">// 2.2 从库数据被删除</div><div class="line">redis-server ../../6381.conf</div><div class="line">reids-cli -p 6381</div><div class="line"><span class="built_in">set</span> k2 2</div><div class="line">replicaof 127.0.0.1 6379</div><div class="line">-- 获取不到，从库数据被删除</div><div class="line">get k2 </div><div class="line"></div><div class="line">// 2.3 从库挂了，重新连接，可以取到主库新数据，没有重新 RDB</div><div class="line">-- 关闭 6380</div><div class="line">-- 主库存数据</div><div class="line"><span class="built_in">set</span> k2 2</div><div class="line"><span class="built_in">set</span> k3 3</div><div class="line">-- 启动 6380</div><div class="line">get k2 k3</div><div class="line"></div><div class="line">// 2.4 AOF 开启。从库挂了，重新连接，每次都会重新 RDB</div><div class="line">-- 关闭 6380</div><div class="line">-- 主库存数据</div><div class="line"><span class="built_in">set</span> k4 2</div><div class="line"><span class="built_in">set</span> k5 3</div><div class="line">-- 开启 AOF</div><div class="line">appendonly yes</div><div class="line">-- 启动 6380</div><div class="line">-- 从启动日志可以看到执行了 BGSAVE</div><div class="line">get k3 k4</div><div class="line"></div><div class="line">// 2.5 主库挂了，需要人工重新指定主库和从库</div><div class="line">-- 关闭 6379</div><div class="line">-- 6380 取消追随</div><div class="line">replicaof no one</div><div class="line">-- 6381 追随 6380</div><div class="line">replicaof 127.0.0.1 6380</div><div class="line"></div><div class="line">// 2.6 哨兵</div><div class="line">-- 关闭所有实例和客户端</div><div class="line">vim 26379|26380|26380.conf/</div><div class="line">port 26379</div><div class="line">sentinel monitor mymaster 127.0.0.1 6379 2</div><div class="line">-- 启动 3 个 server</div><div class="line">-- 启动 3 个哨兵</div><div class="line">redis-server ../../26379.conf --sentinel</div><div class="line">-- 停止 6379，过一段时间(因为有一个延时，防止网络问题)发现哨兵自动做了故障转移</div><div class="line">-- 从日志看出，哨兵选举的主库是 6380；6379 自动变为从库</div><div class="line">redis-cli -p 6380</div><div class="line"><span class="built_in">set</span> k1 aaa</div><div class="line">redis-cli -p 6381</div><div class="line">get k1</div><div class="line">-- 哨兵会自动修改自己的配置文件</div><div class="line"><span class="built_in">cd</span> ~/redistest</div><div class="line">vim 26379.conf</div></pre></td></tr></table></figure><p><strong>问题：</strong>主知道从，是因为从追随主时就知道了；但是一个哨兵是如何知道其他哨兵的？</p><p><strong>答案：</strong>通过 Redis 自带的发布订阅实现。PSUBSCRIBE *，可以看到哨兵的交互信息。</p><h2 id="2-twemproxy"><a href="#2-twemproxy" class="headerlink" title="2. twemproxy"></a>2. twemproxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">autoreconf 版本太低</div><div class="line">yum search autoconf</div><div class="line">// 常识，yum 装的软件来自仓库，可能你现在系统自带的仓库偏低</div><div class="line">millior.aliyun.com</div><div class="line">epel</div><div class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</div><div class="line">wget -0 /etc/...</div><div class="line">yum clean all</div><div class="line">yum search autoconf</div><div class="line">yum install autoconf268</div></pre></td></tr></table></figure><p>&lt;% for (var link in site.data.menu) { %&gt;<br>  <a href="<%= site.data.menu[link] %>"> &lt;%= link %&gt; </a><br>&lt;% } %&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 主从复制、高可用和集群学习笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis 学习(三)-持久化</title>
    <link href="http://yoursite.com/2020-02-20-202002/Redis%20%E5%AD%A6%E4%B9%A0(%E4%B8%89)-%E6%8C%81%E4%B9%85%E5%8C%96.html"/>
    <id>http://yoursite.com/2020-02-20-202002/Redis 学习(三)-持久化.html</id>
    <published>2020-02-20T14:13:12.000Z</published>
    <updated>2020-02-23T02:59:10.563Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 持久化学习笔记。<br><a id="more"></a></p><h2 id="1-为什么要持久化？"><a href="#1-为什么要持久化？" class="headerlink" title="1. 为什么要持久化？"></a>1. 为什么要持久化？</h2><p>Redis 是内存数据库，内存数据库都有一个特点，那就是<strong>掉电易失</strong>，所以对于 Redis 来说，数据持久化是必须的，否则一旦服务挂了，重新启动服务数据全部丢失。</p><p>同时 Redis 即可以用作缓存也可以用作数据库。</p><ul><li>作为缓存它的特点是存储的是部分热点数据而不是全部数据，数据是可以丢失的对于数据持久化的要求没有那么高，所以可以考虑直接 <strong>RDB 模式</strong>持久化即可；</li><li>但是作为数据库，数据是绝对不能丢的一般需要 <strong>AOF 模式</strong>或者 <strong>RDB、AOF 混合模式</strong>进行持久化。</li></ul><h2 id="2-数据库持久化方式"><a href="#2-数据库持久化方式" class="headerlink" title="2. 数据库持久化方式"></a>2. 数据库持久化方式</h2><ol><li><p>阻塞，持久化期间，Redis 不对外提供服务。这样的好处是可以保证时点性，但是牺牲了可用性。</p></li><li><p>非阻塞，持久化期间，Redis 需要继续对外提供服务。</p><p>这种模式通常会有一个<strong>时点性</strong>的问题，比如八点开始持久化，八点半持久化完成，那么我们无法确认，我持久化下来的这份数据是八点一十的数据还是八点二十的数据，因为 Redis 一直在对外提供服务，持久化过程中，数据可能一直在变化。</p></li></ol><h2 id="3-Redis-RDB-原理"><a href="#3-Redis-RDB-原理" class="headerlink" title="3. Redis RDB 原理"></a>3. Redis RDB 原理</h2><h3 id="3-1-Linux-的父子进程"><a href="#3-1-Linux-的父子进程" class="headerlink" title="3.1 Linux 的父子进程"></a>3.1 Linux 的父子进程</h3><ul><li>子进程无法看到父进程数据，但是 export 环境变量后，子进程可以看到父进程数据</li><li>子进程一旦创建，虽然子进程可以看到父进程数据，<strong>但是父子进程时互相隔离的</strong>，即子进程数据修改不会影响父进程；父进程数据修改也不会影响子进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">// 1.管道会触发创建子进程（两边各创建一个子进程）</div><div class="line">// 114017</div><div class="line"><span class="built_in">echo</span> $$</div><div class="line">// 还是 114017，没有取子进程 pid。因为 $$ 优先级高于 管道</div><div class="line"><span class="built_in">echo</span> $$ | more</div><div class="line">// 114017</div><div class="line"><span class="built_in">echo</span> <span class="variable">$BASHPID</span></div><div class="line">// 114016：取的是子进程 pid</div><div class="line"><span class="built_in">echo</span> <span class="variable">$BASHPID</span> | more</div><div class="line"></div><div class="line">// 2.子进程修改不影响父进程</div><div class="line">num=0</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">((num++))</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">((num++)) | grep ok</div><div class="line">// 还是 1：因为最后的 ((num++)) 是在子进程中执行</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line"></div><div class="line">// 3. 子进程看不到父进程数据</div><div class="line">// 114017</div><div class="line"><span class="built_in">echo</span> $$</div><div class="line">// 1</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">// 开启一个子窗口</div><div class="line">/bin/bash</div><div class="line">// 114120</div><div class="line"><span class="built_in">echo</span> $$</div><div class="line">// bash-bash-pstree</div><div class="line">pstree</div><div class="line">// null:说明子进程看不到父进程数据</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">// 退出子进程</div><div class="line"><span class="built_in">exit</span></div><div class="line"></div><div class="line">// 4. <span class="built_in">export</span> 环境变量后，子进程可以看到父进程数据</div><div class="line">// 1</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line"><span class="built_in">export</span> num</div><div class="line">/bin/bash</div><div class="line">// 1:说明 <span class="built_in">export</span> 后可以看到父进程数据</div><div class="line"><span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line"></div><div class="line">// 问题：子进程是否可以修改父进程数据？ NO</div><div class="line">//      父进程修改后，子进程是否同步？ NO</div><div class="line">vim test.sh</div><div class="line">    <span class="comment">#!/bin/bash</span></div><div class="line">    <span class="built_in">echo</span> $$</div><div class="line">    <span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">    num=999</div><div class="line">    <span class="built_in">echo</span> num:<span class="variable">$num</span></div><div class="line">    sleep 20</div><div class="line">    <span class="built_in">echo</span> <span class="variable">$num</span></div><div class="line">chmod +x test.sh</div><div class="line">// 后台运行</div><div class="line">../../test.sh &amp;</div></pre></td></tr></table></figure><p>从上面父子进程的结论即<strong>子进程可以看到父进程数据，但是父子进程数据互相隔离</strong>，那么我们 可以想到 Redis 持久化时，我们是否也可以用这种方式，即父进程继续提供读写服务，然后创建一个子进程实现数据持久化，这样 Redis 就实现了<strong>非阻塞持久化</strong>。但是需要考虑两个问题：</p><ol><li>创建子进程的速度是否够快？比如 Redis 存有 8 G 数据，创建子进程需要多久？一分钟、五分钟还是更久，因为这影响到持久化数据的时点性。</li><li>服务内存空间够不够？比如 Redis 存有 8 G 数据，子进程是否也要占用 8 G，这样会不会导致内存溢出？</li></ol><h3 id="3-2-fock-系统调用"><a href="#3-2-fock-系统调用" class="headerlink" title="3.2 fock() 系统调用"></a>3.2 fock() 系统调用</h3><p><strong>fock() 系统调用</strong>可以实现创建子进程速度足够块，并且占用内存空间少。并且使用了 <strong>copy_on_write 内核机制</strong>，保证数据的<strong>时点</strong>准确。</p><p>实现原理如下：</p><ol><li>应用程序比如 Redis，会有一套自己的虚拟地址，映射物理内存的地址。所以 fock 时，并不是真的复制数据，只是复制指针。所以速度快内存小。</li><li><strong>写时复制（copy_on_write）</strong>：是内核的一种机制，数据有修改时才会真正的帮子进程复制数据，但根据经验一般不会所有数据都修改。而且这个复制的成本也很小，因为数据有修改时，新的数据已经在内存创建中，只需重新指定指针即可。</li></ol><p><img src="../../images/redis3/fork.png" alt=""></p><h3 id="3-3-Redis-RDB（快照-snapshotting-）"><a href="#3-3-Redis-RDB（快照-snapshotting-）" class="headerlink" title="3.3 Redis RDB（快照  snapshotting ）"></a>3.3 Redis RDB（快照  snapshotting ）</h3><p>创建子进程持久化，即前面说的 fork 系统调用和 copy_on_write 机制实现。</p><h4 id="3-3-1-触发方式"><a href="#3-3-1-触发方式" class="headerlink" title="3.3.1 触发方式"></a>3.3.1 触发方式</h4><ol><li><p>手动执行指令</p><ol><li>save：阻塞，Redis 停止对外提供服务。一般只有明确停服或者关机时才使用。</li><li>bgsave：非阻塞。</li></ol></li><li><p>配置文件配置事件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 触发事件，注意这里是触发 bgsave 而不是 save</div><div class="line">save 900 1</div><div class="line">save 300 10</div><div class="line">save 60 10000</div><div class="line">// 文件名称</div><div class="line">dbfilename dump.rdb</div><div class="line">// 文件路径</div><div class="line">dir /var/lib/redis/6379</div></pre></td></tr></table></figure></li></ol><h4 id="3-3-2-优缺点"><a href="#3-3-2-优缺点" class="headerlink" title="3.3.2 优缺点"></a>3.3.2 优缺点</h4><ol><li><p>优点</p><ol><li>类似 java 中的序列化，存储的二进制，恢复的速度相对更快。</li></ol></li><li><p>缺点</p><ol><li><p>不支持拉链，只有一个 dump.rdb 文件。</p></li><li><p>丢失数据相对较多，时点与时点之间窗口数据容易丢失。</p><p>比如 8 点得到一个 rdb，9 点刚要落一个 rdb，redis 突然挂了，那么 8 点到 9 的之间的数据将丢失。</p></li></ol></li></ol><h2 id="4-Redis-AOF-原理"><a href="#4-Redis-AOF-原理" class="headerlink" title="4. Redis AOF 原理"></a>4. Redis AOF 原理</h2><p>Redis 的写操作记录到文件中，即把客户端所有的写操作指令保存到一个文件中，这样重新执行一遍指令就把恢复了。Redis 可以同时开启 RDB 和 AOP，如果开启了 AOF，恢复数据时只会用 AOF，而不会用 RDB，因为 AOF 文件数据更完整。</p><h3 id="4-1-触发方式"><a href="#4-1-触发方式" class="headerlink" title="4.1 触发方式"></a>4.1 触发方式</h3><p>配置文件开启 AOF 后，写指令自动触发。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// 1. 开启 aof，默认是关闭的</div><div class="line">appendonly yes</div><div class="line">appendfilename <span class="string">"appendonly.aof"</span></div><div class="line"></div><div class="line">// 2. 提交配置</div><div class="line">-- 每次写操作 flush 写磁盘</div><div class="line">appendfsync always</div><div class="line">-- 每秒钟主动 flush 写磁盘</div><div class="line">appendfsync everysec</div><div class="line">-- 等 buffer 满了，让内核自动 flush 写磁盘</div><div class="line">appendfsync no </div><div class="line"></div><div class="line">// 3. 自动重写配置 64M，100%</div><div class="line">-- Redis 会记录最后一次重写 AOF 日志文件大小。比如第一次 64M 自动重写；第二次当文件达到 128M 时自动重写</div><div class="line">auto-aof-rewrite-percentage 100</div><div class="line">auto-aof-rewrite-min-size 64mb</div></pre></td></tr></table></figure><h3 id="4-3-优缺点"><a href="#4-3-优缺点" class="headerlink" title="4.3 优缺点"></a>4.3 优缺点</h3><ol><li>优点<ol><li>丢失数据少。注意即使如此还是可能会丢失数据，因为内核向磁盘写数据并不是来了一个数据立即写入磁盘，写操作会触发 I/O，如果一个数据写一次影响效率，所以内核中通常会有一个 buffer，只有 buffer 满了才会去写磁盘。但是 Redis 可以配置（ <strong>appendfsync</strong> ）写入的时间，可以配置每秒或者每提交一个指令不管 buffer 是否满了，立即写磁盘；或者让内核自己控制，即等 buffer 满了再写磁盘。</li></ol></li><li>缺点<ol><li>日志体量无限变大，比如 Redis 运行了十年，会有多少指令？10T？这样日志文件太大了。</li><li>恢复慢，需要把所有指令重新执行一遍。如果指令文件达到 10T，这得执行多久？</li></ol></li></ol><h3 id="4-2-AOF-重写（bgrewriteaof）"><a href="#4-2-AOF-重写（bgrewriteaof）" class="headerlink" title="4.2 AOF 重写（bgrewriteaof）"></a>4.2 AOF 重写（bgrewriteaof）</h3><h4 id="4-2-1-什么是-AOF-重写"><a href="#4-2-1-什么是-AOF-重写" class="headerlink" title="4.2.1 什么是 AOF 重写"></a>4.2.1 什么是 AOF 重写</h4><p>为了解决 AOF 文件随着时间推移，<strong>文件无限变大并且恢复慢</strong>的问题，Redis 设计了一个方案让 AOF 文件足够小，那就是<strong>重写 AOF 日志文件</strong>。可以在配置文件中配置自动重写条件，也可以手动执行 bgrewriteaof 指令立即重写。</p><ol><li>Redis 4.0 以前：删除抵消的命令，合并重复的命令，最终也是一个<strong>纯指令</strong>的日志文件</li><li>Redis 4.0 以后：将老的全量 RDB 数据放到 AOF 文件头部，然后增量的部分以指令的方式追加到 AOF 文件中，最终得到的 AOF 文件是一个混合体，既利用了 RDB 的快，又保证了的数据的完整性。所以重写后，AOF 文件总是以 REDIS 开头，因为 RDB 文件就是以 REDIS 开头。这个混合模式通过配置文件中 <strong>aof-use-rdb-preamble</strong> 来配置</li></ol><h4 id="4-2-2-AOF-重写原理"><a href="#4-2-2-AOF-重写原理" class="headerlink" title="4.2.2 AOF 重写原理"></a>4.2.2 AOF 重写原理</h4><p>通过 fork 系统调用和 copy_on_write 机制实现，其实就是执行了一次 RDB，只不过不是存到 RBD 文件中，而是存到 AOF 文件。</p><p><img src="../../images/redis3/AOF 重写原理.png" alt=""></p><h2 id="5-官网摘录"><a href="#5-官网摘录" class="headerlink" title="5. 官网摘录"></a>5. 官网摘录</h2><ul><li>BGSAVE 、 BGREWRITEAOF  不会同时执行， 防止两个 Redis 后台进程同时对磁盘进行大量的 I/O 操作。 </li><li>Redis 数据备份，定时备份 RDB 文件，确保 RDB 文件带有日期和时间信息，然后备份时删除过期的快照。</li><li>如果 AOF 文件损坏，比如服务器在程序正在写入 AOF 文件时停机。可以使用  redis-check-aof –fix  修复 AOF 文件。</li><li>Redis 容灾备份</li><li>如果你不小心执行了 FLUSHALL 命令。<ul><li>如果 AOF 文件未被重写：那么只要停止服务器， 移除 AOF 文件末尾的 FLUSHALL 命令， 并重启 Redis ， 就可以将数据集恢复到 FLUSHALL 执行之前的状态。</li><li>如果 AOF 文件被重写了：如果没有开启 RDB 凉凉，数据全没了；如果开启了 RDB，可以恢复到最近一个 RDB 时点的数据。</li></ul></li></ul><h2 id="6-实操验证"><a href="#6-实操验证" class="headerlink" title="6. 实操验证"></a>6. 实操验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">// 0. 前置准备</div><div class="line">-- 停服</div><div class="line">service redis_6379 stop</div><div class="line">-- 删除 RDB/AOF 文件</div><div class="line"><span class="built_in">cd</span> /var/lib/redis/6379/</div><div class="line">rm -f ../../*</div><div class="line">-- 修改配置</div><div class="line"><span class="built_in">cd</span> /etc/redis/</div><div class="line">vim 6379.conf </div><div class="line">    -- 前台阻塞启动</div><div class="line">    daemonize no</div><div class="line">    -- 不记录日志，直接前台看</div><div class="line">    <span class="comment"># logfile /var/log/redis_6379.log</span></div><div class="line">    -- 开启 AOF</div><div class="line">    appendonly yes</div><div class="line">    -- 关闭 AOF 重写混合模式</div><div class="line">    aof-use-rdb-preamble no</div><div class="line">-- 启动服务</div><div class="line">redis-server /etc/redis/6379.conf</div><div class="line">-- 客户端连接</div><div class="line">redis-cli</div><div class="line"></div><div class="line">// 1. RDB/AOF 验证</div><div class="line">// 1.1 AOF 写操作验证 </div><div class="line"><span class="built_in">set</span> k1 a</div><div class="line"><span class="built_in">set</span> k2 b</div><div class="line">get k1</div><div class="line"><span class="built_in">cd</span> /var/lib/redis/6379</div><div class="line">-- 存有 <span class="built_in">set</span> k1,k2 记录，没有记录 get k1</div><div class="line">vim appendonly.aof</div><div class="line"><span class="built_in">set</span> k1 b</div><div class="line">-- 追加了 <span class="built_in">set</span> k1 b</div><div class="line">vim appendonly.aof</div><div class="line">// 1.1 RDB save/bgsave 验证 </div><div class="line">bgsave</div><div class="line">-- REDIS 开头</div><div class="line">vim dump.rdb</div><div class="line"></div><div class="line">// 2. AOF 重写验证</div><div class="line">// 2.1 AOF 非混合重写验证</div><div class="line"><span class="built_in">set</span> k1 a</div><div class="line"><span class="built_in">set</span> k1 b</div><div class="line"><span class="built_in">set</span> k1 c</div><div class="line"><span class="built_in">set</span> k1 d</div><div class="line">bgrewriteaof</div><div class="line">-- 只有 <span class="built_in">set</span> k1 d</div><div class="line">vim appendonly.aof</div><div class="line">// 2.2 AOF 混合重写验证</div><div class="line">-- 停服，修改配置</div><div class="line"><span class="built_in">cd</span> /etc/redis/</div><div class="line">vim 6379.conf</div><div class="line">aof-use-rdb-preamble yes</div><div class="line">-- 启动服务</div><div class="line">redis-server /etc/redis/6379.conf</div><div class="line"><span class="built_in">set</span> k3 aaa</div><div class="line">bfrewriteaof</div><div class="line">-- 变为混合文件</div><div class="line">vim appendonly.aof</div><div class="line"><span class="built_in">set</span> k3 bbb</div><div class="line">-- 追加了 <span class="built_in">set</span> k3 bbb</div><div class="line">vim appendonly.aof</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 持久化学习笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis 学习(二)-管道、发布/订阅、事务、modules、过期</title>
    <link href="http://yoursite.com/2020-02-19-202002/Redis%20%E5%AD%A6%E4%B9%A0(%E4%BA%8C)-%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD.html"/>
    <id>http://yoursite.com/2020-02-19-202002/Redis 学习(二)-基本功能.html</id>
    <published>2020-02-19T14:13:12.000Z</published>
    <updated>2020-02-23T03:01:52.443Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 管道、发布订阅、事务、modules、key 过期相关知识学习笔记。<br><a id="more"></a></p><h2 id="1-Redis-管道（Pipelining）"><a href="#1-Redis-管道（Pipelining）" class="headerlink" title="1. Redis 管道（Pipelining）"></a>1. Redis 管道（Pipelining）</h2><h3 id="1-1-一次执行多条语句减少-RTT"><a href="#1-1-一次执行多条语句减少-RTT" class="headerlink" title="1.1 一次执行多条语句减少 RTT"></a>1.1 一次执行多条语句减少 RTT</h3><p>使用管道，可以有效减少 RTT (Round Trip Time - 往返时间)  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 如果没有 redis 客户端，只要能和 redis 建立一个 socket 连接，也是可以执行的</div><div class="line">yum instll nc</div><div class="line">nc localhost 6379</div><div class="line"><span class="built_in">set</span> key1 aaa</div><div class="line"><span class="built_in">echo</span> -e <span class="string">"set k2 99\n incr k2\n get k2"</span> | nc localhost 6379</div></pre></td></tr></table></figure><h3 id="1-2-Redis-从文件中批量插入数据"><a href="#1-2-Redis-从文件中批量插入数据" class="headerlink" title="1.2 Redis 从文件中批量插入数据"></a>1.2 Redis 从文件中批量插入数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 创建文件，输入命令</div><div class="line">vim d1.txt</div><div class="line">// redis-cli中只支持dos格式的换行符 \r\n；需要转码，不过我没转也成功了</div><div class="line">yum install unix2dos</div><div class="line">unix2dos d1.txt</div><div class="line">// 执行导入：cat 读取文件内容；redis-cli 发送文件到 redis 执行</div><div class="line">cat d1.txt | redis-cli --pipe</div><div class="line">cat d1.txt | redis-cli -p 6380 -h 192.168.1.166 --pipe</div></pre></td></tr></table></figure><h2 id="2-Redis-发布-订阅（Pub-Sub）"><a href="#2-Redis-发布-订阅（Pub-Sub）" class="headerlink" title="2. Redis 发布/订阅（Pub/Sub）"></a>2. Redis 发布/订阅（Pub/Sub）</h2><ol><li><p>接收不到订阅之前的消息。</p></li><li><p>发布/订阅与 key 所在空间没有关系，包括不同数据库编码。 发布在 db 2，订阅可以在 db 1 </p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">help</span> @pubsub</div><div class="line">// 订阅</div><div class="line">subscribe ooxx</div><div class="line">// 模糊匹配订阅（可能导致收到多条消息）</div><div class="line">psubscribe ooxx.*</div><div class="line">// 发布</div><div class="line">publish ooxx hello</div><div class="line">// 取消订阅</div><div class="line">unsubscribe</div><div class="line">// 模糊匹配取消订阅</div><div class="line">punsubscribe</div><div class="line">// 查看一些统计信息</div><div class="line">pubsub channels/numpat/numsub</div></pre></td></tr></table></figure><h3 id="2-1-发布-订阅应用场景"><a href="#2-1-发布-订阅应用场景" class="headerlink" title="2.1 发布/订阅应用场景"></a>2.1 发布/订阅应用场景</h3><p>如 QQ 消息，别人发消息需要实时查看，也可查看历史数据。</p><p>方案一：</p><p>发布消息时需要做三件事情：</p><ol><li>将发布到 redis 指定管道</li><li>将消息存到 redis 的 sorted set（日期作为分值）</li><li>将消息发布到 kafka 指定 topic</li></ol><p>接收消息时：</p><ol><li>接收实时消息：订阅 redis 指定管道</li><li>近期消息：查询 redis sorted set</li><li>历史消息：查询 mysql</li></ol><p><img src="../../images/redis2/qq聊天方案1.png" alt=""></p><p>方案二：</p><p>发布消息时：</p><ol><li>发布消息到 redis 服务指定管道</li><li>redis 实例2 订阅消息存 zset（日期作为分值）</li><li>service 端订阅消息发 kafka</li></ol><p>接收消息时：不变</p><p><img src="../../images/redis2/qq聊天方案2.png" alt=""></p><h2 id="3-Reids-事务"><a href="#3-Reids-事务" class="headerlink" title="3. Reids 事务"></a>3. Reids 事务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set</span> k1 aaa</div><div class="line">// 放弃事务</div><div class="line">discard</div><div class="line">// 执行 multi 标记后的所有命令</div><div class="line"><span class="built_in">exec</span></div><div class="line">// 标记事务开始</div><div class="line">multi</div><div class="line">// 取消监视，有啥用？和 discard 有啥区别</div><div class="line">unwatch</div><div class="line">// watch 可为 redis 事务提供 CAS 行为。使用 check-and-set 操作实现乐观锁</div><div class="line">// 当 EXEC 被调用时， 不管事务是否成功执行， 对所有键的监视都会被取消</div><div class="line">watch</div></pre></td></tr></table></figure><h3 id="4-1-事务的理解"><a href="#4-1-事务的理解" class="headerlink" title="4.1 事务的理解"></a>4.1 事务的理解</h3><p>例子：两个 redis 客户端，client1 想查询 k1，client2 想删除 k1 如何保证事务？</p><p><img src="../../images/redis2/redis事务1.png" alt=""></p><p>先执行 get，还是先执行 del，取决于 exec1 先到达还是 exec2 先到达，<strong>先到先执行</strong>。注意这里两个事务都执行了。加了 watch 就不一样了。</p><p>如果 exec2 先到达，执行 exec1 时会报错。所以一般 client1 执行前会 watch k1，加了watch 后，如果执行 exec1 时，k1 有改动，则该<strong>事务内的所有指令不会执行</strong>。</p><h3 id="4-2-错误发生在-exec-前后的情况"><a href="#4-2-错误发生在-exec-前后的情况" class="headerlink" title="4.2 错误发生在 exec 前后的情况"></a>4.2 错误发生在 exec 前后的情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 语法错误，放弃事务</div><div class="line">multi</div><div class="line"><span class="built_in">set</span> k1 aaa</div><div class="line">get k1 bbb // 无法入队</div><div class="line"><span class="built_in">exec</span></div><div class="line"></div><div class="line">// 执行时错误，只是错误的命令不执行</div><div class="line">multi</div><div class="line"><span class="built_in">set</span> k1 aaa</div><div class="line">lpop k1   // 成功入队，但是类型错误</div><div class="line"><span class="built_in">exec</span></div></pre></td></tr></table></figure><h3 id="4-3-为什么-Redis-不支持回滚"><a href="#4-3-为什么-Redis-不支持回滚" class="headerlink" title="4.3 为什么 Redis 不支持回滚"></a>4.3 为什么 Redis 不支持回滚</h3><p> Redis 在事务失败时不进行回滚，而是继续执行余下的命令 。</p><p>优点：</p><ul><li>Redis 命令只会因为错误的语法而失败（并且这些问题不能在入队时发现），或是命令用在了错误类型的键上面：这也就是说，从实用性的角度来说，失败的命令是由<strong>编程错误</strong>造成的。Redis 官方认为，这种情况和你本来想 set k1 3，结果错误的写成 set k1 4 是一个道理，是没法回滚的。</li><li>因为无需对回滚进行支持，所以 Redis 的内部可以保持简单且快速</li></ul><h2 id="5-Redis-modules"><a href="#5-Redis-modules" class="headerlink" title="5. Redis modules"></a>5. Redis modules</h2><h3 id="5-1-布隆过滤器"><a href="#5-1-布隆过滤器" class="headerlink" title="5.1 布隆过滤器"></a>5.1 布隆过滤器</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">// 1. 进入 redis 官网 modules 模块</div><div class="line">https://redis.io/modules</div><div class="line">// 2. 找到 RedisBloom，进入主页</div><div class="line">https://github.com/RedisBloom/RedisBloom</div><div class="line">// 3. 复制下载地址</div><div class="line">https://github.com/RedisBloom/RedisBloom/archive/master.zip</div><div class="line">// 4. 解压并编译源码</div><div class="line">yum install unzip</div><div class="line">unzip master.zip</div><div class="line"><span class="built_in">cd</span> RedisBloom-master</div><div class="line">make</div><div class="line">// 5. 复制扩展包到 redis 安装路径</div><div class="line">cp redisbloom.so /opt/alvin/redis5</div><div class="line">// 6. 启动加载了布隆过滤器的 redis。也可以在配置文件中配置</div><div class="line">redis-server /etc/reids/6379.conf --loadmodule /opt/alvin/redis5/redisbloom.so</div><div class="line">// 7. 连接 redis，发现多个 BF CF 开头的命令</div><div class="line">redis-cli</div></pre></td></tr></table></figure><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>如何用小的内存处理大批量数据的匹配？通过 <strong>bitmap</strong> 实现。</p><p>如果数据库添加了元素，则一定要完成对 bloom 的添加。</p><p>原理图：</p><p><img src="../../images/redis2/布隆过滤器原理.png" alt=""></p><h4 id="如果已经穿透了怎么办？"><a href="#如果已经穿透了怎么办？" class="headerlink" title="如果已经穿透了怎么办？"></a>如果已经穿透了怎么办？</h4><p>可以把穿透的 key 写入 redis，value 设置为 null 或者提示，并设置有效期，防止后边真的有这个元素了。</p><h2 id="6-Redis-作为数据库和作为缓存的区别"><a href="#6-Redis-作为数据库和作为缓存的区别" class="headerlink" title="6. Redis 作为数据库和作为缓存的区别"></a>6. Redis 作为数据库和作为缓存的区别</h2><h3 id="6-1-作为缓存"><a href="#6-1-作为缓存" class="headerlink" title="6.1 作为缓存"></a>6.1 作为缓存</h3><ol><li>缓存数据“不重要”，不是全量数据</li><li>Redis 里的数据应该随着业务的变化而变化，只保留热点数据，因为内存大小是有限的，也就是瓶颈。</li></ol><h3 id="6-2-如何实现数据随着业务变化？"><a href="#6-2-如何实现数据随着业务变化？" class="headerlink" title="6.2 如何实现数据随着业务变化？"></a>6.2 如何实现数据随着业务变化？</h3><ol><li><p>业务逻辑：根据业务逻辑来确定 key 的有效期</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set</span> k1 aaa ex 20</div><div class="line">// 查看过期时间</div><div class="line">ttl k1</div><div class="line">// 更新过期时间（重新设置，记录 session 可能会用到）</div><div class="line">expire k1 60</div><div class="line">// 读操作，过期时间不会变，还是在继续减少</div><div class="line">get k1</div><div class="line">// 写操作，重置过期时间。ttl k1 ==&gt; -1</div><div class="line"><span class="built_in">set</span> k1 bbb</div><div class="line">// 当前时间戳</div><div class="line">time</div><div class="line">// 定时（时间戳）</div><div class="line">expireat k1</div><div class="line">// 移除过期时间</div><div class="line">PERSIST k1</div></pre></td></tr></table></figure></li><li><p>业务运转：内存是有限的，随着访问的变化，应该淘汰掉冷数据。</p><ol><li><p>maxmemeory <bytes> 设置最大内存</bytes></p></li><li><p>maxmemory-policy  设置回收策略。<strong>LFU：使用次数；LRU：多久没有使用</strong>。</p></li></ol></li></ol><h3 id="6-3-Redis-如何淘汰过期的-key？"><a href="#6-3-Redis-如何淘汰过期的-key？" class="headerlink" title="6.3 Redis 如何淘汰过期的 key？"></a>6.3 Redis 如何淘汰过期的 key？</h3><ol><li><p>被动访问判定。访问到某个 key，发现其过期，然后删除。</p></li><li><p>周期轮询时间判定（增量），每秒执行 10 次。</p><ol><li>测试随机的20个keys进行相关过期检测。 </li><li>删除所有已经过期的keys。 </li><li>如果有多于25%的keys过期，重复步奏1。</li></ol><p>目的，稍微牺牲下内存，但是保住了 redis 性能。</p></li></ol><h3 id="6-4-Redis-作为数据库"><a href="#6-4-Redis-作为数据库" class="headerlink" title="6.4 Redis 作为数据库"></a>6.4 Redis 作为数据库</h3><ol><li>数据绝对不能丢</li><li>内存数据库都有<strong>掉电易失</strong>的问题，所以需要持久化</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 管道、发布订阅、事务、modules、key 过期相关知识学习笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis 学习(一)-概述、安装、类型、指令</title>
    <link href="http://yoursite.com/2020-02-18-202002/Redis%20%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4.html"/>
    <id>http://yoursite.com/2020-02-18-202002/Redis 学习(一)-基本指令.html</id>
    <published>2020-02-18T14:13:12.000Z</published>
    <updated>2020-02-23T02:58:59.027Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 来由、安装、集中基本类型和指令学习笔记。<br><a id="more"></a></p><h2 id="1-Redis-前世今生"><a href="#1-Redis-前世今生" class="headerlink" title="1. Redis 前世今生"></a>1. Redis 前世今生</h2><h3 id="1-0-一点常识"><a href="#1-0-一点常识" class="headerlink" title="1.0 一点常识"></a>1.0 一点常识</h3><ul><li>磁盘寻址速度 ms 级别，带宽 G 或 M 级别</li><li>内存寻址速度 ns 级别，比磁盘寻址快了 10 万倍，带宽极大</li><li>磁盘有磁道和扇区，一扇区默认 512 Byte。</li></ul><h3 id="1-1-最初数据是存在文件中"><a href="#1-1-最初数据是存在文件中" class="headerlink" title="1.1 最初数据是存在文件中"></a>1.1 最初数据是存在文件中</h3><p>比如 linux 使用 grep、awk 来检索数据，随着文件的变大，速度会变慢。因为是<strong>全量检索</strong>，会遇到磁盘寻址和吞吐的瓶颈。数据库使用<strong>分治</strong>来解决，Redis 作为缓存，存的不是全量数据，而是热数据。</p><h3 id="1-2-关系型数据库"><a href="#1-2-关系型数据库" class="headerlink" title="1.2 关系型数据库"></a>1.2 关系型数据库</h3><p>数据库使用多个 datapage 存储表的数据，每个 datapage 4k （可以调整）大小，把<strong>数据分开存储</strong>，然后可以有索引来检索这些数据，索引也是存储在 datapage 中。索引使用内存里的 B+ 树来管理，B+ 树树干是在内存中，索引放在 B+ 树的叶子上，sql 语句中 where 条件只要命中索引， B+ 树就沿着树干找到索引的叶子，然后把叶子 datapage 读到内存解析，然后知道解析（放到内存中）哪些数据 datapage。</p><p>结构图如下：</p><p><img src="../../images/redis1/关系型数据库结构.png" alt=""></p><p><strong>问题：</strong>关系型数据库建表时为什么必须给出 schema ? </p><p><strong>答案：</strong>因为存储数据时，倾向于行级存储。就是说即使这个表有十个字段，有一行数据只有一个字段有值，存储时也会开辟十个字段的 datapage。这样的好处是<strong>后边增删改这行数据就不用做偏移了，直接重写</strong>就行。</p><p><strong>问题：</strong>数据库表很大，会导致性能下降？</p><p><strong>答案：</strong>如果表有索引，增删改需要维护索引，性能会变慢。查询则分两种情况：1. 一个或少量查询依然会很快。 2. 并发大的时候会受到<strong>磁盘带宽</strong>的影响导致速度变慢</p><p>问题：什么是 4k 对齐？</p><p>答案：正常来说，磁盘一个扇区 512 Byte。所谓 4k 对齐就是指按照 4k 来划分小格子，索引的体量大小变小了，操作系统读取的时候，不论读取多大的数据都是按照 4k 读取。注意磁盘格子的大小不一定是 4k，这取决于上层应用。比如上层应用主要用于存储视频，音频等，4k 可能太小了，浪费了磁盘寻址时间，反而得不偿失。</p><p><strong>缺点：</strong></p><ul><li>数据是存在磁盘的文件里。随着文件变大，速度会变慢，因为硬盘 I/O 成为瓶颈。</li><li>磁盘寻址慢</li><li>随着数据量增大，索引成本变大</li></ul><h3 id="1-3-关系型内存数据库缺点"><a href="#1-3-关系型内存数据库缺点" class="headerlink" title="1.3 关系型内存数据库缺点"></a>1.3 关系型内存数据库缺点</h3><p>如果直接使用关系型内存数据库，速度确实快，比如 SAP 公司的 HANA 数据库就是关系型内存数据库，但是价格太贵，一般买不起。但是磁盘数据库又太慢了。</p><p>所以出现了折中方案：key-value 型内存数据库： <strong>memcached、Redis</strong></p><h3 id="1-4-key-value-型内存数据库-Redis"><a href="#1-4-key-value-型内存数据库-Redis" class="headerlink" title="1.4 key-value 型内存数据库 Redis"></a>1.4 key-value 型内存数据库 Redis</h3><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作<strong>数据库、缓存和消息中间件</strong>。 </p><p>Redis 支持多种类型的数据结构，如字符串、散列、列表、集合、有序集合与范围查询，bitmaps、hyperloglogs 和地理空间索引半径查询。</p><p>Redis 内置了复制，LUA 脚本，LRU 驱动事件，事务和不同级别的磁盘持久化，并通过 Redis 哨兵和自动分区提供高可用性。</p><h3 id="1-5-Redis-和-memcached-对比"><a href="#1-5-Redis-和-memcached-对比" class="headerlink" title="1.5 Redis 和 memcached 对比"></a>1.5 Redis 和 memcached 对比</h3><p>在 Redis 之前，有memcached，也是 key-value 型数据库，但是它的 value 没有类型的概念，所以更多人选择使用 Redis。</p><p><strong>问题：</strong> memcached 的 value 也可以用 json 来存储复杂的数据结构，为啥会选择 Redis？</p><p><strong>答案：</strong>因为获取数据成本不同，比如从一个 list 类型的 value 中取一个元素：</p><ul><li>memcached 需要返回 value 所有的数据到客户端，就是整个 list json 数据。会导致两个问题：1. server 端网卡 IO 限制。2. 客户端需要自己实现代码去解码 json。</li><li>Redis 其实类型不是很重要，<strong>它本身是二进制安全的</strong>，重要的是 Redis 中对每种类型都有自己的方法。比如根据 index、lpop 等。避免的上面的两个问题（返回需要的数据，降低 I/O 消耗；计算向数据移动，计算主要在 Redis server 端完成）。</li></ul><p><strong>问题：</strong>Redis 为什么不用 sql 查询，而是 key-value？</p><p><strong>答案：</strong>因为 Redis 设计的初衷不是存储全量数据，而是存储部分数据。部分数据无法维护类似关系型数据库中的<strong>约束、范式</strong>，所以还不如面向数据本身，把场景简单化。</p><h3 id="1-4-对比各类数据库"><a href="#1-4-对比各类数据库" class="headerlink" title="1.4 对比各类数据库"></a>1.4 对比各类数据库</h3><p>可以参考： <a href="https://db-engines.com/en/" target="_blank" rel="external">https://db-engines.com/en/</a> </p><h2 id="2-卸载-安装-Redis"><a href="#2-卸载-安装-Redis" class="headerlink" title="2. 卸载/安装 Redis"></a>2. 卸载/安装 Redis</h2><h3 id="2-1-安装-Redis"><a href="#2-1-安装-Redis" class="headerlink" title="2.1 安装 Redis"></a>2.1 安装 Redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">// 1. 检查是否已经安装 wget</div><div class="line">rpm -qa|grep wget</div><div class="line">// 2. 如果没有安装则安装 wget</div><div class="line">yum install wget</div><div class="line">// 3. 下载 redis 源码到家目录</div><div class="line"><span class="built_in">cd</span> ~</div><div class="line">mkdir soft</div><div class="line"><span class="built_in">cd</span> soft</div><div class="line">wget http://download.redis.io/releases/redis-5.0.5.tar.gz</div><div class="line">// 4. 解压源码</div><div class="line">tar xf redis-5.0.5.tar.gz</div><div class="line">// 5. 阅读 README.md 文件</div><div class="line"><span class="built_in">cd</span> redis--5.0.5</div><div class="line">vi README.md</div><div class="line">// 6. 编译源码</div><div class="line">make</div><div class="line">// 7. 如果提示 cc:<span class="built_in">command</span> not found；否则跳过</div><div class="line">yum install gcc</div><div class="line">make distclean</div><div class="line">make</div><div class="line">// 8. 发现源码 src 目录已经生成了可执行文件</div><div class="line">// 9. 安装 redis 到指定目录</div><div class="line">make install PREFIX=/opt/alvin/redis5</div><div class="line">// 10. 添加 path 环境变量</div><div class="line">vi /etc/profile</div><div class="line">  <span class="built_in">export</span> REDIS_HOME=/opt/alvin/redis5</div><div class="line">  <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$REDIS_HOME</span>/bin</div><div class="line">// 11. 刷新环境变量</div><div class="line"><span class="built_in">source</span> /etc/profile</div><div class="line">// 12. 将 redis 安装为服务</div><div class="line"><span class="built_in">cd</span> utils</div><div class="line">// 可执行一次或者多次</div><div class="line">// a) 一个物理机中可以有多个 redis 实例（进程），通过端口号区分</div><div class="line">// b) 可执行程序就一份在目录，但是内存中未来的多个实例需要各自的配置文件，持久化目录等</div><div class="line">// c) redis 服务已经自动启动</div><div class="line">../../install_server.sh</div><div class="line">// 13. 查看服务状态</div><div class="line">service redis_6379 status</div><div class="line">// 14. 查看 redis 服务进程</div><div class="line">ps -ef|grep redis</div></pre></td></tr></table></figure><p><img src="../../images/redis1/安装redis1.png" alt=""></p><h3 id="2-2-卸载-Redis"><a href="#2-2-卸载-Redis" class="headerlink" title="2.2 卸载 Redis"></a>2.2 卸载 Redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 1. 检查是否已经安装 redis</div><div class="line">whereis redis-server</div><div class="line">// 2. 如果安装了，停止 redis 服务</div><div class="line">service redis_6379 stop</div><div class="line">// 3. 删除 redis 服务</div><div class="line">// 不删除也无影响</div><div class="line">// 4. 删除安装文件</div><div class="line">rm -rf redis5</div><div class="line">// 5. 删除源码</div><div class="line">rm -rf redis-5.0.5</div><div class="line">rm -rf redis-5.0.5.tar.gz</div></pre></td></tr></table></figure><p><img src=".../../images/redis1/卸载redis.png" alt=""></p><h2 id="3-Redis-单线程理解"><a href="#3-Redis-单线程理解" class="headerlink" title="3. Redis 单线程理解"></a>3. Redis 单线程理解</h2><p>一台物理机上可以安装多个 Redis 实例，Redis 服务端处理是单进程、单线程、单实例的。当并发很多的请求的时候，它是如何变得很快的？</p><p>I/O 多路复用模型。</p><h2 id="4-Redis-五种-value-类型"><a href="#4-Redis-五种-value-类型" class="headerlink" title="4. Redis 五种 value 类型"></a>4. Redis 五种 value 类型</h2><h3 id="4-1-string"><a href="#4-1-string" class="headerlink" title="4.1 string"></a>4.1 string</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">// =================通用类开始====================</div><div class="line">// 查看帮助</div><div class="line">redis-cli -<span class="built_in">help</span></div><div class="line">// 客服端连接 -n 表示连那个库，一共有16个库</div><div class="line">redis-cli -p 6379 -n 0</div><div class="line">// 不带raw：redis 只会识别 ascii 码，超出 ascii 直接显示 16 进制</div><div class="line">// 带了raw：会触发编码集的格式化。发现了当前的十六进制符合当前编码字符集的规则，就会转换</div><div class="line">redis-cli --raw</div><div class="line">// 切换库</div><div class="line">select 8</div><div class="line">// 如何学习命令</div><div class="line"><span class="built_in">help</span></div><div class="line">// 查看 value 类型</div><div class="line"><span class="built_in">type</span> k1</div><div class="line">// <span class="built_in">type</span> 还是 string，因为 <span class="built_in">set</span> 命令是 string 组的</div><div class="line"><span class="built_in">set</span> k1 99</div><div class="line">object <span class="built_in">help</span></div><div class="line">// 查看 value 编码 int</div><div class="line">object encoding k1</div><div class="line">// =================通用类结束====================</div><div class="line">// =================字符串类开始===================</div><div class="line">// nx（只能新增）：k1 不存在的时候才操作</div><div class="line"><span class="built_in">set</span> k1 ooxx nx</div><div class="line">// xx（只能更新）：k2 存在的时候才操作</div><div class="line"><span class="built_in">set</span> k2 hello xx</div><div class="line">setex k1 5 aaa</div><div class="line">psetex k1 5000 aaa</div><div class="line">// mset、mget 设置、获取多条</div><div class="line">mset k3 a k4 b</div><div class="line">mget k3 k4</div><div class="line">// msetnx(只能新增)</div><div class="line">msetnx k1 a k2 b</div><div class="line">msetnx k2 c k3 d</div><div class="line">// 只找到 k1、k2 说明 msetnx 是原子性的</div><div class="line">mget k1 k2 k3</div><div class="line">// append 追加</div><div class="line">append k1 <span class="string">" world"</span></div><div class="line">// getrange 获取索引范围内字节</div><div class="line">getrange k1 6 10</div><div class="line">// 有正向索引和反向索引</div><div class="line">getrange k1 6 -1</div><div class="line">getrange k1 0 -1</div><div class="line">// 覆盖指定位置开始的字符串，能覆盖多少就覆盖多少</div><div class="line">setrange k1 6 mashibing</div><div class="line">// 字符串长度</div><div class="line">strlen k1</div><div class="line">// =================字符串类结束===================</div><div class="line">// =================数值类开始=====================</div><div class="line">// 加1</div><div class="line">incr k1</div><div class="line">// 加22</div><div class="line">incrby k1 22</div><div class="line">// 减1</div><div class="line">decr k1</div><div class="line">// 减22</div><div class="line">decrby k1 22</div><div class="line">// 加0.5</div><div class="line">incrbyfloat k1 0.5</div><div class="line">// =================数值类结束=====================</div><div class="line">// =================bitmap类开始==================</div><div class="line">// 面向字节有索引，二进制位也有索引</div><div class="line">// offset 的 1 是指位索引的第二个位置设置为 1</div><div class="line">// 注意 setbit 是位级别 <span class="built_in">set</span></div><div class="line">// strlen为1 @</div><div class="line">setbit k1 1 1</div><div class="line">// strlen为1 A</div><div class="line">setbit k1 7 1</div><div class="line">// strlen为2 A@</div><div class="line">setbit k1 9 1</div><div class="line">getbit k1 0</div><div class="line">// 指定范围直接内，查询第一次出现指定位的位索引：1</div><div class="line">bitpos k1 1 0 0</div><div class="line">// 9</div><div class="line">bitpos k1 1 1 1</div><div class="line">// 1：第一个字节到第二个字节，1第一次出现1的位索引</div><div class="line">bitpos k1 1 0 1</div><div class="line">// 4：第一个字节到第二个字节1出现的次数</div><div class="line">bitcount k1 0 1</div><div class="line">// k1 k2 按位与的结果存到 andkey</div><div class="line">bitop and andkey k1 k2</div><div class="line">// 按位或</div><div class="line">bitop or orkey k1 k2</div><div class="line">// =================bitmap类结束==================</div></pre></td></tr></table></figure><h4 id="4-1-1-string-类型应用"><a href="#4-1-1-string-类型应用" class="headerlink" title="4.1.1 string 类型应用"></a>4.1.1 string 类型应用</h4><ol><li>分布式锁： string 类型的 setnx 的作用是“当 key 不存在时，设值并返回 1，当 key 已经存在时，不设值并返回 0”，“判断 key 是否存在”和“设值”两个操作是原子性地执行的，因此可以用 string 类型作为分布式锁，返回 1 表示获得锁，返回 0 表示没有获得锁。 </li><li>存储对象：对象转为 json，存入 Redis。</li></ol><h4 id="4-1-2-数值类型应用"><a href="#4-1-2-数值类型应用" class="headerlink" title="4.1.2 数值类型应用"></a>4.1.2 数值类型应用</h4><p>计数器：抢购、秒杀、点赞、评论数。<strong>规避并发下，对数据库的事务操作</strong>，完全由 reids 内存操作代替。</p><h4 id="4-1-3-bitmap-类应用"><a href="#4-1-3-bitmap-类应用" class="headerlink" title="4.1.3 bitmap 类应用"></a>4.1.3 bitmap 类应用</h4><ol><li><p>有一个用户系统，需要统计用户登录天数，且窗口（日期）随机，怎么统计？</p><p>使用用户 id 作为 key，value 为 bitmap，位索引表示日期，位值为 1 表示登录了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// alvin 第二天登录了</div><div class="line">setbit alvin 1 1</div><div class="line">// alvin 第八天登录了</div><div class="line">setbit alvin 7 1</div><div class="line">// alvin 第 365 天登录了</div><div class="line">setbit alvin 364 1</div><div class="line">// 仅占用 46 个字节</div><div class="line">strlen alvin</div><div class="line">// 今年最后 16 天 alvin 登录次数</div><div class="line">bitcount alvin -2 -1</div><div class="line">// 问题：最后 15 天怎么统计呢？窗口期只能是 8 的倍数？或者索引全部乘以 8，这样空间又提升了 8 倍。或者 getbit 一个一个取，这样访问量又上去了，考虑使用管道或许可行。</div></pre></td></tr></table></figure></li><li><p>京东 618 做活动，送礼物，大库应该备货多少？即活跃用户统计。</p><p>以日期作为 key，value 为 bitmap，位索引表示员工编号，位值为 1 表示登录了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// 一月一日一号员工登录</div><div class="line">setbit 20190101 1 1</div><div class="line">// 一月二日一号员工登录</div><div class="line">setbit 20190102 1 1</div><div class="line">// 一月二日七号员工登录</div><div class="line">setbit 20190102 7 1</div><div class="line">// 一日、二日这两天多少人登录了？</div><div class="line">bitop or destkey 20190101 20190102</div><div class="line">bitcount destkey 0 -1</div><div class="line">// 问题：实际情况员工或者用户 id 不一定是 1 开始排序。</div></pre></td></tr></table></figure></li></ol><h4 id="4-1-4-bitfield-命令理解"><a href="#4-1-4-bitfield-命令理解" class="headerlink" title="4.1.4 bitfield 命令理解"></a>4.1.4 bitfield 命令理解</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">// BITFIELD key </div><div class="line">// [GET <span class="built_in">type</span> offset] </div><div class="line">// [SET <span class="built_in">type</span> offset value] </div><div class="line">// [INCRBY <span class="built_in">type</span> offset increment] </div><div class="line">// [OVERFLOW WRAP|SAT|FAIL]</div><div class="line"><span class="built_in">set</span> key1 a</div><div class="line">// 97,a ASCII 码就是 97</div><div class="line">bitfield key1 get i8 0</div><div class="line"></div><div class="line">// 有符号 8 位，表数范围（-128~127）</div><div class="line">bitfield key1 <span class="built_in">set</span> i8 0 127</div><div class="line">// 127</div><div class="line">bitfield key1 get i8 0</div><div class="line">// 溢出默认 WARP</div><div class="line">bitfield key1 <span class="built_in">set</span> i8 0 128</div><div class="line">// -128</div><div class="line">bitfield key1 get i8 0</div><div class="line">// 设置溢出 sat</div><div class="line">bitfield key1 overflow sat <span class="built_in">set</span> i8 0 128</div><div class="line">// 127</div><div class="line">bitfield key1 get i8 0</div><div class="line">// 设置溢出 fail</div><div class="line">bitfield key1 overflow fail <span class="built_in">set</span> i8 0 128</div><div class="line">// 127(没有变化)</div><div class="line">bitfield key1 get i8 0</div><div class="line"></div><div class="line">// 无符号 8 位，表数范围（0~255）</div><div class="line">bitfield key1 <span class="built_in">set</span> u8 0 255</div><div class="line">// 255</div><div class="line">bitfield key1 get u8 0</div><div class="line">// 溢出默认 WARP</div><div class="line">bitfield key1 <span class="built_in">set</span> u8 0 257</div><div class="line">// 1</div><div class="line">bitfield key1 get u8 0</div><div class="line">// 设置溢出 sat</div><div class="line">bitfield key1 overflow sat <span class="built_in">set</span> u8 0 257</div><div class="line">// 255</div><div class="line">bitfield key1 get u8 0</div><div class="line">// 设置溢出 fail</div><div class="line">bitfield key1 overflow fail <span class="built_in">set</span> u8 0 257</div><div class="line">// 255（没有变化）</div><div class="line">bitfield key1 get u8 0</div><div class="line"></div><div class="line">// 0110 0001</div><div class="line"><span class="built_in">set</span> key1 a</div><div class="line">// 97</div><div class="line">bitfield key1 get i8 0</div><div class="line">// 110 00010 ==&gt; -62</div><div class="line">bitfield key1 get i8 1</div></pre></td></tr></table></figure><h3 id="4-2-list"><a href="#4-2-list" class="headerlink" title="4.2 list"></a>4.2 list</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">// 向前追加</div><div class="line">lpush k1 a b c d e f</div><div class="line">// list 存在才 push</div><div class="line">lpushx k1 g h</div><div class="line">// 向后追加</div><div class="line">rpush k2 a b c d e f</div><div class="line">// list 存在才 push</div><div class="line">rpushx k2 g h</div><div class="line">// 删除并获取第一个</div><div class="line">lpop k1</div><div class="line">// 删除并获取最后一个</div><div class="line">rpop k1</div><div class="line">// 删除 lista 最后一个元素，prepend 到 listb</div><div class="line">rpoplpush</div><div class="line">// 有正向索引和反向索引</div><div class="line">lrange k1 0 -1</div><div class="line">// 根据索引获取 list 元素</div><div class="line">lindex k1 2</div><div class="line">// 反向索引</div><div class="line">lindex k1 -1</div><div class="line">// 根据索引设置值（不可超出索引范围）</div><div class="line">lset k1 3 xxxxx</div><div class="line">lrange k1 0 -1</div><div class="line">// 从左向右删除两个a</div><div class="line">lrem k1 2 a</div><div class="line">// 从右向左删除两个a</div><div class="line">lrem k3 -2 a</div><div class="line">// 在元素 6 后面插入 a</div><div class="line">linsert k3 after 6 a</div><div class="line">linsert k3 before 3 a</div><div class="line">// 删除索引两边的元素</div><div class="line">ltrim k3 2 -2</div><div class="line">ltrim k1 1 0</div><div class="line">// list 长度</div><div class="line">llen k1</div><div class="line">// block 版，没拿到数据则阻塞，timeout:秒</div><div class="line">blpop k1 0</div><div class="line">brpop k1 0</div><div class="line">brpoplpush</div></pre></td></tr></table></figure><h4 id="4-2-1-list-应用场景"><a href="#4-2-1-list-应用场景" class="headerlink" title="4.2.1 list 应用场景"></a>4.2.1 list 应用场景</h4><ol><li>实现各种数据结构：栈、队列、数组、阻塞的单播队列</li></ol><p><img src="../../images/redis1/list应用场景.png" alt=""></p><ol><li>定时计算的排行榜：实时计算的排行榜需要由 sorted set 来实现。当然 sorted set 也可以实现定时计算的排行榜，但是 sorted set 占用内存比 list 多，数据量大时需要具体考虑如何选择。</li></ol><h3 id="4-3-hash"><a href="#4-3-hash" class="headerlink" title="4.3 hash"></a>4.3 hash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hset alvin name lixianfu age 18 address sz</div><div class="line">hmset alvin </div><div class="line">hsetnx alvin name alvin</div><div class="line">hget alvin name</div><div class="line">hgetall alvin</div><div class="line">hmget alvin name age</div><div class="line">hkeys alvin</div><div class="line">hvals alvin</div><div class="line">hincrby alvin age 1</div><div class="line">hincrbyfloat alvin age 0.5</div><div class="line">hdel alvin name address</div><div class="line">hexists alvin address</div><div class="line">// field 个数</div><div class="line">hlen alvin</div><div class="line">// 某个field 对应的 value 长度</div><div class="line">hstrlen alvin name</div><div class="line">// 迭代，同 scan 用法一样</div><div class="line">hscan alvin</div></pre></td></tr></table></figure><h4 id="4-3-1-hash-引用场景"><a href="#4-3-1-hash-引用场景" class="headerlink" title="4.3.1 hash 引用场景"></a>4.3.1 hash 引用场景</h4><ol><li>购物车：用户 id 为 key，商品 id 为 field，商品数量为 value。</li><li>存储对象： hash类型的(key, field, value)的结构与对象的(对象id, 属性, 值)的结构相似，也可以用来存储对象。  string + json 也可存储对象，但是不够灵活，如果对象某个属性修改频繁，可以考虑 hash</li></ol><h3 id="4-4-set"><a href="#4-4-set" class="headerlink" title="4.4 set"></a>4.4 set</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">// 新增元素</div><div class="line">sadd k1 alvin don calvin tyler alvin</div><div class="line">// 成员数量</div><div class="line">scard k1</div><div class="line">// 所有成员</div><div class="line">smembers k1</div><div class="line">// 删除成员</div><div class="line">srem k1 calvin</div><div class="line">// 判断成员是否存在</div><div class="line">sismember k1 alvin</div><div class="line">// 交集</div><div class="line">sadd k2 1 2 3 4 5 </div><div class="line">sadd k3 4 5 6 7 8 </div><div class="line">// 如果结果需要存入redis，需要客户端取出结果后，再 sadd </div><div class="line">sinter k2 k3</div><div class="line">// 减少了一个数据的交互过程</div><div class="line">sinterstore destkey k2 k3</div><div class="line">smembers destkey</div><div class="line">// 并集</div><div class="line">sunion k2 k3</div><div class="line">sunionstore destkey1 k2 k3</div><div class="line">smembers destkey1</div><div class="line">// 差集</div><div class="line">sdiff k2 k3</div><div class="line">sdiff k3 k2</div><div class="line">sdiffstore destkey k2 k3</div><div class="line">// 随机事件</div><div class="line">sadd k1 tom ooxx xxoo xoxo oxox xoox oxxo</div><div class="line">// 随机取出3个元素，元素不同。每个人最多中一次奖品</div><div class="line">srandmember k1 3</div><div class="line">// 随机取出3个元素，元素可能相同。可能一个人中两个奖品</div><div class="line">srandmember k1 -3</div><div class="line">// 取出并删除2个元素。年会抽奖（抽出去后不放回来）</div><div class="line">spop k1 2</div><div class="line">// 移动</div><div class="line">smove k1 k2 alvin</div><div class="line">// 分页查询</div><div class="line">sscan k1 0 count 2</div></pre></td></tr></table></figure><h4 id="4-4-1-set-应用场景"><a href="#4-4-1-set-应用场景" class="headerlink" title="4.4.1 set 应用场景"></a>4.4.1 set 应用场景</h4><ol><li>好友/关注/粉丝/感兴趣的人集合 <ol><li>sinter 命令可以获得 A 和 B 两个用户的共同好友 </li><li>sismember 命令可以判断A是否是B的好友 </li><li>scard 命令可以获取好友数量 </li><li>关注时，move 命令可以将 B从 A 的粉丝集合转移到 A 的好友集合 </li></ol></li><li>随机展示 </li><li>黑名单/白名单： sismember 判断是否在黑名单、白名单</li></ol><h3 id="4-5-sorted-set"><a href="#4-5-sorted-set" class="headerlink" title="4.5 sorted_set"></a>4.5 sorted_set</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">// 新增元素。nx/xx ch incr</div><div class="line">zadd k1 8 apple 2 banana 3 orange</div><div class="line">// 元素数量</div><div class="line">zcard k1</div><div class="line">// 指定分值之间的元素个数</div><div class="line">zcount k1 10 50</div><div class="line">// 增加元素分值</div><div class="line">zincrby k1 10 apple</div><div class="line">// 字母排序</div><div class="line">zlexcount k1 - +</div><div class="line">// 返回并删除</div><div class="line">zpopmax k1 2</div><div class="line">zpopmin k1 2</div><div class="line">// 索引范围查询</div><div class="line">zrange k1 0 -1</div><div class="line">zrange k1 0 -1 withscores</div><div class="line">// 价格由低到高取出前两名</div><div class="line">zrange k1 0 1</div><div class="line">// 价格由高到底前两名</div><div class="line">zrevrange k1 0 1</div><div class="line">// 字母排序</div><div class="line">zrangebylex k1 - +</div><div class="line">zrevrangebylex k1 10 50</div><div class="line">// 分值范围查询</div><div class="line">zrangebyscore k1 10 50</div><div class="line">zrevrangebyscore k1 10 50</div><div class="line">// 从一个或多个<span class="built_in">set</span>中返回并删除分值最高的元素，block 命令</div><div class="line">bzpopmax k1 k2 0</div><div class="line">// 同上，返回最小</div><div class="line">bzpopmin k1 k2 0</div><div class="line">// 取出分值</div><div class="line">zscore k1 apple</div><div class="line">// 取出排名</div><div class="line">zrank k1 apple</div><div class="line">// 倒数第几名</div><div class="line">zrevrank k1 apple</div><div class="line">// 修改分值(会自动刷新顺序)</div><div class="line">// 实现歌曲排名</div><div class="line">zincrby k1 2.5 banana</div><div class="line">// 删除元素</div><div class="line">zrem k1 apple banana</div><div class="line">// 字母排序</div><div class="line">zremreangebylex k1 - +</div><div class="line">// 根据排名删除</div><div class="line">zremrangebyrank k1 1 3</div><div class="line">// 根据分值删除</div><div class="line">zremrangebyscore k1 10 50</div><div class="line">// 交集</div><div class="line">zadd k1 80 tom 60 sean 70 baby</div><div class="line">zadd k2 60 tom 100 sean 40 yiming</div><div class="line">zinterstore unkey 2 k1 k2</div><div class="line">zinterstore unkey1 2 k1 k2 weights 1 0.5</div><div class="line">zinterstore unkey2 2 k1 k2 aggregate max</div><div class="line">// 并集</div><div class="line">zadd k1 80 tom 60 sean 70 baby</div><div class="line">zadd k2 60 tom 100 sean 40 yiming</div><div class="line">zunionstore unkey 2 k1 k2</div><div class="line">zunionstore unkey1 2 k1 k2 weights 1 0.5</div><div class="line">zunionstore unkey2 2 k1 k2 aggregate max</div><div class="line">// 遍历</div><div class="line">zscan</div></pre></td></tr></table></figure><h4 id="4-5-1-sorted-set-使用场景"><a href="#4-5-1-sorted-set-使用场景" class="headerlink" title="4.5.1 sorted set 使用场景"></a>4.5.1 sorted set 使用场景</h4><p>排名、热点话题。</p><h4 id="4-5-2-字典规则-lexicographical"><a href="#4-5-2-字典规则-lexicographical" class="headerlink" title="4.5.2 字典规则  lexicographical"></a>4.5.2 字典规则  lexicographical</h4><p>根据字典顺序比较大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ZADD myzset1 0 aaa 0 b 0 c 0 d 0 e</div><div class="line">ZADD myzset1 0 foo 0 zap 0 zip 0 ALPHA 0 alpha</div><div class="line">// 和 zrange myzset 0 -1 等价</div><div class="line">zrangebylex myzset - +</div><div class="line">ZRANGEBYLEX myzset1 [alpha [omega</div><div class="line">ZRANGEBYLEX myzset1 [alpha [fmaga</div><div class="line">ZRANGEBYLEX myzset1 [alpha [f</div><div class="line">ZRANGEBYLEX myzset1 [alpha [fop</div></pre></td></tr></table></figure><p>使用场景</p><ul><li>电话号码排序<ul><li>获取所有号码：ZRANGEBYLEX phone - +</li><li>获取132号段：ZRANGEBYLEX phone [132 (133</li></ul></li><li>姓名排序<ul><li>获取所有人名字：ZRANGEBYLEX phone [132 (133</li><li>A开头的所有人 ：ZRANGEBYLEX names [A (B</li></ul></li></ul><p><strong>问题：</strong>sorted_set 排序是怎么实现的，增删改查的速度怎么样？</p><p><strong>答案：跳跃表</strong>实现的。平均事件复杂度：O(logN)</p><h4 id="4-5-3-跳跃表"><a href="#4-5-3-跳跃表" class="headerlink" title="4.5.3 跳跃表"></a>4.5.3 跳跃表</h4><p>单链表查询的事件复杂度是 O(n) 而且很难优化了。所以引入跳跃表，跳跃表是基于概率的，时间复杂度是  O(logn) 。</p><p><img src="../../images/redis1/跳跃表.png" alt=""></p><h2 id="5-Redis-通用指令"><a href="#5-Redis-通用指令" class="headerlink" title="5. Redis 通用指令"></a>5. Redis 通用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">// OK</div><div class="line">del k1 k2</div><div class="line">// OK 返回序列化。有何用处？</div><div class="line">dump k1</div><div class="line">// OK</div><div class="line">exists k1</div><div class="line">// OK</div><div class="line">expire k1 20</div><div class="line">// OK 到达指定时间戳过期</div><div class="line">expireat k1 timestamp</div><div class="line">// OK 设置毫秒</div><div class="line">pexpire k1 2000</div><div class="line">// </div><div class="line">pexpireat k1 milliseconds-timestamp</div><div class="line">// OK 取消过期时间</div><div class="line">persist k1</div><div class="line">// OK 查看剩余多少秒过期</div><div class="line">ttl k1</div><div class="line">// OK 查看剩余多少毫秒过期</div><div class="line">pttl k1</div><div class="line">// OK</div><div class="line">keys *</div><div class="line">// </div><div class="line">migrate 127.0.0.1 6379 k1 | db10 2000</div><div class="line">// OK</div><div class="line">move k1 db 10</div><div class="line">// OK</div><div class="line">object encoding/freq/idletime/refcount</div><div class="line">// OK</div><div class="line">randomkey</div><div class="line">// OK</div><div class="line">rename k1 newkey</div><div class="line">// OK</div><div class="line">renamenx k1 newkey</div><div class="line">// </div><div class="line">restore </div><div class="line">// OK 迭代</div><div class="line">scan 0</div><div class="line">//</div><div class="line">sort</div><div class="line">// OK 更新访问时间</div><div class="line">touch</div><div class="line">// OK</div><div class="line"><span class="built_in">type</span> k1</div><div class="line">// OK 异步删除 k1 k2</div><div class="line">unlink k1 k2</div><div class="line">// </div><div class="line"><span class="built_in">wait</span></div></pre></td></tr></table></figure><h3 id="5-1-scan-命令理解"><a href="#5-1-scan-命令理解" class="headerlink" title="5.1 scan 命令理解"></a>5.1 scan 命令理解</h3><p>SCAN 命令及其相关的 SSCAN, HSCAN 和 ZSCAN 命令都用于增量迭代一个集合元素。</p><p>他们都支持增量式迭代，它们每次执行都只会返回少量元素，所以这些命令可以用于生产环境，而不会出现像 KEYS 或者 SMEMBERS 命令带来的<strong>可能会阻塞服务器</strong>的问题。相对的有一个缺点，就是 scan 在迭代过程中，集合元素可能会被修改，对返回的值无法提供完全的保证。</p><p>scan 是基于游标的迭代器。每次迭代需要上次迭代返回的游标。游标为 0 表示一个新的迭代；服务器返回 0 时表示迭代结束。</p><p>问题：</p><ul><li>同一个元素可能会被返回多次 </li><li>如果一个元素是在迭代过程中被添加到数据集的， 又或者是在迭代过程中从数据集中被删除的， 那么这个元素可能会被返回， 也可能不会。 </li><li>SCAN增量式迭代命令并不保证每次执行都返回某个给定数量的元素,甚至可能会返回零个元素， 但只要命令返回的游标不是 0 ， 应用程序就不应该将迭代视作结束。 </li></ul><h2 id="6-学习地址记录"><a href="#6-学习地址记录" class="headerlink" title="6. 学习地址记录"></a>6. 学习地址记录</h2><ul><li>redis 中文： <a href="http://redis.cn/" target="_blank" rel="external">http://redis.cn/</a> </li><li>redis 官网： <a href="https://redis.io/" target="_blank" rel="external">https://redis.io/</a> </li><li>数据库排名： <a href="https://db-engines.com/en/" target="_blank" rel="external">https://db-engines.com/en/</a></li><li>bitfield 理解：<a href="https://blog.csdn.net/qq_36535196/article/details/103819697" target="_blank" rel="external">https://blog.csdn.net/qq_36535196/article/details/103819697</a> </li><li>跳跃表理解：<ul><li><a href="https://blog.csdn.net/qpzkobe/article/details/80056807" target="_blank" rel="external">https://blog.csdn.net/qpzkobe/article/details/80056807</a> </li><li><a href="https://redisbook.readthedocs.io/en/latest/internal-datastruct/skiplist.html" target="_blank" rel="external">https://redisbook.readthedocs.io/en/latest/internal-datastruct/skiplist.html</a> </li><li><a href="https://www.jianshu.com/p/dc252b5efca6" target="_blank" rel="external">https://www.jianshu.com/p/dc252b5efca6</a> </li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 来由、安装、集中基本类型和指令学习笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>mqtt 学习笔记</title>
    <link href="http://yoursite.com/2019-11-09-201911/2019-11-09_mqtt%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yoursite.com/2019-11-09-201911/2019-11-09_mqtt 学习笔记.html</id>
    <published>2019-11-08T16:00:00.000Z</published>
    <updated>2020-02-22T15:06:39.506Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目 iot 平台中需要用到 mqtt 来传输消息。所以从网上查询相关资料进行了一些入门的学习。<br><a id="more"></a></p><h2 id="使用-mosquitto-搭建-MQTT-服务器"><a href="#使用-mosquitto-搭建-MQTT-服务器" class="headerlink" title="使用 mosquitto 搭建 MQTT 服务器"></a>使用 mosquitto 搭建 MQTT 服务器</h2><h3 id="安装-mosquitto"><a href="#安装-mosquitto" class="headerlink" title="安装 mosquitto"></a>安装 mosquitto</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 下载 mosquitto</span></div><div class="line">wget http://mosquitto.org/files/source/mosquitto-1.6.7.tar.gz</div><div class="line"><span class="meta">#</span><span class="bash"> 解压</span></div><div class="line">tar zxfv mosquitto-1.6.7.tar.gz</div><div class="line"><span class="meta">#</span><span class="bash"> 进入目录</span></div><div class="line">cd mosquitto-1.6.7</div><div class="line"><span class="meta">#</span><span class="bash"> 编译</span></div><div class="line">make</div><div class="line"><span class="meta">#</span><span class="bash"> 安装</span></div><div class="line">make install</div><div class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></div><div class="line">mosquitto -v</div><div class="line"><span class="meta">#</span><span class="bash"> 设置配置文件</span></div><div class="line">cp mosquitto.conf.example mosquitto.conf</div><div class="line"><span class="meta">#</span><span class="bash"> 启动mosquitto服务</span></div><div class="line">mosquitto -c /etc/mosquitto/mosquitto.conf</div><div class="line"><span class="meta">#</span><span class="bash"> 查看端口</span></div><div class="line">ss -tanl</div><div class="line"><span class="meta">#</span><span class="bash"> 关闭 mosquitto 服务</span></div><div class="line">ps -A | grep mosquitto</div><div class="line">kill -9 pid</div></pre></td></tr></table></figure><p>按照上述步骤，会出现<code>Error: Invalid user &#39;mosquitto&#39;.</code>的错误。需要配置用户信息。在 mosquitto.conf 中增加 <strong>user root</strong>，然后在控制台执行<code>adduser mosquitto</code>命令。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>报错：/mosquitto_sub: error while loading shared libraries: libmosquitto.so.1: cannot open shared object file: No such file or directory<br>解决：执行以下命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /usr/local/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1</div><div class="line">ldconfig</div></pre></td></tr></table></figure></p><p>测试步骤：</p><ol><li>开启 mosquitto 服务：<code>mosquitto -c /etc/mosquitto/mosquitto.conf -v</code></li><li>开启一个客户端，模拟订阅：<code>mosquitto_sub -v -t topic01</code></li><li>再开启一个客户端，模拟发布：<code>mosquitto_pub -t topic -m hello</code></li></ol><h3 id="设置用户名和密码"><a href="#设置用户名和密码" class="headerlink" title="设置用户名和密码"></a>设置用户名和密码</h3><ol><li><p>修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">allow_anonymous false</div><div class="line">password_file /etc/mosquitto/pwfile.example</div></pre></td></tr></table></figure></li><li><p>创建用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 提示连续两次输入密码，创建成功</span></div><div class="line">mosquitto_passwd -c /etc/mosquitto/pwfile.example admin</div><div class="line"><span class="comment"># 注意第二次创建用户时不用加 -c 如果加 -c 会把第一次创建的用户覆盖。</span></div><div class="line">mosquitto_passwd /etc/mosquitto/pwfile.example mosquitto</div></pre></td></tr></table></figure></li></ol><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://www.cnblogs.com/chen1-kerr/p/7258487.html" target="_blank" rel="external">https://www.cnblogs.com/chen1-kerr/p/7258487.html</a></li><li><a href="https://www.cnblogs.com/zkwarrior/p/10950294.html" target="_blank" rel="external">https://www.cnblogs.com/zkwarrior/p/10950294.html</a></li></ul><h2 id="使用-ActiveMQ-搭建-MQTT-服务器"><a href="#使用-ActiveMQ-搭建-MQTT-服务器" class="headerlink" title="使用 ActiveMQ 搭建 MQTT 服务器"></a>使用 ActiveMQ 搭建 MQTT 服务器</h2><h3 id="下载-ActiveMQ"><a href="#下载-ActiveMQ" class="headerlink" title="下载 ActiveMQ"></a>下载 ActiveMQ</h3><p>下载地址：<a href="http://activemq.apache.org/download.html" target="_blank" rel="external">http://activemq.apache.org/download.html</a></p><h3 id="启动-ActiveMQ"><a href="#启动-ActiveMQ" class="headerlink" title="启动 ActiveMQ"></a>启动 ActiveMQ</h3><ul><li>创建 ActiveMQ 服务：进入解压目录：<code>activemq create D:\activemq\myactivemq</code></li><li>然后进入刚刚创建的 myactivemq 服务 bin 目录：<code>myactivemq start</code></li><li>进入主页：<a href="http://127.0.0.1:8161/admin/" target="_blank" rel="external">http://127.0.0.1:8161/admin/</a></li><li>用户名和密码在<code>\myactivemq\conf\users.properties</code>文件中<br><img src="../images/20199909/ActiveMQ.png" alt="ActiveMQ 主页"></li></ul><h2 id="客户端工具"><a href="#客户端工具" class="headerlink" title="客户端工具"></a>客户端工具</h2><ol><li><p>Eclipse Paho MQTT Utility(官方)<br><code>https://repo.eclipse.org/content/repositories/paho-releases/org/eclipse/paho/org.eclipse.paho.ui.app/1.1.1/</code></p></li><li><p>MQTT.fx<br><a href="http://www.mqttfx.org/" target="_blank" rel="external">http://www.mqttfx.org/</a></p></li></ol><h2 id="使用-EMQX-搭建-MQTT-服务器"><a href="#使用-EMQX-搭建-MQTT-服务器" class="headerlink" title="使用 EMQX 搭建 MQTT 服务器"></a>使用 EMQX 搭建 MQTT 服务器</h2><p>直接官网下载解压启动即可。要是早发现，何必这么折腾。。。</p><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p><a href="https://docs.emqx.io/tutorial/v3/cn/backend/mysql.html" target="_blank" rel="external">https://docs.emqx.io/tutorial/v3/cn/backend/mysql.html</a></p><h2 id="关键概念理解"><a href="#关键概念理解" class="headerlink" title="关键概念理解"></a>关键概念理解</h2><ol><li><p>客户端 Qos 理解（主要针对发送者）</p><ul><li>0：发送者只发一次，代理也只发一次，不管接收者是否接受到消息</li><li>1：保证接收者至少接收一遍消息，但是可能收到重复的消息</li><li>2：保证接收者有且只接收一次消息</li></ul></li><li><p>CleanSession 属性（长连接。主要针对接收者）<br>主要用于接收者订阅某个 topic 后，由于异常断线，重新上线后可以收到断线期间发送者发生的消息。<br>可以理解为：如果客户端该该属性设置为 ture，就相当于告诉代理，即使我这个客户端断线，你也要保存我的消息，等我下次上线时，把消息推送给我。<br>例如：</p><ul><li>发布者 qos=2，订阅者 CleanSession=ture。当订阅者断线重新上线后，可以收到断线期间的消息。</li><li>发布者 qos=2，订阅者 CleanSession=false。当订阅者断线重新上线后，不可以收到断线期间的消息。</li></ul></li><li><p>Retained 属性（主要针对发送者）<br>设置为 true 后，代理会保存该 topic 最新的一个消息。有新的订阅者时，该 retain 消息会发给订阅者。<br>可以理解为：如果客户端该属性设置为 ture，就相当于告诉代理，我这个客户端发布消息时，代理需要保存我发布的最后一条消息，并且当有新的订阅者订阅该主题时，代理需要把最后一条消息推送给订阅者。</p></li><li><p>Will 设置<br>设置遗嘱。当客户端非法断开连接时，可以发送遗嘱指定 topic 的消息。<br>通常 will 和 retain 机制一起使用。比如记录各个设备的连接信息。设备上线后，发送指定 topic 的上线消息；设备断线后，发送指定 topic 的离线信息。从而，只需订阅该 topic 就可以知道各个设备的状态信息。</p></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="eclipse-paho"><a href="#eclipse-paho" class="headerlink" title="eclipse.paho"></a>eclipse.paho</h3><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.paho<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>org.eclipse.paho.client.mqttv3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>创建生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttClient;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttDeliveryToken;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttMessage;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttPersistenceException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttTopic;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 服务器向多个客户端推送主题，即不同客户端可向服务端订阅相同的主题</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerMQTT</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="comment">//tcp://MQTT安装的服务器地址:MQTT定义的端口号</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HOST = <span class="string">"tcp://127.0.0.1:1883"</span>;</div><div class="line">    <span class="comment">//定义一个主题</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC = <span class="string">"topic02"</span>;</div><div class="line">    <span class="comment">//定义MQTT的ID，可以在MQTT服务配置中指定</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String clientid = <span class="string">"server02"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MqttClient client;</div><div class="line">    <span class="keyword">private</span> MqttTopic topic02;</div><div class="line">    <span class="keyword">private</span> String userName = <span class="string">"admin"</span>;</div><div class="line">    <span class="keyword">private</span> String passWord = <span class="string">"admin2"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MqttMessage message;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 构造函数</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> MqttException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ServerMQTT</span><span class="params">()</span> <span class="keyword">throws</span> MqttException</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">// MemoryPersistence设置clientid的保存形式，默认为以内存保存</span></div><div class="line">        client = <span class="keyword">new</span> MqttClient(HOST, clientid, <span class="keyword">new</span> MemoryPersistence());</div><div class="line">        connect();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     *  用来连接服务器</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        MqttConnectOptions options = <span class="keyword">new</span> MqttConnectOptions();</div><div class="line">        <span class="comment">// 发布者设置该值好像没啥用处</span></div><div class="line">        <span class="comment">// options.setCleanSession(false);</span></div><div class="line">        options.setUserName(userName);</div><div class="line">        options.setPassword(passWord.toCharArray());</div><div class="line">        <span class="comment">// 设置超时时间</span></div><div class="line">        options.setConnectionTimeout(<span class="number">10</span>);</div><div class="line">        <span class="comment">// 设置会话心跳时间</span></div><div class="line">        options.setKeepAliveInterval(<span class="number">20</span>);</div><div class="line">        <span class="keyword">try</span></div><div class="line">        &#123;</div><div class="line">            client.setCallback(<span class="keyword">new</span> PushCallback());</div><div class="line">            client.connect(options);</div><div class="line"></div><div class="line">            topic02 = client.getTopic(TOPIC);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (Exception e)</div><div class="line">        &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> topic</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> MqttPersistenceException</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> MqttException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">publish</span><span class="params">(MqttTopic topic , MqttMessage message)</span> <span class="keyword">throws</span> MqttPersistenceException,</span></div><div class="line"><span class="function">            MqttException</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        MqttDeliveryToken token = topic.publish(message);</div><div class="line">        token.waitForCompletion();</div><div class="line">        System.out.println(<span class="string">"message is published completely! "</span> + token.isComplete());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     *  启动入口</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> MqttException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        ServerMQTT server = <span class="keyword">new</span> ServerMQTT();</div><div class="line">        server.message = <span class="keyword">new</span> MqttMessage();</div><div class="line">        server.message.setQos(<span class="number">2</span>);</div><div class="line">        <span class="comment">// 设置为true表示让mqtt代理保存topic最后一次消息。当有新的订阅者订阅该topic时，可以收到该消息。</span></div><div class="line">        <span class="comment">// 最常用的是记录发布者的在线和离线信息信息。也就是每个订阅者订阅topic时，知道发布者目前在线还是离线。</span></div><div class="line">        server.message.setRetained(<span class="keyword">false</span>);</div><div class="line">        server.message.setPayload(<span class="string">"hello,topic02 02"</span>.getBytes());</div><div class="line">        server.publish(server.topic02 , server.message);</div><div class="line">        System.out.println(server.message.isRetained() + <span class="string">"------ratained状态"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>创建消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttClient;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttTopic;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientMQTT</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HOST = <span class="string">"tcp://127.0.0.1:1883"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC = <span class="string">"topic02"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String clientid = <span class="string">"client02"</span>;</div><div class="line">    <span class="keyword">private</span> MqttClient client;</div><div class="line">    <span class="keyword">private</span> MqttConnectOptions options;</div><div class="line">    <span class="keyword">private</span> String userName = <span class="string">"admin"</span>;</div><div class="line">    <span class="keyword">private</span> String passWord = <span class="string">"admin1"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> ScheduledExecutorService scheduler;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">try</span></div><div class="line">        &#123;</div><div class="line">            <span class="comment">// host为主机名，clientid即连接MQTT的客户端ID，一般以唯一标识符表示，MemoryPersistence设置clientid的保存形式，默认为以内存保存</span></div><div class="line">            client = <span class="keyword">new</span> MqttClient(HOST, clientid, <span class="keyword">new</span> MemoryPersistence());</div><div class="line">            <span class="comment">// MQTT的连接设置</span></div><div class="line">            options = <span class="keyword">new</span> MqttConnectOptions();</div><div class="line">            <span class="comment">// 设置是否清空session,这里如果设置为false表示服务器会保留客户端的连接记录</span></div><div class="line">            <span class="comment">// 如果设置为true表示每次连接到服务器都以新的身份连接</span></div><div class="line">            <span class="comment">// 发布者qos设置为2，我们是希望每个消息都接受到一次，需要保存订阅信息，否则重新连接后接收不到发布的消息。</span></div><div class="line">            options.setCleanSession(<span class="keyword">false</span>);</div><div class="line">            <span class="comment">// 设置连接的用户名</span></div><div class="line">            options.setUserName(userName);</div><div class="line">            <span class="comment">// 设置连接的密码</span></div><div class="line">            options.setPassword(passWord.toCharArray());</div><div class="line">            <span class="comment">// 设置超时时间 单位为秒</span></div><div class="line">            options.setConnectionTimeout(<span class="number">10</span>);</div><div class="line">            <span class="comment">// 设置会话心跳时间 单位为秒 服务器会每隔1.5*20秒的时间向客户端发送个消息判断客户端是否在线，但这个方法并没有重连的机制</span></div><div class="line">            options.setKeepAliveInterval(<span class="number">20</span>);</div><div class="line">            <span class="comment">// 设置回调</span></div><div class="line">            client.setCallback(<span class="keyword">new</span> PushCallback());</div><div class="line">            MqttTopic topic = client.getTopic(<span class="string">"status"</span>);</div><div class="line">            <span class="comment">//setWill方法，如果项目中需要知道客户端是否掉线可以调用该方法。设置最终端口的通知消息</span></div><div class="line">            options.setWill(topic, <span class="string">"offline"</span>.getBytes(), <span class="number">2</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">            client.connect(options);</div><div class="line">            <span class="comment">//订阅消息</span></div><div class="line">            <span class="comment">// int[] Qos  = &#123;2&#125;;</span></div><div class="line">            String[] topic02 = &#123;TOPIC&#125;;</div><div class="line">            client.subscribe(topic02);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (Exception e)</div><div class="line">        &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        ClientMQTT client = <span class="keyword">new</span> ClientMQTT();</div><div class="line">        client.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>创建回调类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttCallback;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttMessage;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 发布消息的回调类 </span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * 必须实现MqttCallback的接口并实现对应的相关接口方法CallBack 类将实现 MqttCallBack。 </span></div><div class="line"><span class="comment"> * 每个客户机标识都需要一个回调实例。在此示例中，构造函数传递客户机标识以另存为实例数据。 </span></div><div class="line"><span class="comment"> * 在回调中，将它用来标识已经启动了该回调的哪个实例。</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PushCallback</span> <span class="keyword">implements</span> <span class="title">MqttCallback</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connectionLost</span><span class="params">(Throwable cause)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">// 连接丢失后，一般在这里面进行重连</span></div><div class="line">        System.out.println(<span class="string">"连接断开，可以做重连"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deliveryComplete</span><span class="params">(IMqttDeliveryToken token)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        System.out.println(<span class="string">"deliveryComplete---------"</span> + token.isComplete());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">messageArrived</span><span class="params">(String topic, MqttMessage message)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">// subscribe后得到的消息会执行到这里面</span></div><div class="line">        System.out.println(<span class="string">"接收消息主题 : "</span> + topic);</div><div class="line">        System.out.println(<span class="string">"接收消息Qos : "</span> + message.getQos());</div><div class="line">        System.out.println(<span class="string">"接收消息内容 : "</span> + <span class="keyword">new</span> String(message.getPayload()));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><h3 id="Springboot-MQTT"><a href="#Springboot-MQTT" class="headerlink" title="Springboot MQTT"></a>Springboot MQTT</h3><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-integration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.integration<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-integration-stream<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.integration<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-integration-mqtt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>配置相关参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">##################</div><div class="line">#  MQTT 配置</div><div class="line">##################</div><div class="line"># 用户名</div><div class="line">mqtt.username=admin</div><div class="line"># 密码</div><div class="line">mqtt.password=admin</div><div class="line"># 推送信息的连接地址，如果有多个，用逗号隔开，如：tcp://127.0.0.1:61613,tcp://192.168.1.61:61613</div><div class="line">mqtt.url=tcp://39.108.78.254:1883</div><div class="line"></div><div class="line">##################</div><div class="line">#  MQTT 生产者</div><div class="line">##################</div><div class="line"># 连接服务器默认客户端ID</div><div class="line">mqtt.producer.clientId=mqttProducer</div><div class="line"># 默认的推送主题，实际可在调用接口时指定</div><div class="line">mqtt.producer.defaultTopic=topic01</div><div class="line"></div><div class="line">##################</div><div class="line">#  MQTT 消费者</div><div class="line">##################</div><div class="line"># 连接服务器默认客户端ID</div><div class="line">mqtt.consumer.clientId=mqttConsumer</div><div class="line"># 默认的接收主题，可以订阅多个Topic，逗号分隔</div><div class="line">mqtt.consumer.defaultTopic=topic01</div></pre></td></tr></table></figure></li><li><p>配置相关 bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * MQTT配置</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MqttConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(MqttConfig.class);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] WILL_DATA;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        WILL_DATA = <span class="string">"offline"</span>.getBytes();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 订阅的bean名称</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_NAME_IN = <span class="string">"mqttInboundChannel"</span>;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发布的bean名称</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_NAME_OUT = <span class="string">"mqttOutboundChannel"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.password&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.url&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String url;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.producer.clientId&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String producerClientId;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.producer.defaultTopic&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String producerDefaultTopic;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.consumer.clientId&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String consumerClientId;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mqtt.consumer.defaultTopic&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String consumerDefaultTopic;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT连接器选项</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> MqttConnectOptions <span class="title">getMqttConnectOptions</span><span class="params">()</span> </span>&#123;</div><div class="line">        MqttConnectOptions options = <span class="keyword">new</span> MqttConnectOptions();</div><div class="line">        <span class="comment">// 设置是否清空session,这里如果设置为false表示服务器会保留客户端的连接记录，</span></div><div class="line">        <span class="comment">// 这里设置为true表示每次连接到服务器都以新的身份连接</span></div><div class="line">        options.setCleanSession(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置连接的用户名</span></div><div class="line">        options.setUserName(username);</div><div class="line">        <span class="comment">// 设置连接的密码</span></div><div class="line">        options.setPassword(password.toCharArray());</div><div class="line">        options.setServerURIs(url.split(<span class="string">","</span>));</div><div class="line">        <span class="comment">//options.setAutomaticReconnect(true);</span></div><div class="line">        <span class="comment">//options.isCleanSession(false);</span></div><div class="line">        <span class="comment">//options.setMaxInflight(200);</span></div><div class="line">        <span class="comment">// 设置超时时间 单位为秒</span></div><div class="line">        options.setConnectionTimeout(<span class="number">10</span>);</div><div class="line">        <span class="comment">// 设置会话心跳时间 单位为秒 服务器会每隔1.5*20秒的时间向客户端发送心跳判断客户端是否在线，但这个方法并没有重连的机制</span></div><div class="line">        options.setKeepAliveInterval(<span class="number">20</span>);</div><div class="line">        <span class="comment">// 设置“遗嘱”消息的话题，若客户端与服务器之间的连接意外中断，服务器将发布客户端的“遗嘱”消息。</span></div><div class="line">        options.setWill(<span class="string">"status"</span>, WILL_DATA, <span class="number">2</span>, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span> options;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT客户端</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> MqttPahoClientFactory <span class="title">mqttClientFactory</span><span class="params">()</span> </span>&#123;</div><div class="line">        DefaultMqttPahoClientFactory factory = <span class="keyword">new</span> DefaultMqttPahoClientFactory();</div><div class="line">        factory.setConnectionOptions(getMqttConnectOptions());</div><div class="line">        <span class="keyword">return</span> factory;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT信息通道（生产者）</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span>(name = CHANNEL_NAME_OUT)</div><div class="line">    <span class="function"><span class="keyword">public</span> MessageChannel <span class="title">mqttOutboundChannel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectChannel();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT消息处理器（生产者）</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="meta">@ServiceActivator</span>(inputChannel = CHANNEL_NAME_OUT)</div><div class="line">    <span class="function"><span class="keyword">public</span> MessageHandler <span class="title">mqttOutbound</span><span class="params">()</span> </span>&#123;</div><div class="line">        MqttPahoMessageHandler messageHandler = <span class="keyword">new</span> MqttPahoMessageHandler(</div><div class="line">                producerClientId,</div><div class="line">                mqttClientFactory());</div><div class="line">        messageHandler.setAsync(<span class="keyword">true</span>);</div><div class="line">        messageHandler.setDefaultTopic(producerDefaultTopic);</div><div class="line">        <span class="keyword">return</span> messageHandler;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT消息订阅绑定（消费者）</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> MessageProducer <span class="title">inbound</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 可以同时消费（订阅）多个Topic</span></div><div class="line">        MqttPahoMessageDrivenChannelAdapter adapter =</div><div class="line">                <span class="keyword">new</span> MqttPahoMessageDrivenChannelAdapter(</div><div class="line">                        consumerClientId, mqttClientFactory(),</div><div class="line">                        consumerDefaultTopic.split(<span class="string">","</span>));</div><div class="line">        adapter.setCompletionTimeout(<span class="number">5000</span>);</div><div class="line">        adapter.setConverter(<span class="keyword">new</span> DefaultPahoMessageConverter());</div><div class="line">        adapter.setQos(<span class="number">2</span>);</div><div class="line">        <span class="comment">// 设置订阅通道</span></div><div class="line">        adapter.setOutputChannel(mqttInboundChannel());</div><div class="line">        <span class="keyword">return</span> adapter;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT信息通道（消费者）</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span>(name = CHANNEL_NAME_IN)</div><div class="line">    <span class="function"><span class="keyword">public</span> MessageChannel <span class="title">mqttInboundChannel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectChannel();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * MQTT消息处理器（消费者）</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="meta">@ServiceActivator</span>(inputChannel = CHANNEL_NAME_IN)</div><div class="line">    <span class="function"><span class="keyword">public</span> MessageHandler <span class="title">handler</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MessageHandler() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message&lt;?&gt; message)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">                LOGGER.error(<span class="string">"====================&#123;&#125;============"</span>, message.getPayload());</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>创建生产者接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * MQTT生产者消息发送接口</span></div><div class="line"><span class="comment"> * &lt;p&gt;MessagingGateway要指定生产者的通道名称&lt;/p&gt;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="meta">@MessagingGateway</span>(defaultRequestChannel = MqttConfig.CHANNEL_NAME_OUT)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IMqttSender</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发送信息到MQTT服务器</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> data 发送的文本</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendToMqtt</span><span class="params">(String data)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发送信息到MQTT服务器</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> topic 主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> payload 消息主体</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendToMqtt</span><span class="params">(@Header(MqttHeaders.TOPIC)</span> String topic,</span></div><div class="line"><span class="function">                    String payload)</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发送信息到MQTT服务器</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> topic 主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> qos </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> payload 消息主体</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendToMqtt</span><span class="params">(@Header(MqttHeaders.TOPIC)</span> String topic,</span></div><div class="line"><span class="function">                    @<span class="title">Header</span><span class="params">(MqttHeaders.QOS)</span> <span class="keyword">int</span> qos,</span></div><div class="line"><span class="function">                    String payload)</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>测试<br>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * SpringBoot 入口类</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@SpringBootApplication</span>(exclude = &#123;DataSourceAutoConfiguration.class,</div><div class="line">        HibernateJpaAutoConfiguration.class&#125;)</div><div class="line"><span class="meta">@PropertySource</span>(encoding = <span class="string">"UTF-8"</span>, value = &#123;<span class="string">"classpath:mqtt.properties"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>测试 controller 类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * MQTT消息发送</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MqttController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 注入发送MQTT的Bean</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> IMqttSender iMqttSender;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发送MQTT消息</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息内容</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> 返回</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/mqtt"</span>, produces =<span class="string">"text/html"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title">sendMqtt</span><span class="params">(@RequestParam(value = <span class="string">"msg"</span>)</span> String message) </span>&#123;</div><div class="line">        iMqttSender.sendToMqtt(message);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(<span class="string">"OK"</span>, HttpStatus.OK);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目 iot 平台中需要用到 mqtt 来传输消息。所以从网上查询相关资料进行了一些入门的学习。&lt;br&gt;
    
    </summary>
    
    
      <category term="消息队列" scheme="http://yoursite.com/categories/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
    
      <category term="MQTT" scheme="http://yoursite.com/tags/MQTT/"/>
    
  </entry>
  
  <entry>
    <title>Kafka 学习笔记（一）</title>
    <link href="http://yoursite.com/2019-11-09-201911/2019-11-09_Kafka%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89.html"/>
    <id>http://yoursite.com/2019-11-09-201911/2019-11-09_Kafka 学习笔记（一）.html</id>
    <published>2019-11-08T16:00:00.000Z</published>
    <updated>2020-02-22T15:06:47.583Z</updated>
    
    <content type="html"><![CDATA[<p>Kafka 是一个开源的 Apache 项目，用 Scala 和 Java 编写。 Apache Kafka 是基于发布订阅的容错消息系统。<br><a id="more"></a></p><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ol><li>Kafka 官方文档：<a href="http://kafka.apache.org/documentation/" target="_blank" rel="external">http://kafka.apache.org/documentation/</a></li><li>Kafka API：<a href="https://docs.spring.io/spring-kafka/docs/2.3.1.RELEASE/api/" target="_blank" rel="external">https://docs.spring.io/spring-kafka/docs/2.3.1.RELEASE/api/</a></li><li>w3school Kafka 教程：<a href="https://www.w3cschool.cn/apache_kafka/" target="_blank" rel="external">https://www.w3cschool.cn/apache_kafka/</a></li><li>易百 Kafka 教程：<a href="https://www.yiibai.com/kafka" target="_blank" rel="external">https://www.yiibai.com/kafka</a></li><li>Kafka 官方文档中文版：<a href="http://kafkadoc.beanmr.com/" target="_blank" rel="external">http://kafkadoc.beanmr.com/</a></li><li>Spring Kafka 官方文档(PDF)：<a href="http://kafkadoc.beanmr.com/" target="_blank" rel="external">http://kafkadoc.beanmr.com/</a></li><li>Spring Kafka API:<a href="https://docs.spring.io/spring-kafka/docs/2.3.1.RELEASE/api/" target="_blank" rel="external">https://docs.spring.io/spring-kafka/docs/2.3.1.RELEASE/api/</a></li></ol><h2 id="本地搭建-Kafka-服务"><a href="#本地搭建-Kafka-服务" class="headerlink" title="本地搭建 Kafka 服务"></a>本地搭建 Kafka 服务</h2><ol><li>下载 Kafka<br>下载地址：<a href="https://kafka.apache.org/downloads#2.3.1" target="_blank" rel="external">https://kafka.apache.org/downloads#2.3.1</a><br> <img src="../images/20191109/Kafka下载.png" alt="下载 Kafka"><br> 下载 tgz 文件解压到指定目录，以后该目录就是 Kafka 根目录。</li><li><p>启动 Kafka 服务<br>进入 Kafka 根目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"> </div></pre></td></tr></table></figure></li></ol><h1 id="先启动-zookeeper"><a href="#先启动-zookeeper" class="headerlink" title="先启动 zookeeper"></a>先启动 zookeeper</h1><p>bin/windows/zookeeper-server-start.bat config/zookeeper.properties</p><h1 id="再启动-kafka"><a href="#再启动-kafka" class="headerlink" title="再启动 kafka"></a>再启动 kafka</h1><p>bin/windows/kafka-server-start.bat config/server.properties<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">3. 创建主题、启动生产者、启动消费者</div><div class="line">```shell</div><div class="line"># 查看主题列表</div><div class="line">bin/windows/kafka-topics.bat --list --zookeeper localhost:2181</div><div class="line"># 创建主题</div><div class="line">bin/windows/kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic topic01</div><div class="line"># 启动生产者</div><div class="line">bin/windows/kafka-console-producer.bat --broker-list localhost:9092 --topic topic01</div><div class="line"># 启动消费者</div><div class="line">bin/windows/kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic topic01 --from-beginning</div></pre></td></tr></table></figure></p><ol><li>在生产者发送消息，查看消费者是否能收到消息<br><img src="../images/20191109/本地生产者消费者测试.png" alt="本地生产者消费者测试"></li></ol><h2 id="Kafka-入门例子"><a href="#Kafka-入门例子" class="headerlink" title="Kafka 入门例子"></a>Kafka 入门例子</h2><p>生产者：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.KafkaProducer;</div><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.Producer;</div><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.ProducerRecord;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerDemo</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        Properties props = <span class="keyword">new</span> Properties();</div><div class="line">        props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"localhost:9092"</span>);</div><div class="line">        props.put(<span class="string">"client.id"</span>, <span class="string">"DemoProducer"</span>);</div><div class="line">        props.put(<span class="string">"acks"</span>, <span class="string">"all"</span>);</div><div class="line">        props.put(<span class="string">"retries"</span>, <span class="number">0</span>);</div><div class="line">        props.put(<span class="string">"batch.size"</span>, <span class="number">16384</span>);</div><div class="line">        props.put(<span class="string">"linger.ms"</span>, <span class="number">1</span>);</div><div class="line">        props.put(<span class="string">"buffer.memory"</span>, <span class="number">33554432</span>);</div><div class="line">        props.put(<span class="string">"key.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</div><div class="line">        props.put(<span class="string">"value.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</div><div class="line"></div><div class="line">        Producer&lt;String, String&gt; producer = <span class="keyword">new</span> KafkaProducer&lt;String, String&gt;(props);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</div><div class="line">        &#123;</div><div class="line">            producer.send(<span class="keyword">new</span> ProducerRecord&lt;String, String&gt;(<span class="string">"test0811"</span>, Integer.toString(i), Integer.toString(i)));</div><div class="line">        &#125;</div><div class="line">        producer.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>消费者：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecord;</div><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecords;</div><div class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.KafkaConsumer;</div><div class="line"><span class="keyword">import</span> java.util.Arrays;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerDemo</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        Properties props = <span class="keyword">new</span> Properties();</div><div class="line">        props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"localhost:9092"</span>);</div><div class="line">        props.put(<span class="string">"group.id"</span>, <span class="string">"test-consumer-group"</span>);<span class="comment">//consumer.properties 中的 group.id</span></div><div class="line">        props.put(<span class="string">"enable.auto.commit"</span>, <span class="string">"true"</span>);</div><div class="line">        props.put(<span class="string">"auto.commit.interval.ms"</span>, <span class="string">"1000"</span>);</div><div class="line">        props.put(<span class="string">"key.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</div><div class="line">        props.put(<span class="string">"value.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</div><div class="line">        KafkaConsumer&lt;String, String&gt; consumer = <span class="keyword">new</span> KafkaConsumer&lt;String, String&gt;(props);</div><div class="line">        consumer.subscribe(Arrays.asList(<span class="string">"test0811"</span>));<span class="comment">//设置主题，可多个</span></div><div class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)</div><div class="line">        &#123;</div><div class="line">            System.out.println(<span class="string">"********"</span>);</div><div class="line">            ConsumerRecords&lt;String, String&gt; records = consumer.poll(<span class="number">1000</span>);</div><div class="line">            <span class="keyword">for</span> (ConsumerRecord&lt;String, String&gt; record : records)</div><div class="line">                System.out.printf(<span class="string">"offset = %d, key = %s, value = %s%n"</span>, record.offset(), record.key(), record.value());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>分别运行生产者和消费者后，消费者成功接收到生产者发布的100条消息。<br><img src="../images/20191109/消费者成功接收消息.png" alt="消费者成功接收消息"></p><h2 id="SpringBoot-Kafka-入门例子"><a href="#SpringBoot-Kafka-入门例子" class="headerlink" title="SpringBoot Kafka 入门例子"></a>SpringBoot Kafka 入门例子</h2><ol><li><p>引入 Spring Kafka 依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-kafka-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>配置基本参数信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  kafka:</span></div><div class="line">    <span class="comment"># 配置服务地址</span></div><div class="line"><span class="attr">    bootstrap-servers:</span> <span class="attr">localhost:9092</span></div><div class="line">    <span class="comment"># 配置消费者</span></div><div class="line"><span class="attr">    consumer:</span></div><div class="line"><span class="attr">      group-id:</span> <span class="string">foo</span></div><div class="line"><span class="attr">      auto-offset-reset:</span> <span class="string">earliest</span></div><div class="line"><span class="attr">      key-deserializer:</span> <span class="string">org.apache.kafka.common.serialization.StringDeserializer</span></div><div class="line"><span class="attr">      value-deserializer:</span> <span class="string">org.apache.kafka.common.serialization.StringDeserializer</span></div><div class="line">    <span class="comment"># 配置生产者</span></div><div class="line"><span class="attr">    producer:</span></div><div class="line"><span class="attr">      key-serializer:</span> <span class="string">org.apache.kafka.common.serialization.StringSerializer</span></div><div class="line"><span class="attr">      value-serializer:</span> <span class="string">org.apache.kafka.common.serialization.StringSerializer</span></div><div class="line"></div><div class="line"><span class="comment"># 配置 topic</span></div><div class="line"><span class="attr">app:</span></div><div class="line"><span class="attr">  topic:</span></div><div class="line"><span class="attr">    foo:</span> <span class="string">foo.t</span></div></pre></td></tr></table></figure></li></ol><p>更多配置可以参见：<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html" target="_blank" rel="external">https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html</a><br>打开后，所有 kafka 即可找到所有相关配置。<br>或者之间看 Spring Kafka 源码的自动配置类：KafkaAutoConfiguration<br>关键在于理解各个配置的作用和使用方法，需要慢慢积累和实践。</p><ol><li>创建生产者<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(Sender.class);</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> KafkaTemplate&lt;String, String&gt; kafkaTemplate;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;app.topic.foo&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String topic;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(String message)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        LOG.info(<span class="string">"sending message='&#123;&#125;' to topic='&#123;&#125;'"</span>, message, topic);</div><div class="line">        kafkaTemplate.send(topic, message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>关键在于注入 kafkaTemplate 来发送消息。</p><ol><li>创建消费者<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.kafka.annotation.KafkaListener;</div><div class="line"><span class="keyword">import</span> org.springframework.messaging.handler.annotation.Payload;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(Receiver.class);</div><div class="line"></div><div class="line">    <span class="meta">@KafkaListener</span>(topics = <span class="string">"$&#123;app.topic.foo&#125;"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listen</span><span class="params">(@Payload String message)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        LOG.info(<span class="string">"received message='&#123;&#125;'"</span>, message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>关键在于 <code>@KafkaListener</code> 和 <code>@Payload</code> 这两个注解。</p><ol><li>创建启动类，启动测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.monkeykong.learnkafka.producer.Sender;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerConsumerApplication</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        SpringApplication.run(ProducerConsumerApplication.class, args);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> Sender sender;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... strings)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        sender.send(<span class="string">"Spring Kafka Producer and Consumer Example 2"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>启动 demo 后，消费者成功接收到消息。<br><img src="../images/20191109/SpringBoot Kafka.png" alt="SpringBoot Kafka"></p><p>官方例子：<a href="https://github.com/spring-projects/spring-kafka/tree/master/samples" target="_blank" rel="external">https://github.com/spring-projects/spring-kafka/tree/master/samples</a></p><h2 id="Kafka-客户端工具"><a href="#Kafka-客户端工具" class="headerlink" title="Kafka 客户端工具"></a>Kafka 客户端工具</h2><p>发现一个 Kafka 图形化客户端。可以方便的看到 topic 和消息体等信息。<br>下载地址：<a href="http://www.kafkatool.com/download.html" target="_blank" rel="external">http://www.kafkatool.com/download.html</a><br><img src="../images/20191109/KafkaTool.png" alt="KafkaTool"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kafka 是一个开源的 Apache 项目，用 Scala 和 Java 编写。 Apache Kafka 是基于发布订阅的容错消息系统。&lt;br&gt;
    
    </summary>
    
    
      <category term="消息队列" scheme="http://yoursite.com/categories/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
    
      <category term="Kafka" scheme="http://yoursite.com/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>云服务器的使用</title>
    <link href="http://yoursite.com/2019-11-07-201911/2019-11-07_%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>http://yoursite.com/2019-11-07-201911/2019-11-07_云服务器的使用.html</id>
    <published>2019-11-06T16:00:00.000Z</published>
    <updated>2020-02-22T15:07:34.771Z</updated>
    
    <content type="html"><![CDATA[<p>学习云服务器的基本使用，包括如何用 Xshell 工具连接云服务器；linux 的基本使用方法；常用软件（JDK、Tomcat、MySQL）的安装和配置。<br><a id="more"></a></p><h2 id="购买和连接云服务器"><a href="#购买和连接云服务器" class="headerlink" title="购买和连接云服务器"></a>购买和连接云服务器</h2><h3 id="购买云服务器"><a href="#购买云服务器" class="headerlink" title="购买云服务器"></a>购买云服务器</h3><p>趁着双十一的活动，我购买的是阿里云的服务器。</p><p>阿里云地址：<a href="https://homenew.console.aliyun.com/" target="_blank" rel="external">https://homenew.console.aliyun.com/</a></p><h3 id="连接云服务器"><a href="#连接云服务器" class="headerlink" title="连接云服务器"></a>连接云服务器</h3><p>一般使用 <strong>SSH连接</strong> 去操作云服务器。我在Windows上一般使用 <strong>Xshell</strong> 去连接服务器的。</p><p>Xshell 连接连接云服务器步骤：</p><ul><li>首先，我们先在Xshell生成<strong>公钥</strong></li><li>在阿里云控制台创建<strong>密钥对</strong>(选择配置项；导入已有的密钥对)</li><li>输入刚才在Xshell生成的公钥信息</li><li>在后台重启阿里云服务器</li><li>完了以后，我们就可以在Xshell上登录阿里云服务器了(用户名为root)</li></ul><p>生成公钥：</p><p><img src="http://39.108.78.254:8888/images/2019/11/07/Xshell1.png" alt="Xshell1.png"></p><p>得到公钥：</p><p><img src="http://39.108.78.254:8888/images/2019/11/07/Xshell12.png" alt="Xshell12.png"></p><p>在阿里云后台创建密钥对：</p><p><img src="http://39.108.78.254:8888/images/2019/11/07/7d540a40410937325ddcfb8e63526b3b.png" alt="7d540a40410937325ddcfb8e63526b3b.png"></p><p>然后重启服务器，即可用 Xshell 来登录：</p><p><img src="http://39.108.78.254:8888/images/2019/11/07/Xshell.png" alt="Xshell.png"></p><p>连接成功：</p><p><img src="http://39.108.78.254:8888/images/2019/11/07/Xshellf76a13275049887d.png" alt="Xshellf76a13275049887d.png"></p><h2 id="简单使用云服务器"><a href="#简单使用云服务器" class="headerlink" title="简单使用云服务器"></a>简单使用云服务器</h2><p>云服务器是 linux 系统，使用云服务器就是学习怎么使用 linux 系统。此处先贴几个学习连接。</p><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247485440&amp;idx=1&amp;sn=85b40c173d66b62b3e870dd0e095c72c&amp;chksm=ebd74901dca0c01727ed2cff30acc5d39948eda5bf4252f1d96526f951591f69edcfccbbad29&amp;token=2078489135&amp;lang=zh_CN&amp;scene=21#wechat_redirect" target="_blank" rel="external">工作中常用到的Linux命令</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484231&amp;idx=1&amp;sn=4cf217a4d692a7aba804e5d96186b15b&amp;chksm=ebd74246dca0cb5024de2f1d9f9e2ecb631e49752713c25bbe44f44856e919df5a973049c189&amp;scene=21#wechat_redirect" target="_blank" rel="external">看完这篇Linux基本的操作就会了</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484255&amp;idx=1&amp;sn=fe812d7f5ea23a7ed96ad8a3927d6075&amp;chksm=ebd7425edca0cb48e5cf927e3064bc72dad2d515867a502b4c62d52e6c66e12fbcb786639961&amp;scene=21#wechat_redirect" target="_blank" rel="external">用户和权限管理看了你就会用啦</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484259&amp;idx=1&amp;sn=5a360c8d9c468adfa65891bdfdb861e9&amp;chksm=ebd74262dca0cb746435cb274950a3c819169d9db3baa635cb199a650a6515345ca880084101&amp;scene=21#wechat_redirect" target="_blank" rel="external">Linux进程管理</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484263&amp;idx=1&amp;sn=948b54576fe0ebfb9eadf470f803077d&amp;chksm=ebd74266dca0cb709c01558313312b573f593626b60a8af4306afdfa7c6633be60a5b970ec62&amp;scene=21#wechat_redirect" target="_blank" rel="external">Linux网络管理</a><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484255&amp;idx=1&amp;sn=fe812d7f5ea23a7ed96ad8a3927d6075&amp;chksm=ebd7425edca0cb48e5cf927e3064bc72dad2d515867a502b4c62d52e6c66e12fbcb786639961&amp;scene=21#wechat_redirect" target="_blank" rel="external">Linux</a></li></ul><h3 id="下载-JDK、MySQL-和-Tomcat"><a href="#下载-JDK、MySQL-和-Tomcat" class="headerlink" title="下载 JDK、MySQL 和 Tomcat"></a>下载 JDK、MySQL 和 Tomcat</h3><p>JDK8 下载：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>MySQL5.6 下载：<a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="external">https://dev.mysql.com/downloads/mysql/5.6.html#downloads</a></p><p>Tomcat 下载：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="external">https://tomcat.apache.org/download-80.cgi</a></p><p>下载完成后，用 Xshell 文件传输工具，将文件移动到服务器上。</p><p><img src="http://39.108.78.254:8888/images/2019/11/08/xshell.png" alt="xshell.png"></p><h3 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">-- 解压安装包</div><div class="line">tar -zxvf jdk-8u231-linux-x64.tar.gz</div><div class="line">-- 编辑配置文件</div><div class="line">vim /etc/profile </div><div class="line">-- 在配置文件后添加下面的内容(我的是直接安装在root目录，所以路径直接写root)</div><div class="line">export JAVA_HOME="/root/jdk-11.0.5"</div><div class="line">export PATH="$JAVA_HOME/bin:$PATH"</div><div class="line">刷新配置文件</div><div class="line">source /etc/profile</div></pre></td></tr></table></figure><p>完了以后，输出Java版本看一下：</p><p><img src="http://39.108.78.254:8888/images/2019/11/08/java.png" alt="java.png"></p><h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>安装所需的环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# yum -y install make bison-devel ncures-devel libaio  </div><div class="line">[root@localhost ~]# yum -y install libaio libaio-devel  </div><div class="line">[root@localhost ~]# yum -y install perl-Data-Dumper  </div><div class="line">[root@localhost ~]# yum -y install net-tools</div></pre></td></tr></table></figure><p>安装bison（我安装的是<strong>2.5.1</strong>的版本）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> bison下载地址：http://www.gnu.org/software/bison/  </span></div><div class="line">[root@localhost ~]# tar zxvf bison-2.5.1.tar.gz   </div><div class="line">[root@localhost ~]# cd bison-2.5.1   </div><div class="line">[root@localhost ~]# ./configure   </div><div class="line">[root@localhost ~]# make   </div><div class="line">[root@localhost ~]# make install</div></pre></td></tr></table></figure><p>安装gc++环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# yum -y install gcc gcc-c++ autoconf automake zlib* libxml* ncurses-devel libmcrypt* libtool* cmake</div></pre></td></tr></table></figure><p>安装cmake(我安装的是<strong>3.15.4</strong>的版本)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> cmake下载地址：http://www.cmake.org/</span></div><div class="line">[root@localhost ~]# tar -xzvf cmake-3.15.4.tar.gz</div><div class="line">[root@localhost ~]# cd cmake-3.15.4</div><div class="line">[root@localhost ~]# ./bootstrap</div><div class="line">[root@localhost ~]# make   </div><div class="line">[root@localhost ~]# make install   </div><div class="line"><span class="meta">#</span><span class="bash"> 更新一下配置</span></div><div class="line">[root@localhost ~]# source /etc/profile</div></pre></td></tr></table></figure><p>解压刚刚下载的Mysql安装包（我是按照它的指示就在root的目录下安装）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# tar -zxvf mysql-5.6.46.tar.gz  </div><div class="line">[root@localhost ~]# cd mysql-5.6.46</div><div class="line"><span class="meta">#</span><span class="bash"> 安装必要的配置</span></div><div class="line">[root@localhost ~]# yum install openssl-devel</div></pre></td></tr></table></figure><p>使用cmake安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cmake \-DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/data -DSYSCONFDIR=/etc/my.cnf  -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DMYSQL_UNIX_ADDR=/tmp/mysqld.sock -DMYSQL_TCP_PORT=3306 -DENABLED_LOCAL_INFILE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci</div></pre></td></tr></table></figure><p>make 和安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# make &amp;&amp; make install</div></pre></td></tr></table></figure><p>配置mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 检查系统是否已经有mysql用户，如果没有则创建  </span></div><div class="line">[root@localhost ~]# cat /etc/passwd | grep mysql  </div><div class="line">[root@localhost ~]# cat /etc/group | grep mysql</div></pre></td></tr></table></figure><p>创建mysql用户（但是不能使用mysql账号登陆系统）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# groupadd mysql</div><div class="line">[root@localhost ~]# useradd -g mysql mysql</div></pre></td></tr></table></figure><p>修改权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# chown -R mysql:mysql /usr/local/mysql</div></pre></td></tr></table></figure><p>切换到mysql目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cd /usr/local/mysql</div></pre></td></tr></table></figure><p>设置权限等东西</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 这里最后是有个.的大家要注意</span></div><div class="line">[root@localhost ~]# chown -R mysql:mysql .</div><div class="line">[root@localhost ~]# scripts/mysql_install_db --user=mysql</div><div class="line"><span class="meta">#</span><span class="bash"> 为了安全安装完成后请修改权限给root用户</span></div><div class="line"><span class="meta">#</span><span class="bash"> 将权限设置给root用户，并设置给mysql组， 取消其他用户的读写执行权限，仅留给mysql <span class="string">"rx"</span>读执行权限，其他用户无任何权限</span></div><div class="line">[root@localhost ~]# chown -R root:mysql .</div><div class="line"><span class="meta">#</span><span class="bash"> 数据库存放目录设置成mysql用户mysql组</span></div><div class="line">[root@localhost ~]# chown -R mysql:mysql ./data</div><div class="line"><span class="meta">#</span><span class="bash"> 赋予读写执行权限，其他用户权限一律删除仅给mysql用户权限</span></div><div class="line">[root@localhost ~]# chmod -R ug+rwx .</div></pre></td></tr></table></figure><p>将mysql的配置文件拷贝到/etc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cp support-files/my-default.cnf  /etc/my.cnf</div></pre></td></tr></table></figure><p>修改my.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# vi /etc/my.cnf  </div><div class="line"><span class="meta">#</span><span class="bash"> 在下面添加：</span></div><div class="line">user=mysql      </div><div class="line">datadir=/usr/local/mysql/data  </div><div class="line">default-storage-engine=MyISAM</div></pre></td></tr></table></figure><p>启动mysql（还是在mysql的目录下进行的）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cp support-files/mysql.server  /etc/init.d/mysql</div><div class="line">[root@localhost ~]# service mysql start</div></pre></td></tr></table></figure><p>修改root的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# chkconfig --add mysql  </div><div class="line"><span class="meta">#</span><span class="bash"> 修改密码 <span class="built_in">cd</span> 切换到mysql所在目录  </span></div><div class="line">[root@localhost ~]# cd /usr/local/mysql </div><div class="line">[root@localhost ~]# ./bin/mysqladmin -u root password</div></pre></td></tr></table></figure><p>重启MySQL，启动客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# service mysql restart</div><div class="line">[root@localhost ~]# cd /usr/local/mysql/bin/ </div><div class="line">[root@localhost ~]# ./mysql -u root -p</div></pre></td></tr></table></figure><p>效果：</p><p><img src="http://39.108.78.254:8888/images/2019/11/08/mysql.png" alt="mysql.png"></p><h3 id="启动-Tomcat"><a href="#启动-Tomcat" class="headerlink" title="启动 Tomcat"></a>启动 Tomcat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# tar -zxvf apache-tomcat-8.5.47.tar.gz</div><div class="line">[root@localhost ~]# cd apache-tomcat-8.5.47/bin/</div><div class="line">[root@localhost ~]# ./startup.sh</div></pre></td></tr></table></figure><h2 id="开安全组端口"><a href="#开安全组端口" class="headerlink" title="开安全组端口"></a>开安全组端口</h2><p>前面我们已经启动了MySQL和Tomcat了，如果想要从外部访问服务器的MySQL和Tomcat，需要在阿里云控制台上开对应的<strong>端口号</strong>，不然是访问不到的。</p><p><img src="http://39.108.78.254:8888/images/2019/11/08/9e9a5052f6565e21d7a84b489ea171db.png" alt="9e9a5052f6565e21d7a84b489ea171db.png"></p><p>重启服务器；尝试在Windows上访问Linux的启动后的Tomcat和MySQL</p><p><img src="http://39.108.78.254:8888/images/2019/11/08/tomcat.png" alt="tomcat.png"></p><p>开启远程登录权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 如果你想使用mypassword从任何主机连接到mysql服务器的话。</div><div class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;mypassword&apos; WITH GRANT OPTION;</div><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure><p><img src="http://39.108.78.254:8888/images/2019/11/08/mysqlf0d949eeaccb7e2a.png" alt="mysqlf0d949eeaccb7e2a.png"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://mp.weixin.qq.com/s/D556Ez53637BMWW6-RPnsQ" target="_blank" rel="external">https://mp.weixin.qq.com/s/D556Ez53637BMWW6-RPnsQ</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习云服务器的基本使用，包括如何用 Xshell 工具连接云服务器；linux 的基本使用方法；常用软件（JDK、Tomcat、MySQL）的安装和配置。&lt;br&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建个人技术博客</title>
    <link href="http://yoursite.com/2019-03-09-201609/2016-09-17_%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://yoursite.com/2019-03-09-201609/2016-09-17_使用Hexo搭建个人技术博客.html</id>
    <published>2019-03-09T15:50:38.140Z</published>
    <updated>2020-02-22T15:01:31.115Z</updated>
    
    <content type="html"><![CDATA[<p>自己很早之前就想做一个博客了，但都没有付诸实践，碰巧不久前看到了<a href="http://kaizige.vip/" target="_blank" rel="external">凯子哥</a>的一篇博客搭建的教学文章，就跟着动起手来，这两天也终于把博客的雏形建好。建站的目的也非常简单，就是想给自己躁动的心灵一归宿。这里只有自己，希望自己在这里能认真的倾听自己的声音，能快乐的学习、分享和成长。<br><a id="more"></a></p><h2 id="搭建前的准备工作"><a href="#搭建前的准备工作" class="headerlink" title="搭建前的准备工作"></a>搭建前的准备工作</h2><ol><li><a href="https://git-scm.com/download/win" target="_blank" rel="external">安装git（windows）</a></li><li><a href="https://nodejs.org/en/download/" target="_blank" rel="external">安装nodejs</a>，git和nodejs的安装只需按照提示下一步即可。</li><li>使用npm安装Hexo。注意：nodejs已经包含了npm，所以直接在git的bash窗口输入以下命令即可在下面指定的folder下建好一个空的网站（博客）。<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli <span class="comment">#安装Hexo</span></div><div class="line">$ hexo version <span class="comment">#检查Hexo是否安装成功</span></div><div class="line">$ hexo init &lt;folder&gt; <span class="comment">#在指定目录新建网站</span></div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt; <span class="comment">#切换到网站根目录</span></div><div class="line">$ npm install <span class="comment">#安装网站</span></div><div class="line">$ npm install hexo-server --save <span class="comment">#安装hexo服务</span></div></pre></td></tr></table></figure></li></ol><h2 id="Hexo博客（即上面命令里面的folder）的目录结构"><a href="#Hexo博客（即上面命令里面的folder）的目录结构" class="headerlink" title="Hexo博客（即上面命令里面的folder）的目录结构"></a>Hexo博客（即上面命令里面的folder）的目录结构</h2><ol><li>_config.yml：网站的配置信息，您可以在此配置大部分的参数。（全局配置）</li><li>package.json：应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</li><li>scaffolds：模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li><li>source：资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为下划线的文件/文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</li><li>themes：主题文件夹。Hexo 会根据主题来生成静态页面。</li></ol><h2 id="为博客设置主题"><a href="#为博客设置主题" class="headerlink" title="为博客设置主题"></a>为博客设置主题</h2><p>这里我设置的主题和<a href="http://kaizige.vip/" target="_blank" rel="external">凯子哥</a>同款—-Maupassant<br>在bash窗口执行以下命令安装主题<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class="line">$ npm install hexo-renderer-jade --save</div><div class="line">$ npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure></p><p>执行完成之后，你会发现你的主题文件夹（themes）下有了maupassant文件夹。<br>最后编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。<br>主题的详细配置见maupassant主题开发者<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="external">屠城的博客</a></p><h2 id="Hexo常用命令及工作流程"><a href="#Hexo常用命令及工作流程" class="headerlink" title="Hexo常用命令及工作流程"></a>Hexo常用命令及工作流程</h2><h3 id="常用命令以及其作用"><a href="#常用命令以及其作用" class="headerlink" title="常用命令以及其作用"></a>常用命令以及其作用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ hexo init [folder]</div><div class="line">$ hexo new [layout]&lt;title&gt;</div><div class="line">$ hexo generate</div><div class="line">$ hexo publish [layout]&lt;filename&gt;</div><div class="line">$ hexo server </div><div class="line">$ hexo deploy</div><div class="line">$ hexo render &lt;file&gt; ...</div><div class="line">$ hexo migrate &lt;<span class="built_in">type</span>&gt;</div><div class="line">$ hexo clean</div><div class="line">$ hexo list&lt;<span class="built_in">type</span>&gt;</div><div class="line">$ hexo version</div></pre></td></tr></table></figure><ol><li>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</li><li>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。<strong>如果标题包含空格的话，请使用引号括起来。</strong> Hexo有三种默认布局：<strong>post、page、draft</strong>；它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</li><li>生成静态文件<br>3.1 -d,–deploy 文件生成后立即部署网站<br>3.2 -w,–watch 监视文件变动</li><li>发表草稿</li><li>启动服务器<br>5.1 -p,–port 重设端口<br>5.2 -s,–static 只使用静态文件<br>5.3 -1,–log 启动日记记录或覆盖记录格式</li><li>部署网站 参数：-g,–generate 部署网站前，需要预先生成静态文件</li><li>渲染文件 参数：-o,–output 设置输出路径</li><li>从其他系统[迁移内容]</li><li>清除缓存文件（db.json）和已生成的静态文件（public）</li><li>列出网站资料</li><li>显示hexo版本</li><li>博客的一些详细配置见<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo官网教程</a></li></ol><h3 id="建好站设置好主题后，为博客添加新文章的一个正常的工作流如下"><a href="#建好站设置好主题后，为博客添加新文章的一个正常的工作流如下" class="headerlink" title="建好站设置好主题后，为博客添加新文章的一个正常的工作流如下"></a>建好站设置好主题后，为博客添加新文章的一个正常的工作流如下</h3><ol><li>hexo new 一篇新文章，使用<a href="http://www.markdown.cn/" target="_blank" rel="external">markdown语法</a>填写文章内容</li><li>hexo generate 生成静态文件</li><li>hexo server 开启服务</li><li>访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 预览文章</li><li>hexo deploy 部署（推送）到github</li><li>hexo clean 清除缓存和静态文件</li></ol><h2 id="添加RSS订阅"><a href="#添加RSS订阅" class="headerlink" title="添加RSS订阅"></a>添加RSS订阅</h2><p>添加RSS订阅后，通过RSS阅读器，别人、自己就可以轻松订阅你的博客内容了。<br>只需一行代码便可添加RSS订阅，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$npm</span> install hexo-generator-feed --save</div></pre></td></tr></table></figure></p><p>注意，执行这行代码时，你的网站内，即source/_post文件夹下至少有一篇文章。</p><h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>将favicon.ico放在Hexo根目录的source文件夹下，建议的大小：32px*32px。<br><a href="http://www.bitbug.net/" target="_blank" rel="external">ico图标在线制作地址</a></p><h2 id="设置-Custom-404页面"><a href="#设置-Custom-404页面" class="headerlink" title="设置 Custom 404页面"></a>设置 Custom 404页面</h2><p>在source目录下新建一个404.html文件，即可定义你的404页面。<br>腾讯公益404页面设置：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"http://www.qq.com/404/search_children.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p><h2 id="写草稿"><a href="#写草稿" class="headerlink" title="写草稿"></a>写草稿</h2><p>写一篇文章时，我们可能要反复修改，或者要等好久才能完成，这时我们我们可以把这篇文章建为草稿，存储在source/_drafts文件夹，因为草稿文章不会显示在页面中。等我们完成文章后，把草稿发布（自动移到source/_post文件夹）即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#新建一篇草稿</span></div><div class="line"><span class="variable">$hexo</span> new draft &lt;pagename&gt;</div><div class="line"><span class="comment">#草稿写好后，发布为正式文章</span></div><div class="line"><span class="variable">$hexo</span> publish [layout] &lt;pagename&gt;</div></pre></td></tr></table></figure></p><h2 id="参考资料及版权"><a href="#参考资料及版权" class="headerlink" title="参考资料及版权"></a>参考资料及版权</h2><ul><li><a href="http://kaizige.vip/2016/06/10/how-to-build-up-yourself-hexo-blog/" target="_blank" rel="external">使用Hexo搭建免费的个人技术博客</a></li><li><a href="http://www.newbiefly.com/?p=1193" target="_blank" rel="external">5分钟 搭建免费个人博客</a></li><li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo官方网站</a></li><li><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="external">大道至简——Hexo简洁主题推荐</a></li><li><a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="external">Hexo搭建Github静态博客</a></li><li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool&amp;utm_medium=referralaio" target="_blank" rel="external">hexo你的博客</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己很早之前就想做一个博客了，但都没有付诸实践，碰巧不久前看到了&lt;a href=&quot;http://kaizige.vip/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;凯子哥&lt;/a&gt;的一篇博客搭建的教学文章，就跟着动起手来，这两天也终于把博客的雏形建好。建站的目的也非常简单，就是想给自己躁动的心灵一归宿。这里只有自己，希望自己在这里能认真的倾听自己的声音，能快乐的学习、分享和成长。&lt;br&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://yoursite.com/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Samba 入门</title>
    <link href="http://yoursite.com/2018-03-25-201803/2018-03-25_Samba%20%E5%85%A5%E9%97%A8.html"/>
    <id>http://yoursite.com/2018-03-25-201803/2018-03-25_Samba 入门.html</id>
    <published>2018-03-24T16:00:00.000Z</published>
    <updated>2020-02-22T15:12:23.475Z</updated>
    
    <content type="html"><![CDATA[<p>Samba 的主要作用就是实现 Linux 和 Windows 系统间的文件共享和打印共享。当然也可以实现 Linux 和 Linux 之间的文件共享，但是 Linux 和 Linux 之间的文件共享使用大多数使用 NFS (网络文件系统）来实现。<br><a id="more"></a></p><h2 id="Samba-服务器的安装"><a href="#Samba-服务器的安装" class="headerlink" title="Samba 服务器的安装"></a>Samba 服务器的安装</h2><p>1、系统环境<br>系统平台：CentOS release 6.6 (Final)<br>Samba 版本：samba-3.6.23-46el6_9.x86_64<br>Samba Server IP：192.168.242.88<br>系统防火墙已关闭<br>SELINUX=disable</p><p>2、安装 Samba<br>yum install samba samba-client samba-swat # 安装 Samba<br>rpm -e samba # 卸载 Samba<br>rpm -e samba –nodeps # 同时删除依赖包<br>rpm -qa|grep samba # 查看安装状态<br>/etc/init.d/smb start/stop/restart # 启动、停止或重启 smb 服务<br>/etc/init.d/nmb start/stop/restart # 启动、停止或重启 nmb 服务<br>service smb status # 查看 smb 服务状态<br>service nmb status # 查看 nmb 服务状态<br>chkconfig –level 35 smb on # 在3、5级别上自动运行samba服务<br>chkconfig –list|grep smb # 查看各个级别 smb 服务自动启动状况</p><h2 id="Samba-服务器的配置"><a href="#Samba-服务器的配置" class="headerlink" title="Samba 服务器的配置"></a>Samba 服务器的配置</h2><p>/etc/samba/smb.conf # Samba 服务的主配置文件</p><p>Global Settings (55-245行) # 全局配置，针对所有共享资源，常用配置如下<br>workgroup = WORKGROUP # 定义工作组，也就是windows中的工作组概念<br>server string = David Samba Server Version %v # 定义Samba服务器的简要说明<br>netbios name = DavidSamba # 定义windows中显示出来的计算机名称<br>log file = /var/log/samba/log.%m # 定义Samba用户的日志文件，%m代表客户端主机名</p><p>Share Definitions （246-尾行） # 配置当前共享资源，常用配置如下<br>[public] # 定义共享文件夹显示名称<br>        comment = Public Stuff # 共享文件夹说明<br>        path = /share # 待共享文件路径<br>        public = yes # 定义是否允许 guest 客户访问<br>        browseable = yes/no # 共享路径是否可浏览<br>        writable = yes/no # 共享路径是否可写入<br>更加详细的说明文档：<a href="https://www.samba.org/samba/docs/Samba-HOWTO-Collection.pdf" target="_blank" rel="external">https://www.samba.org/samba/docs/Samba-HOWTO-Collection.pdf</a><br>注意：配置文件中；和#都是注释符号</p><h2 id="Samba-服务器使用案例"><a href="#Samba-服务器使用案例" class="headerlink" title="Samba 服务器使用案例"></a>Samba 服务器使用案例</h2><p>1、使用 Samba 发布一个共享目录 /share, 共享名称为 public, 所有用户均可访问。<br>=====Global Settings=======<br>workgroup = WORKGROUP<br>server string = Monkey-kong Samba Server Version %v<br>netbios name = Monkey-kongSamba<br>log file = /var/log/samba/log.%m<br>security = share</p><p>=====Share Definitions======<br>[public]<br>comment = Public Stuff<br>path = /share<br>public = yes</p><p>配置完成后<br>a. 测试配置是否有语法错误<br>testparm</p><p>b. 创建共享文件夹和文件<br>mkdir share<br>cd /share<br>touch a.txt<br>touch b.txt</p><p>c. 给共享目录设置 nobody 权限<br>chown -R nobody:nobody share/<br>ll /share/</p><p>d. 重启 smb 和 nmb 服务<br>/etc/init.d/smb restart<br>/etc/inti.d/nmb restart</p><p>e. 访问共享文件夹<br>smbclient //192.168.242.88/public # Linux 下访问。提示输入 root 密码时直接回车即可<br>\\192.168.242.88\public # Windows 下访问。注意斜杠方向</p><p>2、使用 Samba 发布一个共享目录 /ts, 共享名称为 ts, 仅 TS 组的用户均可访问。<br>=====Global Settings=======<br>workgroup = WORKGROUP<br>server string = Monkey-kong Samba Server Version %v<br>netbios name = Monkey-kongSamba<br>log file = /var/log/samba/log.%m<br>security = user</p><p>=====Share Definitions======<br>[homes] //设置用户宿主目录<br>comment = Home Directories<br>browseable = no<br>writable = yes</p><p>[public]<br>comment = Public Stuff<br>path = /share<br>public = yes</p><p>[ts] //ts 组目录，只允许ts组成员访问<br>comment = TS<br>path = /ts<br>valid users = @ts</p><p>配置完成后<br>a. 创建工作组和用户<br>groupadd ts # 创建 ts 工作组和用户<br>useradd -g ts sandy<br>useradd -g ts david<br>passwd sandy<br>passwd david</p><p>b. 创建 ts 共享目录和文件<br>cd /<br>mkdir ts<br>touch a.txt</p><p>c. 将 ts 组的两个用户增加到 samba 用户中<br>smbpasswd -a sandy<br>smbpasswd -a david</p><p>d. 重启 Samba 服务<br>etc/init.d/smb restart<br>etc/init.d/nmb restart</p><p>e. 访问共享目录<br>\\192.168.242.88\ts # Windws 访问<br>smbclient //192.168.242.88/ts -U sandy</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>cat /etc/issue # 查看 Linux 系统版本<br>rpm -qa samba # 查看 Samba 版本<br>service iptables status # 查看防火墙状态</p><p>vi /etc/selinux/config # 修改文件中 SELINUX=”disabled”<br>setenforce 0 #临时关闭 SELINUX<br>chkconfig iptables on # 开启防火墙，永久生效<br>chkconfig iptables off # 关闭防火墙，永久生效<br>service iptables start # 开启防火墙，即时生效<br>service iptables stop # 关闭防火墙，即时生效<br>net use * /del</p><p>cp -p /etc/samba/smb.conf    /etc/samba/smb.conf.orig # 备份文件<br>rm -rf # 删除文件夹及其下面的文件</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/mchina/archive/2012/12/18/2816717.html" target="_blank" rel="external">https://www.cnblogs.com/mchina/archive/2012/12/18/2816717.html</a> ，by David Camp</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Samba 的主要作用就是实现 Linux 和 Windows 系统间的文件共享和打印共享。当然也可以实现 Linux 和 Linux 之间的文件共享，但是 Linux 和 Linux 之间的文件共享使用大多数使用 NFS (网络文件系统）来实现。&lt;br&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Samba" scheme="http://yoursite.com/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>Oracle 基础</title>
    <link href="http://yoursite.com/2018-03-25-201803/2018-03-25_Oracle%20%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89.html"/>
    <id>http://yoursite.com/2018-03-25-201803/2018-03-25_Oracle 基础（一）.html</id>
    <published>2018-03-24T16:00:00.000Z</published>
    <updated>2020-02-22T15:10:52.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Oracle-11g-的安装"><a href="#Oracle-11g-的安装" class="headerlink" title="Oracle 11g 的安装"></a>Oracle 11g 的安装</h2><h3 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h3><p><a href="http://www.oracle.com/technetwork/indexes/downloads/index.html" target="_blank" rel="external">Oracle 官网下载页</a>；安装时注意以管理员身份运行。</p><h3 id="系统服务："><a href="#系统服务：" class="headerlink" title="系统服务："></a>系统服务：</h3><ul><li>OracleServiceORCL:数据库服务，Oracle 核心服务，必须启动。</li><li>OracleOraDb11g_home1TNSListener:监听器服务，远程访问数据库时需要，必须启动。</li><li>其他服务均是非必须启动项，按需启动即可。</li></ul><h3 id="文件体系结构"><a href="#文件体系结构" class="headerlink" title="文件体系结构:"></a>文件体系结构:</h3><ul><li>admin:以数据库为单位，存放数据库运行过程中产生的跟踪文件。</li><li>cfgtoollogs:存放运行 dbca、emca和netca图形化程序时产生的日志信息。</li><li>checkpoints:存放数据库检查点相关信息。</li><li>diag:以组件为单位，集中存储数据库中各个组件运行的诊断信息。</li><li>flash_recory_area:以数据库为单位，当数据库自动备份时，存放备份文件、存放数据库的闪回日志文件。</li><li>oradata:以数据库为单位，存放数据库的物理文件，包括数据文件、控制文件和重做日志文件。</li><li>product:存放 Oracle 11g 数据库管理系统相关的软件，包括可执行文件、网络配置文件、脚本文件等。<h3 id="管理工具和开发工具"><a href="#管理工具和开发工具" class="headerlink" title="管理工具和开发工具"></a>管理工具和开发工具</h3>Oracle 企业管理器（OEM）：&lt; ORACLE_HOME &gt;\install\portlist.int<br><a href="https://127.0.0.1:1158/em" target="_blank" rel="external">https://127.0.0.1:1158/em</a><br>SQL Plus:<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">sqlplus sys/tiger@humansource AS SYSDBA</div><div class="line">CONNECT sys/tiger@humansource AS SYSDBA</div><div class="line">DISCONNECT</div><div class="line">EDIT</div><div class="line">SAVE D:\SAVE_FILE.sql</div><div class="line">GET D:\SAVE_FILE.sql</div><div class="line">EDIT</div><div class="line"><span class="keyword">START</span> D:\SAVE_FILE.sql</div><div class="line"><span class="keyword">SHOW</span> LINESIZE PAGESIZE</div><div class="line"><span class="keyword">SET</span> LINESIZE <span class="number">100</span> PAGESIZE <span class="number">30</span> <span class="keyword">TIME</span> <span class="keyword">ON</span></div><div class="line"><span class="keyword">DESC</span> DEPT</div><div class="line">SPOOL D:\SCREEN.txt</div><div class="line">SPOOL <span class="keyword">OFF</span></div><div class="line"><span class="keyword">CLEAR</span> SCREEN</div><div class="line"><span class="keyword">HELP</span></div></pre></td></tr></table></figure></li></ul><h2 id="数据库的启动与关闭"><a href="#数据库的启动与关闭" class="headerlink" title="数据库的启动与关闭"></a>数据库的启动与关闭</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ul><li>STARTUP NOMOUNT：不装入数据库而启动实例。<br>仅仅通过初始化文件，分配出SGA区，启动数据库后台进程，没有打开控制文件和数<br>据文件。不能任何访问数据库。</li><li>STARTUP MOUNT：启动事例并装入数据库。<br>MOUNT数据库，仅仅给DBA进行管理操作，不允许数据库的用户访问。仅仅只是当前实例的控制文件被打开，数据文件未打开。</li><li>STARTUP：启动实例装入并打开数据库。</li><li>STARTUP RESTRICT：限制在启动时对数据库的访问。</li><li>STARTUP FORCE：强制事例启动 </li><li>STARTUP OPEN RECOVER：启动一个事例，装入数据库，并启动全部的介质恢复 </li><li>STARTUP OPEN sale PFILE=initsale.ora PARALLEL：启动独占或并行模式<h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3></li><li>SHUTDOWN NORMAL：不允许新的连接、等待会话结束、等待事务结束、做一个检查点并关闭数据文件。启 动时不需要实例恢复。</li><li>SHUTDOWN TRANSACTIONAL：不允许新的连接、不等待会话结束、等待事务结束、做一个检查点并关闭数据文件。启动时不需要实例恢复。</li><li>SHUTDOWN IMMEDIATE：不允许新的连接、不等待会话结束、不等待事务结束、做一个检查点并关闭数据文件。没有结束的事务是自动rollback的。启动时不需要实例恢复。</li><li>SHUTDOWN ABORT：不允许新的连接、不等待会话结束、不等待事务结束、不做检查点且没有关闭数据文件。启动时自动进行实例恢复。<h3 id="查询数据库状态"><a href="#查询数据库状态" class="headerlink" title="查询数据库状态"></a>查询数据库状态</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> OPEN_MODE <span class="keyword">FROM</span> V$<span class="keyword">DATABASE</span>;</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">STATUS</span> <span class="keyword">FROM</span> V$<span class="keyword">INSTANCE</span>;</div></pre></td></tr></table></figure></li></ul><h2 id="Oracle-数据库系统结构"><a href="#Oracle-数据库系统结构" class="headerlink" title="Oracle 数据库系统结构"></a>Oracle 数据库系统结构</h2><h3 id="系统结构概述"><a href="#系统结构概述" class="headerlink" title="系统结构概述"></a>系统结构概述</h3><p><img src="http://oexnrs3kx.bkt.clouddn.com/Oracle%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.jpg" alt="Oracle 数据库系统结构图"><br>从上图可看出，一个 Oracle 服务器，也就是一个数据库管理系统，由数据库<strong>存储结构</strong>和<strong>数据库实例(软件结构)</strong>两部分组成。<br>其中，存储结构包括<strong>物理存储结构和逻辑存储结构</strong>，是数据库存储以及空间分配的基础；<br>数据库实例是构成 Oracle 数据库的软件结构，包括<strong>内存结构（SGA）和后台进程</strong>，是数据库运行与管理的基础。</p><p>Oracle 数据库是由存放在磁盘上的数据库（DB）和对磁盘上的数据库进行管理的数据库管理系统（DBMS）两部分组成，分别对应数据库的存储结构和软件结构。</p><h3 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h3><p><img src="http://oexnrs3kx.bkt.clouddn.com/%E7%89%A9%E7%90%86%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B8%8E%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%85%B3%E7%B3%BB.jpg" alt="此处输入图片的描述"></p><ul><li>一个数据库在物理上包含多个数据文件，在逻辑上包含多个表空间</li><li>表空间和数据文件是一对多关系</li><li>逻辑块由一个或多个操作系统块组成</li><li>一个逻辑区只能属于一个数据文件，而一个数据文件可以包含一个或多个逻辑区</li></ul><h4 id="物理存储结构"><a href="#物理存储结构" class="headerlink" title="物理存储结构"></a>物理存储结构</h4><ul><li>数据文件：数据库中所有数据的实际存储空间，所有数据文件的大小构成了数据库的大小</li><li>控制文件：记录数据库结构信息的重要二进制文件，由 Oracle 系统进行读写操作，DBA 不能直接操作控制文件</li><li>重做日志文件：以重做记录的形式记录、保存用户对数据库所进行的变更操作，是数据库中最重要的物理文件</li><li>归档日志文件：历史联机重做日志文件的集合</li><li>初始化参数文件：数据库启动过程所必须的文件，记录了数据库显示的参数的设置。数据库启动的第一步就是根据初始化参数文件中的设置，创建并启动实例，即分配内存空间、启动后台进程</li><li>跟踪文件：数据库中重要的诊断文件，是获取数据库信息的重要工具，对管理数据库的实例起着重要的作用<h4 id="逻辑存储结构"><a href="#逻辑存储结构" class="headerlink" title="逻辑存储结构"></a>逻辑存储结构</h4>块（对应 OS 块） —-&gt; 区 —-&gt; 段（表段、索引段、临时段、回退段） —-&gt; 表空间<br>数据库自动创建的表空间<br>|名称|类型|描述|<br>|—–|:——–|:—|<br>|SYSTEM|系统表空间|存放数据字典、数据库对象定义、PL/SQL程序源代码等|<br>|SYSAUX|辅助系统表空间|存储数据库组件信息|<br>|TEMP|临时表空间|存放临时数据，用于排序等|<br>|UNDOTBS1|撤销表空间|存储、管理回退信息|<br>|USERS|用户表空间|存放用户业务数据信息|<br>|EXAMPLE|实例表空间|存放实例的数据库方案对象信息|<h3 id="软件结构"><a href="#软件结构" class="headerlink" title="软件结构"></a>软件结构</h3>Oracle 数据库实例（软件结构）由一系列内存结构和后台进程组成。用户操作数据库的过程实质上是与数据库实例建立连接，然后通过实例来操作数据库的过程。用户所有的操作都在内存中进行，最后由数据库后台进程将操作结果写入各种物理文件中永久保存。<h4 id="内存结构"><a href="#内存结构" class="headerlink" title="内存结构"></a>内存结构</h4></li><li>系统全局区（SGA）：由 Oracle 分配的共享内存结构，包含一个数据库实例的数据和控制信息。SGA 数据供所有的服务器进程和后台进程共享，所以 SGA 又称为共享全局区。SGA 主要由数据高速缓冲区、共享池、重做日志缓冲区、大型池、Java 池、流池和其他结构组成。</li><li><p>程序全局区（PGA）</p><ul><li>排序区：存放排序操作所产生的临时数据</li><li>游标信息区：存放执行游标操作时产生的数据</li><li>会话信息区：保存用户会话所具有的权限、角色、性能统计信息</li><li>堆栈区：保存会话过程中的绑定变量、会话变量等信息<h4 id="后台进程"><a href="#后台进程" class="headerlink" title="后台进程"></a>后台进程</h4>进程概念：进程是操作系统中一个独立的可以调度的任务，用于完成指定的任务。进程与程序的区别在于：</li></ul></li><li><p>进程是动态的概念，即动态创建，完成任务后立即消亡；而程序事一个静态实体。</p></li><li>进程强调执行过程，而程序仅仅是指令的集合</li></ul><p>Oracle 中进程类型：</p><ul><li>用户进程：当用户连接数据库执行一个应用程序时，会创建一个用户进程，来完成用户指定的任务</li><li>服务器进程：由 Oracle 自身创建，用于处理连接到数据库实例的用户进程所提出的请求，其主要任务如下<ul><li>解析并执行用户提交的 SQL 语句和 PL/SQL 程序。</li><li>在 SGA 的数据高速缓冲区中搜索用户进程所要访问的数据，如果数据不在缓冲区中，则需要从硬盘数据文件中读取所需的数据，再将他们复制到缓冲区中。</li><li>将用户改变数据库的操作信息写入日志缓冲区中。</li><li>将查询或执行成功的结果数据返回给用户进程。</li></ul></li><li>后台进程：为保证 Oracle 数据库在任意一个时刻都可以处理多用户的并发请求，进行复杂的数据操作，而且优化系统性能，Oracle 数据库启用了一些互相独立的附加程序，称为后台进程。服务器进程在执行用户请求时，会调用后台进程来实现对数据库的操作。<ul><li>数据库写入进程（DBWR）:负责吧数据高速缓冲区中已经被修改的数据（脏缓存块）成批写入数据文件中永久保存，同时使得数据高速缓冲区有更多的空闲缓冲块，保证服务器进程将所需数据从数据文件中读取到高速缓冲区中，提高缓存命中率。</li><li>日志写入进程（LGWR）：负责把重做日志缓冲区中的重做记录写入重做日志文件中永久保存。</li><li>检查点（CKPT）：更新控制文件与数据文件的头部，使其同步；触发 DBWR 进程，将脏缓存快写入数据文件</li><li>归档进程（ARCH）：负责在日志切换后，将已经写满的重做日志文件复制到归档文件，防止写满的重做日志文件被覆盖。</li><li>系统监控进程（SMON）:数据库实例恢复；回收不再使用的临时空间；合并各个表空间的空闲碎片</li><li>进程监控进程（PMON）：恢复失败的用户进程或服务器进程，并释放进程所占用的资源；’清除非正常中断的用户进程留下的孤儿会话，回退未提交的事务，释放会话所占用的锁、SGA、PGA等资源；监控调度进程和服务器进程的状态，如果他们失败，则尝试重新启动他们，并释放他们所占用的资源。</li></ul></li></ul><h2 id="数据库存储设置与管理"><a href="#数据库存储设置与管理" class="headerlink" title="数据库存储设置与管理"></a>数据库存储设置与管理</h2><h3 id="表空间的设置与管理"><a href="#表空间的设置与管理" class="headerlink" title="表空间的设置与管理"></a>表空间的设置与管理</h3><h4 id="1-创建表空间"><a href="#1-创建表空间" class="headerlink" title="1.创建表空间"></a>1.创建表空间</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--创建永久性表空间，区定制扩展，段手动管理（默认全是自动）</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLESPACE</span> HRTBS1 <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\HRTBS1_1.DBF'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M </div><div class="line">  <span class="keyword">EXTENT</span> <span class="keyword">MANAGEMENT</span> <span class="keyword">LOCAL</span> <span class="keyword">UNIFORM</span> <span class="keyword">SIZE</span> <span class="number">512</span>K</div><div class="line">  <span class="keyword">SEGMENT</span> <span class="keyword">SPACE</span> MANEGEMENT <span class="keyword">MANUAL</span>;</div><div class="line">  </div><div class="line"><span class="comment">--创建临时表空间和临时表空间组（段只能自动管理）</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> HRTEMP1 TEMPFILE <span class="string">'D:\3_database\oracle\oradata\humansource\HRTEMP1_1.DBF'</span> <span class="keyword">SIZE</span> <span class="number">20</span>M </div><div class="line">  <span class="keyword">EXTENT</span> <span class="keyword">MANAGEMENT</span> <span class="keyword">LOCAL</span> <span class="keyword">UNIFORM</span> <span class="keyword">SIZE</span> <span class="number">15</span>M;</div><div class="line">  </div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> HRTEMP2 TEMPFILE <span class="string">'D:\3_database\oracle\oradata\humansource\HRTEMP2_1.DBF'</span> <span class="keyword">SIZE</span> <span class="number">20</span>M </div><div class="line">  <span class="keyword">EXTENT</span> <span class="keyword">MANAGEMENT</span> <span class="keyword">LOCAL</span> <span class="keyword">UNIFORM</span> <span class="keyword">SIZE</span> <span class="number">15</span>M <span class="keyword">TABLESPACE</span> </div><div class="line">  <span class="keyword">GROUP</span> TEMP_GROUP;</div><div class="line">  </div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> HRTEMP1 <span class="keyword">TABLESPACE</span> <span class="keyword">GROUP</span> TEMP_GROUP;</div><div class="line"></div><div class="line"><span class="comment">--创建撤销表空间（段只能自动管理）</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">UNDO</span> <span class="keyword">TABLESPACE</span> HRUNDO1 <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\HRUNDO1_1.DBF'</span> <span class="keyword">SIZE</span> <span class="number">20</span>M;</div></pre></td></tr></table></figure><p>Oracle 主要有以上三种表空间。创建时注意数据文件的后缀是<strong>DBF</strong>,指定大小的后缀是<strong>M</strong>，不是MB。<br>还有一种大文件表空间（段只能自动管理），创建方式如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">BIGFILE</span> <span class="keyword">TABLESPACE</span> BIG_TBS <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\BIG01.DBF'</span> <span class="keyword">SIZE</span> <span class="number">1</span>G </div><div class="line">  <span class="keyword">EXTENT</span> <span class="keyword">MANAGEMENT</span> <span class="keyword">LOCAL</span> <span class="keyword">UNIFORM</span> <span class="keyword">SIZE</span> <span class="number">512</span>K;</div></pre></td></tr></table></figure></p><p>问题：<br>怎么理解区定制扩展、段手工管理？</p><h4 id="2-修改表空间"><a href="#2-修改表空间" class="headerlink" title="2.修改表空间"></a>2.修改表空间</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--2.1 为表空间添加数据文件</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">ADD</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> <span class="keyword">SIZE</span> <span class="number">10</span>M;</div><div class="line"></div><div class="line"><span class="comment">--2.2 修改数据文件的扩展性</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> </div><div class="line">  <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span> <span class="keyword">NEXT</span> <span class="number">1</span>M <span class="keyword">MAXSIZE</span> <span class="keyword">UNLIMITED</span>;</div><div class="line"><span class="comment">--取消自动增长</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> </div><div class="line">  <span class="keyword">AUTOEXTEND</span> <span class="keyword">OFF</span>;</div><div class="line"></div><div class="line"><span class="comment">--2.3 重新设置表空间的大小</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> <span class="keyword">RESIZE</span> <span class="number">8</span>M;</div><div class="line"></div><div class="line"><span class="comment">--2.4 修改表空间的可用性(SYSTEM、临时表空间和撤销表空间不可以修改)</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">OFFLINE</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">ONLINE</span>;</div><div class="line"></div><div class="line"><span class="comment">--2.5 修改表空间读写性</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">READ</span> <span class="keyword">ONLY</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">READ</span> WRITE;</div><div class="line"></div><div class="line"><span class="comment">--2.6 设置数据库的默认表空间</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DEFAULT</span> <span class="keyword">TABLESPACE</span> HRTBS1;</div><div class="line"><span class="comment">--设置temp_grop临时表空间组为数据库的默认临时表空间</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DEFAULT</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> temp_group;</div><div class="line"></div><div class="line"><span class="comment">--2.7 表空间备份</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> HRTBS1 <span class="keyword">BEGIN</span> <span class="keyword">BACKUP</span>;</div><div class="line"><span class="comment">--将 HRTBS1 表空间的数据文件 HRTBS1_1.DBF 复制到备份路径</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> HRTBS1 <span class="keyword">END</span> <span class="keyword">BACKUP</span>;</div><div class="line"><span class="comment">--ORA-01123: 无法启动联机备份; 未启用介质恢复 解决方法</span></div><div class="line">ARCHIVE LOG LIST;</div><div class="line">SHUTDOWN IMMEDIATE;</div><div class="line">STARTUP MOUNT;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">ARCHIVELOG</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">OPEN</span>;</div><div class="line"></div><div class="line"><span class="comment">--2.8 删除表空间</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLESPACE</span> HRUNDO1 <span class="keyword">INCLUDING</span> <span class="keyword">CONTENTS</span> <span class="keyword">AND</span> <span class="keyword">DATAFILES</span> <span class="keyword">CASCADE</span> <span class="keyword">CONSTRAINTS</span>;</div></pre></td></tr></table></figure><p>修改表空间主要包括：</p><ul><li>为表空间添加数据文件</li><li>修改数据文件的扩展性（<strong>设置自动增长</strong>）</li><li>重新设置表空间的大小</li><li>修改表空间的可用性和读写性（<strong>OFFLINE、ONLINE\READ、WRITE</strong>）</li><li>设置数据库的默认表空间</li><li>表空间备份</li><li>表空间的删除<br>问题：<br>怎么理解表空间的 OFFLINE、ONLINE？</li></ul><p>怎么理解表空间的备份？不使用 BEGIN BACKUP 直接复制数据文件不能备份？</p><h4 id="3-查询表空间"><a href="#3-查询表空间" class="headerlink" title="3.查询表空间"></a>3.查询表空间</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> TABLESPACE_NAME,EXTENT_MANAGEMENT,ALLOCATION_TYPE,<span class="keyword">CONTENTS</span> <span class="keyword">FROM</span> DBA_TABLESPACES;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DBA_TABLESPACE_GROUPS;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$<span class="keyword">TABLESPACE</span>;</div></pre></td></tr></table></figure><h3 id="数据文件的设置与管理"><a href="#数据文件的设置与管理" class="headerlink" title="数据文件的设置与管理"></a>数据文件的设置与管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--3.1 创建数据文件(就是向表空间添加数据文件；REUSE字句只能用于那些存在但是没有被应用的文件)</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">ADD</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\HRUNDO1_1.DBF'</span> <span class="keyword">SIZE</span> <span class="number">10</span>M <span class="keyword">REUSE</span>;</div><div class="line"><span class="comment">--3.2 修改数据文件的大小（同设置表空间大小）</span></div><div class="line"></div><div class="line"><span class="comment">--3.3 改变数据文件的可用性</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> <span class="keyword">OFFLINE</span>;</div><div class="line"><span class="comment">--ORA-01145: 除非启用了介质恢复, 否则不允许立即脱机</span></div><div class="line">RECOVER DATAFILE 'D:\3_database\oracle\oradata\humansource\USERS02.DBF';</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DATAFILE</span> <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> <span class="keyword">ONLINE</span>;</div><div class="line"></div><div class="line"><span class="comment">--3.4 改变数据文件的名称和位置</span></div><div class="line"><span class="comment">--同一个表空间下</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">OFFLINE</span>;</div><div class="line">HOST COPY D:\3_database\oracle\oradata\humansource\USERS02.DBF</div><div class="line">  D:\3_database\oracle\oradata\USERS02.DBF;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">RENAME</span> <span class="keyword">DATAFILE</span></div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\humansource\USERS02.DBF'</span> </div><div class="line">  <span class="keyword">TO</span> <span class="string">'D:\3_database\oracle\oradata\USERS02.DBF'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLESPACE</span> <span class="keyword">USERS</span> <span class="keyword">ONLINE</span>;</div><div class="line"></div><div class="line"><span class="comment">--改变属于多个表空间的数据文件的名称或位置</span></div><div class="line"><span class="comment">--将 USERS 表空间中的 USERS01.DBF 文件和 UNDOTBS1 表空间中的 UNDOTBS01.DBF 文件移动到 D:\3_database\oracle\oradata 目录中</span></div><div class="line">SHUTDOWN IMMEDIATE;</div><div class="line">HOST COPY D:\3_database\oracle\oradata\humansource\USERS01.DBF</div><div class="line">  D:\3_database\oracle\oradata\USERS01.DBF;</div><div class="line">HOST COPY D:\3_database\oracle\oradata\humansource\UNDOTBS01.DBF</div><div class="line">  D:\3_database\oracle\oradata\UNDOTBS01.DBF;</div><div class="line">STARTUP MOUNT;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">RENAME</span> <span class="keyword">FILE</span></div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\humansource\USERS01.DBF'</span>,</div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\humansource\UNDOTBS01.DBF'</span> </div><div class="line">  <span class="keyword">TO</span> <span class="string">'D:\3_database\oracle\oradata\USERS01.DBF'</span>,</div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\UNDOTBS01.DBF'</span>;</div><div class="line">RECOVER DATAFILE 'D:\3_database\oracle\oradata\UNDOTBS01.DBF';</div><div class="line">RECOVER DATAFILE 'D:\3_database\oracle\oradata\USERS01.DBF';</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">OPEN</span>;</div><div class="line"></div><div class="line"><span class="comment">--4.5 查询数据文件信息</span></div><div class="line"><span class="keyword">SELECT</span> TABLESPACE_NAME,FILE_NAME <span class="keyword">FROM</span> DBA_DATA_FILES;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$<span class="keyword">DATAFILE</span>;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DBA_TEMP_FILES;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$TEMPFILE;</div></pre></td></tr></table></figure><p>数据文件的设置与管理主要包括：</p><ol><li>数据文件的创建、设置文件的大小以及可用性。这些都和表空间的设置差不多。</li><li>改变数据文件的位置和名称<br>如果改变同一个表空间下的数据文件：依次表空间 <strong>OFFLINE</strong>、物理的 <strong>COPY</strong>、<strong>RENAME</strong>、<strong>ONLINE</strong> 即可。<br>如果改变不同表空间的数据文件,需要关闭数据库，然后将数据库启动到加载状态。<br>即依次：<strong>SHUTDOWN</strong>、物理<strong>COPY</strong>、<strong>STARTUP</strong> <strong>MOUNT</strong>、<strong>RENAME</strong>、<strong>RECOVER</strong>、<strong>OPEN</strong></li></ol><h3 id="控制文件的设置与管理"><a href="#控制文件的设置与管理" class="headerlink" title="控制文件的设置与管理"></a>控制文件的设置与管理</h3><h4 id="创建控制文件和恢复数据库"><a href="#创建控制文件和恢复数据库" class="headerlink" title="创建控制文件和恢复数据库"></a>创建控制文件和恢复数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--1. 查询数据库中的重做日志文件和数据文件，方便控制文件的创建</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">MEMBER</span> <span class="keyword">FROM</span> V$<span class="keyword">LOGFILE</span>;</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span> <span class="keyword">FROM</span> V$<span class="keyword">DATAFILE</span>;</div><div class="line"></div><div class="line"><span class="comment">--2. 关闭数据库、进入 NOMOUNT 状态</span></div><div class="line">SHUTDOWN NORMAL;</div><div class="line"><span class="comment">--备份所有数据文件和重做日志文件</span></div><div class="line">STARTUP NOMOUNT;</div><div class="line"></div><div class="line"><span class="comment">--3.1 创建控制文件（NORESETLOGS 方式）</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">REUSE</span> <span class="keyword">DATABASE</span> <span class="string">"HUMANSOU"</span> <span class="keyword">NORESETLOGS</span> <span class="keyword">ARCHIVELOG</span> </div><div class="line">    <span class="keyword">MAXLOGFILES</span> <span class="number">16</span> </div><div class="line">    <span class="keyword">MAXLOGMEMBERS</span> <span class="number">3</span> </div><div class="line">    MAXDATAFILES <span class="number">100</span> </div><div class="line">    <span class="keyword">MAXINSTANCES</span> <span class="number">8</span> </div><div class="line">    <span class="keyword">MAXLOGHISTORY</span> <span class="number">292</span></div><div class="line"><span class="keyword">LOGFILE</span></div><div class="line">    <span class="keyword">GROUP</span> <span class="number">1</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO01.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M,</div><div class="line">    <span class="keyword">GROUP</span> <span class="number">2</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO02.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M,</div><div class="line">    <span class="keyword">GROUP</span> <span class="number">3</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO03.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M </div><div class="line"><span class="keyword">DATAFILE</span> </div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\SYSTEM01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\SYSAUX01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\UNDOTBS01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\USERS01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\EXAMPLE01.DBF'</span></div><div class="line"><span class="built_in">CHARACTER</span> <span class="keyword">SET</span> ZHS16GBK;</div><div class="line"></div><div class="line"><span class="comment">--4. 恢复和启动数据库</span></div><div class="line">RECOVER DATABASE;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">OPEN</span>;</div><div class="line"></div><div class="line"><span class="comment">--3.2 创建控制文件（RESETLOGS 方式） </span></div><div class="line"><span class="comment">--关闭数据库</span></div><div class="line">SHUTDOWN NORMAL;</div><div class="line">STARTUP NOMOUNT;</div><div class="line"></div><div class="line"><span class="comment">--创建控制文件</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">REUSE</span> <span class="keyword">DATABASE</span> <span class="string">"HUMANSOU"</span> <span class="keyword">RESETLOGS</span> <span class="keyword">ARCHIVELOG</span> </div><div class="line">    <span class="keyword">MAXLOGFILES</span> <span class="number">16</span> </div><div class="line">    <span class="keyword">MAXLOGMEMBERS</span> <span class="number">3</span> </div><div class="line">    MAXDATAFILES <span class="number">100</span> </div><div class="line">    <span class="keyword">MAXINSTANCES</span> <span class="number">8</span> </div><div class="line">    <span class="keyword">MAXLOGHISTORY</span> <span class="number">292</span></div><div class="line"><span class="keyword">LOGFILE</span></div><div class="line">    <span class="keyword">GROUP</span> <span class="number">1</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO01.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M,</div><div class="line">    <span class="keyword">GROUP</span> <span class="number">2</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO02.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M,</div><div class="line">    <span class="keyword">GROUP</span> <span class="number">3</span> <span class="string">'D:\3_database\oracle\oradata\humansource\REDO03.LOG'</span> <span class="keyword">SIZE</span> <span class="number">50</span>M </div><div class="line"><span class="keyword">DATAFILE</span> </div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\SYSTEM01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\SYSAUX01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\UNDOTBS01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\USERS01.DBF'</span>,</div><div class="line">    <span class="string">'D:\3_database\oracle\oradata\humansource\EXAMPLE01.DBF'</span></div><div class="line"><span class="built_in">CHARACTER</span> <span class="keyword">SET</span> ZHS16GBK;</div><div class="line"></div><div class="line"><span class="comment">--恢复（利用重做日志文件恢复）并启动数据库</span></div><div class="line">RECOVER DATABASE USING <span class="keyword">BACKUP</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">UNTIL</span> <span class="keyword">CANCEL</span>;</div><div class="line">D:\3_database\oracle\oradata\humansource\REDO03.LOG</div><div class="line">RECOVER DATABASE USING <span class="keyword">BACKUP</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">UNTIL</span> <span class="keyword">CANCEL</span>;</div><div class="line">D:\3_database\oracle\oradata\humansource\REDO02.LOG</div><div class="line">RECOVER DATABASE USING <span class="keyword">BACKUP</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">UNTIL</span> <span class="keyword">CANCEL</span>;</div><div class="line">D:\3_database\oracle\oradata\humansource\REDO01.LOG</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">OPEN</span> <span class="keyword">RESETLOGS</span>;</div></pre></td></tr></table></figure><h4 id="控制文件的备份、删除以及查询"><a href="#控制文件的备份、删除以及查询" class="headerlink" title="控制文件的备份、删除以及查询"></a>控制文件的备份、删除以及查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--1. 备份新建的控制文件</span></div><div class="line"><span class="comment">--二进制文件形式备份</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">BACKUP</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">TO</span></div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\FILEBACKUP\CONTROL.BKP'</span>;</div><div class="line"> </div><div class="line"> <span class="comment">--跟踪文件形式备份</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">BACKUP</span> <span class="keyword">CONTROLFILE</span> <span class="keyword">TO</span> <span class="keyword">TRACE</span>;</div><div class="line"><span class="comment">--然后通过查询跟踪文件的脚本可以查询到相关的详细信息</span></div><div class="line"><span class="keyword">SELECT</span> a.VALUE||b.symbol||c.instance_name||<span class="string">'_ora_'</span>||d.spid||<span class="string">'.trc'</span> TRACE_FILE_NAME</div><div class="line">    <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="keyword">VALUE</span> <span class="keyword">FROM</span> v$parameter <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'user_dump_dest'</span>) a,</div><div class="line">         (<span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="keyword">VALUE</span>,<span class="number">-6</span>,<span class="number">1</span>) symbol <span class="keyword">FROM</span> v$parameter <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'user_dump_dest'</span>) b,</div><div class="line">         (<span class="keyword">SELECT</span> instance_name <span class="keyword">FROM</span> v$<span class="keyword">instance</span>) c,</div><div class="line">         (<span class="keyword">SELECT</span> spid <span class="keyword">FROM</span> v$<span class="keyword">session</span> s,v$process p,v$mystat m</div><div class="line">          <span class="keyword">WHERE</span> s.paddr=p.addr <span class="keyword">AND</span> s.SID=m.SID <span class="keyword">AND</span> m.statistic#=<span class="number">0</span>) d</div><div class="line"></div><div class="line"><span class="comment">--2. 删除控制文件</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> CONTROL_FILES=</div><div class="line">  <span class="string">'D:\3_database\oracle\oradata\humansource\CONTROL01.CTL'</span>,</div><div class="line">  <span class="string">'D:\3_database\oracle\flash_recovery_area\humansource\CONTROL02.CTL'</span></div><div class="line">  <span class="keyword">SCOPE</span>=<span class="keyword">SPFILE</span>;</div><div class="line">SHUTDOWN IMMEDIATE;</div><div class="line">HOST DEL D:\3_database\oracle\oradata\humansource\CONTROL03.CTL</div><div class="line">STARTUP;</div><div class="line"></div><div class="line"><span class="comment">--3. 查询控制文件信息</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span> <span class="keyword">FROM</span> V$<span class="keyword">CONTROLFILE</span>;</div></pre></td></tr></table></figure><h3 id="重做日志文件的设置与管理"><a href="#重做日志文件的设置与管理" class="headerlink" title="重做日志文件的设置与管理"></a>重做日志文件的设置与管理</h3><h4 id="重做日志文件的创建、切换和删除"><a href="#重做日志文件的创建、切换和删除" class="headerlink" title="重做日志文件的创建、切换和删除"></a>重做日志文件的创建、切换和删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--1.创建重做日志文件组及其成员</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">ADD</span> <span class="keyword">LOGFILE</span> <span class="keyword">GROUP</span> <span class="number">4</span> </div><div class="line">    (<span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO04A.LOG'</span>,</div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO04B.LOG'</span>) <span class="keyword">SIZE</span> <span class="number">10</span>M;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">ADD</span> <span class="keyword">LOGFILE</span> <span class="keyword">MEMBER</span> </div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO01B.LOG'</span> <span class="keyword">TO</span> <span class="keyword">GROUP</span> <span class="number">1</span>,</div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO02B.LOG'</span> <span class="keyword">TO</span> <span class="keyword">GROUP</span> <span class="number">2</span>,</div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO03B.LOG'</span> <span class="keyword">TO</span> <span class="keyword">GROUP</span> <span class="number">3</span>;</div><div class="line">    </div><div class="line"><span class="comment">--2.重做日志文件切换</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SWITCH</span> <span class="keyword">LOGFILE</span>;</div><div class="line"></div><div class="line"><span class="comment">--3.删除重做日志文件组及其成员</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DROP</span> <span class="keyword">LOGFILE</span> <span class="keyword">MEMBER</span> <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO04B.LOG'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DROP</span> <span class="keyword">LOGFILE</span> <span class="keyword">GROUP</span> <span class="number">4</span>;</div></pre></td></tr></table></figure><p>注意：<br>只能删除 INACTIVE、UNUSED 状态下的日志文件。<br>删除指的是改变控制文件，并没有真正的从磁盘上删除这个重做日志文件。</p><h4 id="修改重做日志文件的名称或位置、查询"><a href="#修改重做日志文件的名称或位置、查询" class="headerlink" title="修改重做日志文件的名称或位置、查询"></a>修改重做日志文件的名称或位置、查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--4.修改重做日志文件的名称或位置(INACTIVE状态的日志)</span></div><div class="line">HOST MOVE D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO01B.LOG</div><div class="line">  D:\3_DATABASE\ORACLE\ORADATA\REDO01B.LOG;</div><div class="line">HOST MOVE D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO03B.LOG</div><div class="line">  D:\3_DATABASE\ORACLE\ORADATA\REDO03B.LOG;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">RENAME</span> <span class="keyword">FILE</span> </div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO01B.LOG'</span>,</div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\HUMANSOURCE\REDO03B.LOG'</span> </div><div class="line">    <span class="keyword">TO</span> </div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\REDO01B.LOG'</span>,</div><div class="line">    <span class="string">'D:\3_DATABASE\ORACLE\ORADATA\REDO03B.LOG'</span>;</div><div class="line">    </div><div class="line"><span class="comment">--5.查询重做日志文件信息</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">GROUP</span>#,<span class="keyword">SEQUENCE</span>#,MEMBERS,<span class="keyword">ARCHIVED</span>,<span class="keyword">STATUS</span> <span class="keyword">FROM</span> V$<span class="keyword">LOG</span>;</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">GROUP</span>#,<span class="keyword">STATUS</span>,<span class="keyword">MEMBER</span> <span class="keyword">FROM</span> V$<span class="keyword">LOGFILE</span>;</div></pre></td></tr></table></figure><h3 id="归档日志文件的设置与管理"><a href="#归档日志文件的设置与管理" class="headerlink" title="归档日志文件的设置与管理"></a>归档日志文件的设置与管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--1.数据库归档模式的设置</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,<span class="keyword">VALUE</span> <span class="keyword">FROM</span> V$PARAMETER <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'db_recovery_file_dest'</span>;</div><div class="line">SHUTDOWN IMMEDIATE;</div><div class="line">STARTUP MOUNT;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">NOARCHIVELOG</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">ARCHIVELOG</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">OPEN</span>;</div><div class="line"></div><div class="line"><span class="comment">--2.归档目标设置</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> db_recovery_file_dest=<span class="string">''</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LOG_ARCHIVE_DEST=<span class="string">'D:\3_database\oracle\oradata\FILEBACKUP\ARCHIVE'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LOG_ARCHIVE_DUPLEX_DEST=<span class="string">'D:\3_database\oracle\oradata\FILEBACKUP\ARCHIVE'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LOG_ARCHIVE_DEST_1=<span class="string">'D:\3_database\oracle\oradata\FILEBACKUP\ARCHIVE MANDAROTY'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LOG_ARCHIVE_DEST_2=<span class="string">'D:\3_database\oracle\oradata\FILEBACKUP\ARCHIVE MANDAROTY'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LOG_ARCHIVE_DEST_5=<span class="string">'SERVICE=STANDBY1'</span>;</div><div class="line"></div><div class="line"><span class="comment">--3.查询归档信息</span></div><div class="line">ARCHIVE LOG LIST;</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">SEQUENCE</span>#,FIRST_CHANGE#,NEXT_CHANGE# <span class="keyword">FROM</span> V$ARCHIVED_LOG;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$<span class="keyword">DATABASE</span>;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$ARCHIVE_DEST;</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V$ARCHIVE_PROCESSES;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Oracle-11g-的安装&quot;&gt;&lt;a href=&quot;#Oracle-11g-的安装&quot; class=&quot;headerlink&quot; title=&quot;Oracle 11g 的安装&quot;&gt;&lt;/a&gt;Oracle 11g 的安装&lt;/h2&gt;&lt;h3 id=&quot;下载地址：&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Linux 基础</title>
    <link href="http://yoursite.com/2018-03-25-201803/2018-03-25_Linux%20%E5%9F%BA%E7%A1%80.html"/>
    <id>http://yoursite.com/2018-03-25-201803/2018-03-25_Linux 基础.html</id>
    <published>2018-03-24T16:00:00.000Z</published>
    <updated>2020-02-22T15:11:00.235Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 最初源自 UNIX，后来有了 MINIX 再后来 linus 想把 minux 移植到 PC，牵头开发 Linux，这次有了现在的 Linux。redhat (红帽子公司)， s.u.s.e，红旗 Linux（国产）都是对 Linux 的包装。<br><a id="more"></a></p><h2 id="Linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h2><p>linux 的文件系统是采用层级式的树状目录结构<br>/：根目录<br>  root：存放 root 用户的相关文件<br>  home：存放普通用户的相关文件<br>  bin：存放常用命令的目录<br>  sbin：存放要具有一定权限才可以使用的命令的目录<br>  mnt：默认挂载光驱和软驱的目录<br>  boot：存放引导文件的目录<br>  etc：存放配置相关文件<br>  var：存放经常变化的文件的目录<br>  usr：默认安装文件的文件夹</p><p>白颜色为普通文件<br>蓝颜色为文件夹<br>绿颜色为可执行文件</p><h2 id="使用-vi-编辑器"><a href="#使用-vi-编辑器" class="headerlink" title="使用 vi 编辑器"></a>使用 vi 编辑器</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ol><li>vi Hello.java<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">    System.out.println(<span class="string">"HELLO WORLD"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><ol><li>输入i 【进入插入模式】</li><li>输入esc键【进入到命令模式】</li><li>输入: [wq表示退出保存 q!退出不保存]。即输入 :wq 或者 :q!</li><li>ls 当前目录所有文件 ls -l</li><li>编译 javac Hello.java</li><li>运行 java Hello</li></ol><h3 id="查找内容"><a href="#查找内容" class="headerlink" title="查找内容"></a>查找内容</h3><p>按下“/”键，这时在状态栏（也就是屏幕左下脚）就出现了 “/” 然后输入你要查找的关键字敲回车就可以了。</p><p>找到相关文字以后：<br>（1）按下小写n，向下查找<br>（2）按下大写N，向上查找</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>最高权限用户：root<br>进入图形页面：startx<br>关闭图形界面：init 3<br>shutdown -h now 立即关机<br>shutdown -r now 立即重启<br>reboot          立即重启<br>logout  用户注销</p><p>init[0123456]<br>0：关机<br>1：单用户<br>2：多用户无网络状态<br>3：多用户有网络状态<br>4：系统未使用保留给用户<br>5：图形界面<br>6：重启系统<br>常用的运行级别是3和5，要修改默认运行的级别可修改文件 /etc/inittab的id:5:imitdefault: 这一行中的数字</p><p>找回密码的方法：<br>在进入 grub 引导界面时，输入 e,修改为 1，进入单用户模式。<br>该方法可以找回密码，因为单用户进入是，无需输入密码，并且进去之后还可以修改密码。</p><p>pwd 显示当前工作目录<br>cd  改变目录<br>ls  列出文件和目录<br>ls -l<br>ls -a</p><p>mkdir 建立目录<br>rmdir 删除目录</p><p>touch 建立空文件<br>cp    复制命令<br>cp -r dir1 dir2 递归复制命令（复制了目录信息）</p><p>mv    移动文件和改文件名<br>rm    删除文件和目录<br>rm -rf * 删除所有内容（包括目录和文件）r 递归 f 强制</p><p>ln    建立符号连接<br>ln -s 源 目标<br>ln -s /etc/inittab inittab [inittab指向实际文件/etc/inittab]</p><p>more 显示文件内容，带分页<br>less 显示文件内容带分页<br>grep 在文本中查询内容[grep -n “shunping” aaa.java]<br>|    管道命令[把上一个命令的结果交给 | 的后面的命令处理]<br>man 相当于 help 命令</p><p>find / -name aaa.java 从根目录按照文件名称查找 aaa.java 文件</p><p>ls -l &gt; a.txt 列表的内容写入文件a.txt中（覆盖写）<br>ls -al &gt;&gt; aa.txt 列表内容追加到文件aa.txt的末尾<br>database_program &lt; database_data 从文件中输入信息</p><h2 id="用户和组"><a href="#用户和组" class="headerlink" title="用户和组"></a>用户和组</h2><p>添加组<br>groupadd policeman<br>cat /etc/group | more<br>groupadd tufei</p><p>创建用户，并指定组名<br>useradd -g policeman along<br>useradd -g policeman panpan<br>useradd -g tufei ashuai</p><p>cat /etc/passwd<br>ashuai:x:502:501::/home/ashuai:/bin/bash<br>用户名：密码：用户ID：用户所在组ID:注释：用户的主目录：用户使用的sshell解析器</p><p>-rw-r–r–<br>-：文件类型（-：文件，d：目录，l:连接）<br>rw-：文件的所有者对该文件的权限，r可读（4），w可写（4），可执行（1）<br>r–：文件所在组对该文件的权限<br>r–：其他组的用户对该文件的权限</p><p>修改文件访问权限<br>chmod 777 along</p><p>修改用户所在组<br>usemod -g policeman ashuai</p><p>chown 修改文件的所有组</p><p>df /hpme :挂载目录。sda3：a 表示第一个，3表示第三块分区<br>linux 命令、编辑器和shell编程</p><p>shell介绍（相当于编译器也和 Windows 的 bat 文件类似）<br>Bourne /bin/sh<br>C      /bin/csh<br>Kom    /bin/ksh<br>ls -l /bin/*sh  查看所有 shell<br>env 显示当前操作系统的环境变量<br>chsh -s /bin/csh</p><p>命令补全功能：tab 键</p><p>history 5 # 最近执行的5条命令<br>!5 执行编号为5的命令</p><h2 id="RPM（RedHat-Package-Manager）管理"><a href="#RPM（RedHat-Package-Manager）管理" class="headerlink" title="RPM（RedHat Package Manager）管理"></a>RPM（RedHat Package Manager）管理</h2><p>apache-1.3.23-11.i386.rpm<br>软件名称 软件的版本号 软件所运行的平台<br>rpm -qa<br>rpm -q mysql<br>rpm -ivh RPM包全路径<br>rpm -e jdk<br>rpm -u RMP包全路径</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 最初源自 UNIX，后来有了 MINIX 再后来 linus 想把 minux 移植到 PC，牵头开发 Linux，这次有了现在的 Linux。redhat (红帽子公司)， s.u.s.e，红旗 Linux（国产）都是对 Linux 的包装。&lt;br&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用 jsch-0.1.54 实现 SFTP 的上传和下载</title>
    <link href="http://yoursite.com/2018-03-05-201803/2018-03-05_%E4%BD%BF%E7%94%A8%20jsch-0.1.54%20%E5%AE%9E%E7%8E%B0%20SFTP%20%E7%9A%84%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD.html"/>
    <id>http://yoursite.com/2018-03-05-201803/2018-03-05_使用 jsch-0.1.54 实现 SFTP 的上传和下载.html</id>
    <published>2018-03-04T16:00:00.000Z</published>
    <updated>2020-02-22T15:11:10.552Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="使用-freeSSHd-在-Windows-下搭建-SFTP-服务器"><a href="#使用-freeSSHd-在-Windows-下搭建-SFTP-服务器" class="headerlink" title="使用 freeSSHd 在 Windows 下搭建 SFTP 服务器"></a>使用 freeSSHd 在 Windows 下搭建 SFTP 服务器</h2><p>下载 freeSSHd: <a href="http://www.freesshd.com/?ctt=download" target="_blank" rel="external">http://www.freesshd.com/?ctt=download</a> 下载 freeSSHd.exe 即可。</p><p>设置 freeSSHd 关键点：<br>Users: AUthorization 选择 Password stored as SHA1 hash<br>SSH: 22 端口为默认端口，为防止端口占用，尽量改下端口<br>Authentication: Password authentication 选中 Required</p><p>如果经过以上设置后，在Server status页签还是启动不了 SSH Server，尝试以管理员身份运行 freeSSHd。再不行尝试重装 freeSSHd 试试，我就是重装好的。一开始怎么设置都不行。</p><h2 id="在-linux-下搭建-SFTP-服务器"><a href="#在-linux-下搭建-SFTP-服务器" class="headerlink" title="在 linux 下搭建 SFTP 服务器"></a>在 linux 下搭建 SFTP 服务器</h2><pre><code>ssh -V   查看openssh的版本,版本低于3.8需要升级groupadd sftp 创建sftp组#创建一个sftp组的用户，用户名为mysftp，密码为mysftpuseradd -g sftp -s /bin/false mysftppasswd mysftp#sftp组的用户的跟目录统一指定到/data/sftp下（就是说sftp组的用户只能访问/data/sftp目录，进一步mysftp用户只能访问/data/sftp/mysftp目录），这里先新建一个mysftp目录，然后指定mysftp的根目录为/data/sftp/mysftpmkdir -p /data/sftp/mysftpusermod -d /data/sftp/mysftp mysftp#配置sshd_configvi /etc/ssh/sshd_config# Subsystem      sftp    /usr/libexec/openssh/sftp-serverSubsystem       sftp    internal-sftpMatch Group sftpChrootDirectory /data/sftp/%uForceCommand    internal-sftpAllowTcpForwarding noX11Forwarding no#建立SFTP用户登入后可写入的目录mkdir /data/sftp/mysftp/uploadchown mysftp:sftp /data/sftp/mysftp/uploadchmod 755 /data/sftp/mysftp/upload#修改/etc/selinux/configvi /etc/selinux/configSELINUX=disabledsetenforce 0#显示 sftp&gt; 则sftp搭建成功service sshd restartsftp mysftp@127.0.0.1#使用FileZilla FTP Client 或 WinSCP 连接SFTP服务器</code></pre><h2 id="使用-jsch-0-1-54-实现-SFTP-的上传和下载"><a href="#使用-jsch-0-1-54-实现-SFTP-的上传和下载" class="headerlink" title="使用 jsch-0.1.54 实现 SFTP 的上传和下载"></a>使用 jsch-0.1.54 实现 SFTP 的上传和下载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> sftp;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.Iterator;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"><span class="keyword">import</span> java.util.Vector;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.logging.Log;</div><div class="line"><span class="keyword">import</span> org.apache.commons.logging.LogFactory;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.Channel;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.ChannelSftp;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.ChannelSftp.LsEntry;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.JSch;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.Session;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.SftpATTRS;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.SftpException;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * jsch-0.1.54实现sftp上传下载</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> lixianfu</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2018-03-01</span></div><div class="line"><span class="comment"> * <span class="doctag">@time</span> 下午1:39:44</span></div><div class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SFTPUtils</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Log LOG = LogFactory.getLog(SFTPUtils.class);</div><div class="line"></div><div class="line">  <span class="keyword">private</span> String host;<span class="comment">//服务器连接ip</span></div><div class="line">  <span class="keyword">private</span> String username;<span class="comment">//用户名</span></div><div class="line">  <span class="keyword">private</span> String password;<span class="comment">//密码</span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">int</span> port = <span class="number">22</span>;<span class="comment">//端口号</span></div><div class="line">  <span class="keyword">private</span> ChannelSftp sftp = <span class="keyword">null</span>;</div><div class="line">  <span class="keyword">private</span> Session sshSession = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SFTPUtils</span><span class="params">()</span></span>&#123;&#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SFTPUtils</span><span class="params">(String host, <span class="keyword">int</span> port, String username, String password)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.host = host;</div><div class="line">    <span class="keyword">this</span>.username = username;</div><div class="line">    <span class="keyword">this</span>.password = password;</div><div class="line">    <span class="keyword">this</span>.port = port;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SFTPUtils</span><span class="params">(String host, String username, String password)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.host = host;</div><div class="line">    <span class="keyword">this</span>.username = username;</div><div class="line">    <span class="keyword">this</span>.password = password;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 通过SFTP连接服务器</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> ChannelSftp <span class="title">connect</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      JSch jsch = <span class="keyword">new</span> JSch();</div><div class="line">      jsch.getSession(username, host, port);</div><div class="line">      sshSession = jsch.getSession(username, host, port);</div><div class="line">      LOG.info(<span class="string">"Session created."</span>);</div><div class="line">      sshSession.setPassword(password);</div><div class="line">      Properties sshConfig = <span class="keyword">new</span> Properties();</div><div class="line">      sshConfig.put(<span class="string">"StrictHostKeyChecking"</span>, <span class="string">"no"</span>);</div><div class="line">      sshSession.setConfig(sshConfig);</div><div class="line">      sshSession.connect();</div><div class="line">      LOG.info(<span class="string">"Session connected."</span>);</div><div class="line">      Channel channel = sshSession.openChannel(<span class="string">"sftp"</span>);</div><div class="line">      channel.connect();</div><div class="line">      LOG.info(<span class="string">"Opening Channel."</span>);</div><div class="line">      sftp = (ChannelSftp) channel;</div><div class="line">      LOG.info(<span class="string">"Connected to "</span> + host + <span class="string">"."</span>);</div><div class="line">      <span class="keyword">return</span> sftp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"连接SFTP【"</span> + host + <span class="string">"】错误："</span>, e);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 关闭连接</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disconnect</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.sftp != <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.sftp.isConnected())</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">this</span>.sftp.disconnect();</div><div class="line">        LOG.info(<span class="string">"sftp is closed already"</span>);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.sshSession != <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.sshSession.isConnected())</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">this</span>.sshSession.disconnect();</div><div class="line">        LOG.info(<span class="string">"sshSession is closed already"</span>);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">catch</span>(Exception e)</div><div class="line">&#123;</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"断开SFTP【"</span> + host + <span class="string">"】错误："</span>, e);</div><div class="line">&#125;</div><div class="line"></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 批量下载文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remotPath：远程下载目录(以路径符号结束,可以为相对路径eg:/assess/sftp/jiesuan_2/2014/)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localPath：本地保存目录(以路径符号结束,D:\Duansha\sftp\)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> fileFormat：下载文件格式(以特定字符开头,为空不做检验)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> fileEndFormat：下载文件格式(文件格式)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> del：下载后是否删除sftp文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">batchDownLoadFile</span><span class="params">(String remotePath, String localPath,</span></span></div><div class="line"><span class="function"><span class="params">      String fileFormat, String fileEndFormat, <span class="keyword">boolean</span> del)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    List&lt;String&gt; filenames = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      Vector v = listFiles(remotePath);</div><div class="line">      <span class="keyword">if</span> (v.size() &gt; <span class="number">0</span>)</div><div class="line">      &#123;</div><div class="line">        Iterator it = v.iterator();</div><div class="line">        <span class="keyword">while</span> (it.hasNext())</div><div class="line">        &#123;</div><div class="line">          LsEntry entry = (LsEntry) it.next();</div><div class="line">          String filename = entry.getFilename();</div><div class="line">          SftpATTRS attrs = entry.getAttrs();</div><div class="line">          <span class="keyword">if</span> (!attrs.isDir())</div><div class="line">          &#123;</div><div class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">            String localFileName = localPath + filename;</div><div class="line">            fileFormat = fileFormat == <span class="keyword">null</span> ? <span class="string">""</span> : fileFormat</div><div class="line">                .trim();</div><div class="line">            fileEndFormat = fileEndFormat == <span class="keyword">null</span> ? <span class="string">""</span></div><div class="line">                : fileEndFormat.trim();</div><div class="line">            <span class="comment">// 三种情况</span></div><div class="line">            <span class="keyword">if</span> (fileFormat.length() &gt; <span class="number">0</span> &amp;&amp; fileEndFormat.length() &gt; <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">              <span class="keyword">if</span> (filename.startsWith(fileFormat) &amp;&amp; filename.endsWith(fileEndFormat))</div><div class="line">              &#123;</div><div class="line">                flag = downloadFile(remotePath, filename,localPath, filename);</div><div class="line">                <span class="keyword">if</span> (flag)</div><div class="line">                &#123;</div><div class="line">                  filenames.add(localFileName);</div><div class="line">                  <span class="keyword">if</span> (flag &amp;&amp; del)</div><div class="line">                  &#123;</div><div class="line">                    deleteSFTP(remotePath, filename);</div><div class="line">                  &#125;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (fileFormat.length() &gt; <span class="number">0</span> &amp;&amp; <span class="string">""</span>.equals(fileEndFormat))</div><div class="line">            &#123;</div><div class="line">              <span class="keyword">if</span> (filename.startsWith(fileFormat))</div><div class="line">              &#123;</div><div class="line">                flag = downloadFile(remotePath, filename, localPath, filename);</div><div class="line">                <span class="keyword">if</span> (flag)</div><div class="line">                &#123;</div><div class="line">                  filenames.add(localFileName);</div><div class="line">                  <span class="keyword">if</span> (flag &amp;&amp; del)</div><div class="line">                  &#123;</div><div class="line">                    deleteSFTP(remotePath, filename);</div><div class="line">                  &#125;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (fileEndFormat.length() &gt; <span class="number">0</span> &amp;&amp; <span class="string">""</span>.equals(fileFormat))</div><div class="line">            &#123;</div><div class="line">              <span class="keyword">if</span> (filename.endsWith(fileEndFormat))</div><div class="line">              &#123;</div><div class="line">                flag = downloadFile(remotePath, filename,localPath, filename);</div><div class="line">                <span class="keyword">if</span> (flag)</div><div class="line">                &#123;</div><div class="line">                  filenames.add(localFileName);</div><div class="line">                  <span class="keyword">if</span> (flag &amp;&amp; del)</div><div class="line">                  &#123;</div><div class="line">                    deleteSFTP(remotePath, filename);</div><div class="line">                  &#125;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">              flag = downloadFile(remotePath, filename,localPath, filename);</div><div class="line">              <span class="keyword">if</span> (flag)</div><div class="line">              &#123;</div><div class="line">                filenames.add(localFileName);</div><div class="line">                <span class="keyword">if</span> (flag &amp;&amp; del)</div><div class="line">                &#123;</div><div class="line">                  deleteSFTP(remotePath, filename);</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span>(attrs.isDir() &amp;&amp; !filename.startsWith(<span class="string">"."</span>))</div><div class="line">          &#123;</div><div class="line">          String tempRemotePath = remotePath + filename + <span class="string">"/"</span>;</div><div class="line">          batchDownLoadFile(tempRemotePath, localPath, fileFormat, fileEndFormat, del);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (SftpException e)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"批量下载文件错误："</span>, e);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> filenames;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 下载单个文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remotPath：远程下载目录(以路径符号结束)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remoteFileName：下载文件名</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localPath：本地保存目录(以路径符号结束)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localFileName：保存文件名</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">downloadFile</span><span class="params">(String remotePath, String remoteFileName,String localPath, String localFileName)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    FileOutputStream fieloutput = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      File file = <span class="keyword">new</span> File(localPath + localFileName);</div><div class="line">      fieloutput = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">      sftp.get(remotePath + remoteFileName, fieloutput);</div><div class="line">      LOG.info(<span class="string">"===DownloadFile:"</span> + remoteFileName + <span class="string">" success from sftp."</span>);</div><div class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"下载文件错误："</span>, e);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">finally</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> != fieloutput)</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">try</span></div><div class="line">        &#123;</div><div class="line">          fieloutput.close();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (IOException e)</div><div class="line">        &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 上传单个文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remotePath：远程保存目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remoteFileName：保存文件名</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localPath：本地上传目录(以路径符号结束)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localFileName：上传的文件名</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">uploadFile</span><span class="params">(String remotePath, String remoteFileName,String localPath, String localFileName)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    FileInputStream in = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      createDir(remotePath);</div><div class="line">      File file = <span class="keyword">new</span> File(localPath + localFileName);</div><div class="line">      in = <span class="keyword">new</span> FileInputStream(file);</div><div class="line">      sftp.put(in, remoteFileName);</div><div class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (FileNotFoundException e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (SftpException e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">finally</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (in != <span class="keyword">null</span>)</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">try</span></div><div class="line">        &#123;</div><div class="line">          in.close();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (IOException e)</div><div class="line">        &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 批量上传文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> remotePath：远程保存目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> localPath：本地上传目录(以路径符号结束)</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> del：上传后是否删除本地文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">bacthUploadFile</span><span class="params">(String remotePath, String localPath,</span></span></div><div class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> del)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line"><span class="comment">//      connect();</span></div><div class="line">      File file = <span class="keyword">new</span> File(localPath);</div><div class="line">      File[] files = file.listFiles();</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.length; i++)</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">if</span> (files[i].isFile()</div><div class="line">            &amp;&amp; files[i].getName().indexOf(<span class="string">"bak"</span>) == -<span class="number">1</span>)</div><div class="line">        &#123;</div><div class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.uploadFile(remotePath, files[i].getName(),</div><div class="line">              localPath, files[i].getName())</div><div class="line">              &amp;&amp; del)</div><div class="line">          &#123;</div><div class="line">            deleteFile(localPath + files[i].getName());</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">     LOG.info(<span class="string">"upload file is success:remotePath="</span> + remotePath</div><div class="line">        + <span class="string">"and localPath="</span> + localPath + <span class="string">",file size is "</span></div><div class="line">        + files.length);</div><div class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">finally</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">this</span>.disconnect();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 删除本地文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> filePath</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteFile</span><span class="params">(String filePath)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    File file = <span class="keyword">new</span> File(filePath);</div><div class="line">    <span class="keyword">if</span> (!file.exists())</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!file.isFile())</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">boolean</span> rs = file.delete();</div><div class="line">    LOG.info(<span class="string">"delete file success from local."</span>);</div><div class="line">    <span class="keyword">return</span> rs;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 创建目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> createpath</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">createDir</span><span class="params">(String createpath)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (isDirExist(createpath))</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">this</span>.sftp.cd(createpath);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">      &#125;</div><div class="line">      String pathArry[] = createpath.split(<span class="string">"/"</span>);</div><div class="line">      StringBuffer filePath = <span class="keyword">new</span> StringBuffer(<span class="string">"/"</span>);</div><div class="line">      <span class="keyword">for</span> (String path : pathArry)</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">if</span> (path.equals(<span class="string">""</span>))</div><div class="line">        &#123;</div><div class="line">          <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        filePath.append(path + <span class="string">"/"</span>);</div><div class="line">        <span class="keyword">if</span> (isDirExist(filePath.toString()))</div><div class="line">        &#123;</div><div class="line">          sftp.cd(filePath.toString());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">          <span class="comment">// 建立目录</span></div><div class="line">          sftp.mkdir(filePath.toString());</div><div class="line">          <span class="comment">// 进入并设置为当前目录</span></div><div class="line">          sftp.cd(filePath.toString());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">      &#125;</div><div class="line">      <span class="keyword">this</span>.sftp.cd(createpath);</div><div class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (SftpException e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 判断目录是否存在</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> directory</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDirExist</span><span class="params">(String directory)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> isDirExistFlag = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      SftpATTRS sftpATTRS = sftp.lstat(directory);</div><div class="line">      isDirExistFlag = <span class="keyword">true</span>;</div><div class="line">      <span class="keyword">return</span> sftpATTRS.isDir();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">if</span> (e.getMessage().toLowerCase().equals(<span class="string">"no such file"</span>))</div><div class="line">      &#123;</div><div class="line">        isDirExistFlag = <span class="keyword">false</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> isDirExistFlag;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 删除stfp文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> directory：要删除文件所在目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> deleteFile：要删除的文件</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> sftp</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteSFTP</span><span class="params">(String directory, String deleteFile)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      <span class="comment">// sftp.cd(directory);</span></div><div class="line">      sftp.rm(directory + deleteFile);</div><div class="line">      LOG.info(<span class="string">"delete file success from sftp."</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 如果目录不存在就创建目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> path</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mkdirs</span><span class="params">(String path)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    File f = <span class="keyword">new</span> File(path);</div><div class="line"></div><div class="line">    String fs = f.getParent();</div><div class="line"></div><div class="line">    f = <span class="keyword">new</span> File(fs);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!f.exists())</div><div class="line">    &#123;</div><div class="line">      f.mkdirs();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 列出目录下的文件</span></div><div class="line"><span class="comment">   *</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> directory：要列出的目录</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> sftp</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   * <span class="doctag">@throws</span> SftpException</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> Vector <span class="title">listFiles</span><span class="params">(String directory)</span> <span class="keyword">throws</span> SftpException</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> sftp.ls(directory);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getHost</span><span class="params">()</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> host;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHost</span><span class="params">(String host)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.host = host;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> username;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.username = username;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> password;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.password = password;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPort</span><span class="params">()</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> port;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPort</span><span class="params">(<span class="keyword">int</span> port)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.port = port;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> ChannelSftp <span class="title">getSftp</span><span class="params">()</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">return</span> sftp;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSftp</span><span class="params">(ChannelSftp sftp)</span></span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="keyword">this</span>.sftp = sftp;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**测试</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    SFTPUtils sftp = <span class="keyword">null</span>;</div><div class="line">    <span class="comment">// 本地存放地址</span></div><div class="line">    String localPath = <span class="string">"E:/ftpdownload/"</span>;</div><div class="line">    <span class="comment">// Sftp下载路径</span></div><div class="line">    String sftpPath = <span class="string">"/"</span>;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">      sftp = <span class="keyword">new</span> SFTPUtils(<span class="string">"192.168.0.102"</span>, <span class="number">25</span>, <span class="string">"admin"</span>, <span class="string">"admin"</span>);</div><div class="line">      sftp.connect();</div><div class="line">      <span class="comment">// 下载</span></div><div class="line">      sftp.batchDownLoadFile(sftpPath, localPath, <span class="string">""</span>, <span class="string">".txt"</span>, <span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e)</div><div class="line">    &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">finally</span></div><div class="line">    &#123;</div><div class="line">      sftp.disconnect();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;使用-freeSSHd-在-Windows-下搭建-SFTP-服务器&quot;&gt;&lt;a href=&quot;#使用-freeSSHd-在-Windows-下搭建-SFTP-服务器&quot; class=&quot;headerlink&quot; title=&quot;使用 fre
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="SFTP" scheme="http://yoursite.com/tags/SFTP/"/>
    
  </entry>
  
  <entry>
    <title>使用PGP客户端生成公钥秘钥</title>
    <link href="http://yoursite.com/2017-10-18-201710/2017-10-18_%E4%BD%BF%E7%94%A8PGP%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5%E7%A7%98%E9%92%A5.html"/>
    <id>http://yoursite.com/2017-10-18-201710/2017-10-18_使用PGP客户端生成公钥秘钥.html</id>
    <published>2017-10-18T14:46:13.000Z</published>
    <updated>2020-02-22T15:12:45.303Z</updated>
    
    <content type="html"><![CDATA[<p>近期一个项目中需要使用PGP来加密解密、签名验证签名文件。对方PGP公钥要求如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Key Requirement:</div><div class="line">Standard: OpenPGP Standard or PGP standard</div><div class="line">####################</div><div class="line">Type: RSA</div><div class="line">Size: 4096/4096, 2048/2048</div><div class="line">Expiry Date: Required (Recommended life 5 years)</div><div class="line">Ciphers Allowed: AES , AES256 (Preferred: AES)</div><div class="line">Hashes Allowed: SHA-2-256 (Preferred: SHA-2-256, SHA-1-256 also supported but not recommended by the bank)</div><div class="line">Mode: ASCII mode or Binary mode</div><div class="line">####################</div></pre></td></tr></table></figure></p><a id="more"></a><h3 id="1-什么是PGP呢？"><a href="#1-什么是PGP呢？" class="headerlink" title="1.什么是PGP呢？"></a>1.什么是PGP呢？</h3><p>PGP(Pretty Good Privacy)，是一个基于RSA公钥加密体系的邮件<strong>加密软件</strong>。可以用它对邮件保密以防止非授权者阅读，它还能对邮件加上数字签名从而使收信人可以确认邮件的发送者，并能确信邮件没有被篡改。它可以提供一种安全的通讯方式，而事先并不需要任何保密的渠道用来传递密匙。<br>说白了，PGP就是一系列软件。这些软件可以用来实现以下加密解密、签名验签等功能。其加密机制是基于RSA算法的。</p><h3 id="2-用PGP来干什么呢？"><a href="#2-用PGP来干什么呢？" class="headerlink" title="2.用PGP来干什么呢？"></a>2.用PGP来干什么呢？</h3><p> 最基本的用途：<strong>加密解密数据、签名验签数据。</strong><br> 加密解密：保证数据即使被非法获取，没有对应的密码也无法获取到实际数据内容。<br> 签名验签：保证数据没有被他们非法修改，一旦修改过，无法签签通过。<br> 加密算法：典型的有对称性算法<strong>DES、AES</strong>等，只有一个密码；非对称的有<strong>RSA</strong>等，有两个密码，称为<strong>公钥和秘钥</strong>。</p><h3 id="3-PGP客户端"><a href="#3-PGP客户端" class="headerlink" title="3.PGP客户端"></a>3.PGP客户端</h3><p>PGP是一系列软件，这些软件又可以称为PGP客户端。常见的PGP客户端如下：</p><ul><li>PGP DesktopProfessional(PGP专业桌面版)<br>这可以说是PGP的官方客户端吧，不过现在已经被收购，是收费软件。功能最为强大，应有尽有。这个项目的公钥秘钥就是用这个生成的，非常方便，如下图：<br><img src="http://oexnrs3kx.bkt.clouddn.com/generateKey.PNG" alt="PGP Desktop生成公钥秘钥"></li></ul><hr><ul><li>Portable PGP(<a href="http://sourceforge.net/projects/ppgp/" target="_blank" rel="external">http://sourceforge.net/projects/ppgp/</a>)<br>这是一个免费的PGP客户端，但是功能有限，秘钥长度最大只能<strong>1024</strong>。只提供基本的<strong>秘钥生成、加密解密、签名验签</strong>的功能。<br>操作也很简单，一目了然，主界面如下：<br><img src="http://oexnrs3kx.bkt.clouddn.com/PortablePGP.PNG" alt="PortablePGP主界面"></li></ul><hr><ul><li>GnuPG即GnuPG（GNU Privacy Guard或GPG）<br>GnuPG是一个以GNU通用公共许可证释出的开放源码用于加密或签名的软件，可用来取代PGP。大多数gpg软件仅支持命令行方式，一般人较难掌握。但是官方提供了Windows客户端<strong>gpg4win</strong>(<a href="https://www.gpg4win.org/download.html)，简化了使用难度。" target="_blank" rel="external">https://www.gpg4win.org/download.html)，简化了使用难度。</a><br><strong>gpg4win</strong>主界面如下：<br><img src="http://oexnrs3kx.bkt.clouddn.com/gpg4win.PNG" alt="gpg4win主界面"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期一个项目中需要使用PGP来加密解密、签名验证签名文件。对方PGP公钥要求如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Key Requirement:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Standard: OpenPGP Standard or PGP standard&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;####################&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Type: RSA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Size: 4096/4096, 2048/2048&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Expiry Date: Required (Recommended life 5 years)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Ciphers Allowed: AES , AES256 (Preferred: AES)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Hashes Allowed: SHA-2-256 (Preferred: SHA-2-256, SHA-1-256 also supported but not recommended by the bank)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Mode: ASCII mode or Binary mode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;####################&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="加解密技术" scheme="http://yoursite.com/categories/%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="PGP" scheme="http://yoursite.com/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>为时不晚</title>
    <link href="http://yoursite.com/2017-10-10-201710/2017-10-10_%E4%B8%BA%E6%97%B6%E4%B8%8D%E6%99%9A.html"/>
    <id>http://yoursite.com/2017-10-10-201710/2017-10-10_为时不晚.html</id>
    <published>2017-10-10T10:49:40.000Z</published>
    <updated>2020-02-22T15:11:41.167Z</updated>
    
    <content type="html"><![CDATA[<p>从现在开始，一切都为时不晚。<br><a id="more"></a><br>记得之前听过一句话“每当你觉得为时已晚的时候，恰恰是最早的时候”。但一而再再而三的如此觉得的时候，就真的为时已晚了。最近或者说今年状态都好差，今年已经过去3/4，回想这一年，我都不知道我干了什么。昨晚看到 Monniya 的博客，发现或许每个牛人也会有自己的低潮期，也会短期沉迷于直接短期的刺激，不同点在于他们能够快速走出低潮期。博客从一开始建立到现在，一度废弃，今天再次重建起来，希望激励自己走出沉迷，继续前行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从现在开始，一切都为时不晚。&lt;br&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://yoursite.com/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
